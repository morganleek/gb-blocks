/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/*!***********************!*\
  !*** ./src/blocks.js ***!
  \***********************/
/*! no exports provided */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__menu_menu_js__ = __webpack_require__(/*! ./menu/menu.js */ 2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__map_map_js__ = __webpack_require__(/*! ./map/map.js */ 5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__posts_posts_js__ = __webpack_require__(/*! ./posts/posts.js */ 15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__gallery_gallery_js__ = __webpack_require__(/*! ./gallery/gallery.js */ 18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__attributes_attributes_js__ = __webpack_require__(/*! ./attributes/attributes.js */ 21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__accordion_accordion_js__ = __webpack_require__(/*! ./accordion/accordion.js */ 23);\n/**\n * Gutenberg Blocks\n *\n * All blocks related JavaScript files should be imported here.\n * You can create a new block folder in this dir and include code\n * for that block here as well.\n *\n * All blocks should be included here since this is the file that\n * Webpack is compiling as the input file.\n */\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9ibG9ja3MuanM/N2I1YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEd1dGVuYmVyZyBCbG9ja3NcbiAqXG4gKiBBbGwgYmxvY2tzIHJlbGF0ZWQgSmF2YVNjcmlwdCBmaWxlcyBzaG91bGQgYmUgaW1wb3J0ZWQgaGVyZS5cbiAqIFlvdSBjYW4gY3JlYXRlIGEgbmV3IGJsb2NrIGZvbGRlciBpbiB0aGlzIGRpciBhbmQgaW5jbHVkZSBjb2RlXG4gKiBmb3IgdGhhdCBibG9jayBoZXJlIGFzIHdlbGwuXG4gKlxuICogQWxsIGJsb2NrcyBzaG91bGQgYmUgaW5jbHVkZWQgaGVyZSBzaW5jZSB0aGlzIGlzIHRoZSBmaWxlIHRoYXRcbiAqIFdlYnBhY2sgaXMgY29tcGlsaW5nIGFzIHRoZSBpbnB1dCBmaWxlLlxuICovXG5cbmltcG9ydCAnLi9tZW51L21lbnUuanMnO1xuaW1wb3J0ICcuL21hcC9tYXAuanMnO1xuaW1wb3J0ICcuL3Bvc3RzL3Bvc3RzLmpzJztcbmltcG9ydCAnLi9nYWxsZXJ5L2dhbGxlcnkuanMnO1xuaW1wb3J0ICcuL2F0dHJpYnV0ZXMvYXR0cmlidXRlcy5qcyc7XG5pbXBvcnQgJy4vYWNjb3JkaW9uL2FjY29yZGlvbi5qcyc7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvYmxvY2tzLmpzXG4vLyBtb2R1bGUgaWQgPSAxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/*!**************************!*\
  !*** ./src/menu/menu.js ***!
  \**************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__editor_scss__ = __webpack_require__(/*! ./editor.scss */ 3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__editor_scss__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__style_scss__ = __webpack_require__(/*! ./style.scss */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__style_scss__);\n\n\n\nvar __ = wp.i18n.__;\nvar registerBlockType = wp.blocks.registerBlockType;\nvar _wp$blockEditor = wp.blockEditor,\n    useBlockProps = _wp$blockEditor.useBlockProps,\n    InspectorControls = _wp$blockEditor.InspectorControls;\nvar SelectControl = wp.components.SelectControl;\nvar _wp = wp,\n    ServerSideRender = _wp.serverSideRender;\nvar _wp$components = wp.components,\n    Panel = _wp$components.Panel,\n    PanelBody = _wp$components.PanelBody,\n    PanelRow = _wp$components.PanelRow;\nvar _wordpressIcons = '@wordpress/icons',\n    more = _wordpressIcons.more;\n\n\nregisterBlockType('gb/block-gb-menu', {\n\tapiVersion: 2,\n\ttitle: __('Menu'),\n\ticon: 'menu',\n\tcategory: 'common',\n\tkeywords: [__('Menu'), __('Appearance')],\n\tattributes: {\n\t\tmenu: {\n\t\t\ttype: 'string',\n\t\t\tdefault: \"\"\n\t\t},\n\t\tmenusAvailable: {\n\t\t\ttype: 'array',\n\t\t\tdefault: null\n\t\t}\n\t},\n\n\tedit: function edit(props) {\n\t\tvar attributes = props.attributes,\n\t\t    setAttributes = props.setAttributes;\n\n\t\tif (attributes.menusAvailable == null) {\n\t\t\tattributes.menusAvailable = gbGlobal.siteMenus;\n\t\t\tattributes.menusAvailable.unshift({ value: null, label: 'Select a menu' });\n\t\t}\n\n\t\tvar onUpdateMenu = function onUpdateMenu(newMenu) {\n\t\t\tsetAttributes({ menu: newMenu });\n\t\t};\n\n\t\tvar blockProps = useBlockProps();\n\n\t\tvar blockRender = void 0;\n\n\t\tif (attributes.menu) {\n\t\t\tblockRender = wp.element.createElement(ServerSideRender, {\n\t\t\t\tblock: 'gb/block-gb-menu',\n\t\t\t\tattributes: {\n\t\t\t\t\tmenu: attributes.menu,\n\t\t\t\t\tclassName: blockProps.className\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tblockRender = wp.element.createElement(\n\t\t\t\t'p',\n\t\t\t\tnull,\n\t\t\t\t'Select a menu'\n\t\t\t);\n\t\t}\n\n\t\treturn wp.element.createElement(\n\t\t\t'div',\n\t\t\tblockProps,\n\t\t\twp.element.createElement(\n\t\t\t\tInspectorControls,\n\t\t\t\tnull,\n\t\t\t\twp.element.createElement(\n\t\t\t\t\tPanel,\n\t\t\t\t\t{ header: 'Menu' },\n\t\t\t\t\twp.element.createElement(\n\t\t\t\t\t\tPanelBody,\n\t\t\t\t\t\t{ title: 'Menu Settings', icon: more, initialOpen: true },\n\t\t\t\t\t\twp.element.createElement(\n\t\t\t\t\t\t\tPanelRow,\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\twp.element.createElement(SelectControl, {\n\t\t\t\t\t\t\t\tlabel: __('Select a menu: '),\n\t\t\t\t\t\t\t\tonChange: onUpdateMenu,\n\t\t\t\t\t\t\t\tvalue: attributes.menu,\n\t\t\t\t\t\t\t\toptions: attributes.menusAvailable\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t),\n\t\t\tblockRender\n\t\t);\n\t}\n});\n\n// <InspectorControls key=\"setting\">\n// \t<PanelBody>\n// \t\t<PanelRow>\n// \t\t\t<p>Hello</p>\n// \t\t</PanelRow>\n// \t</PanelBody>\n// </InspectorControls>//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9tZW51L21lbnUuanM/NmI3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4vZWRpdG9yLnNjc3MnO1xuaW1wb3J0ICcuL3N0eWxlLnNjc3MnO1xuXG52YXIgX18gPSB3cC5pMThuLl9fO1xudmFyIHJlZ2lzdGVyQmxvY2tUeXBlID0gd3AuYmxvY2tzLnJlZ2lzdGVyQmxvY2tUeXBlO1xudmFyIF93cCRibG9ja0VkaXRvciA9IHdwLmJsb2NrRWRpdG9yLFxuICAgIHVzZUJsb2NrUHJvcHMgPSBfd3AkYmxvY2tFZGl0b3IudXNlQmxvY2tQcm9wcyxcbiAgICBJbnNwZWN0b3JDb250cm9scyA9IF93cCRibG9ja0VkaXRvci5JbnNwZWN0b3JDb250cm9scztcbnZhciBTZWxlY3RDb250cm9sID0gd3AuY29tcG9uZW50cy5TZWxlY3RDb250cm9sO1xudmFyIF93cCA9IHdwLFxuICAgIFNlcnZlclNpZGVSZW5kZXIgPSBfd3Auc2VydmVyU2lkZVJlbmRlcjtcbnZhciBfd3AkY29tcG9uZW50cyA9IHdwLmNvbXBvbmVudHMsXG4gICAgUGFuZWwgPSBfd3AkY29tcG9uZW50cy5QYW5lbCxcbiAgICBQYW5lbEJvZHkgPSBfd3AkY29tcG9uZW50cy5QYW5lbEJvZHksXG4gICAgUGFuZWxSb3cgPSBfd3AkY29tcG9uZW50cy5QYW5lbFJvdztcbnZhciBfd29yZHByZXNzSWNvbnMgPSAnQHdvcmRwcmVzcy9pY29ucycsXG4gICAgbW9yZSA9IF93b3JkcHJlc3NJY29ucy5tb3JlO1xuXG5cbnJlZ2lzdGVyQmxvY2tUeXBlKCdnYi9ibG9jay1nYi1tZW51Jywge1xuXHRhcGlWZXJzaW9uOiAyLFxuXHR0aXRsZTogX18oJ01lbnUnKSxcblx0aWNvbjogJ21lbnUnLFxuXHRjYXRlZ29yeTogJ2NvbW1vbicsXG5cdGtleXdvcmRzOiBbX18oJ01lbnUnKSwgX18oJ0FwcGVhcmFuY2UnKV0sXG5cdGF0dHJpYnV0ZXM6IHtcblx0XHRtZW51OiB7XG5cdFx0XHR0eXBlOiAnc3RyaW5nJyxcblx0XHRcdGRlZmF1bHQ6IFwiXCJcblx0XHR9LFxuXHRcdG1lbnVzQXZhaWxhYmxlOiB7XG5cdFx0XHR0eXBlOiAnYXJyYXknLFxuXHRcdFx0ZGVmYXVsdDogbnVsbFxuXHRcdH1cblx0fSxcblxuXHRlZGl0OiBmdW5jdGlvbiBlZGl0KHByb3BzKSB7XG5cdFx0dmFyIGF0dHJpYnV0ZXMgPSBwcm9wcy5hdHRyaWJ1dGVzLFxuXHRcdCAgICBzZXRBdHRyaWJ1dGVzID0gcHJvcHMuc2V0QXR0cmlidXRlcztcblxuXHRcdGlmIChhdHRyaWJ1dGVzLm1lbnVzQXZhaWxhYmxlID09IG51bGwpIHtcblx0XHRcdGF0dHJpYnV0ZXMubWVudXNBdmFpbGFibGUgPSBnYkdsb2JhbC5zaXRlTWVudXM7XG5cdFx0XHRhdHRyaWJ1dGVzLm1lbnVzQXZhaWxhYmxlLnVuc2hpZnQoeyB2YWx1ZTogbnVsbCwgbGFiZWw6ICdTZWxlY3QgYSBtZW51JyB9KTtcblx0XHR9XG5cblx0XHR2YXIgb25VcGRhdGVNZW51ID0gZnVuY3Rpb24gb25VcGRhdGVNZW51KG5ld01lbnUpIHtcblx0XHRcdHNldEF0dHJpYnV0ZXMoeyBtZW51OiBuZXdNZW51IH0pO1xuXHRcdH07XG5cblx0XHR2YXIgYmxvY2tQcm9wcyA9IHVzZUJsb2NrUHJvcHMoKTtcblxuXHRcdHZhciBibG9ja1JlbmRlciA9IHZvaWQgMDtcblxuXHRcdGlmIChhdHRyaWJ1dGVzLm1lbnUpIHtcblx0XHRcdGJsb2NrUmVuZGVyID0gd3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KFNlcnZlclNpZGVSZW5kZXIsIHtcblx0XHRcdFx0YmxvY2s6ICdnYi9ibG9jay1nYi1tZW51Jyxcblx0XHRcdFx0YXR0cmlidXRlczoge1xuXHRcdFx0XHRcdG1lbnU6IGF0dHJpYnV0ZXMubWVudSxcblx0XHRcdFx0XHRjbGFzc05hbWU6IGJsb2NrUHJvcHMuY2xhc3NOYW1lXG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRibG9ja1JlbmRlciA9IHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChcblx0XHRcdFx0J3AnLFxuXHRcdFx0XHRudWxsLFxuXHRcdFx0XHQnU2VsZWN0IGEgbWVudSdcblx0XHRcdCk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChcblx0XHRcdCdkaXYnLFxuXHRcdFx0YmxvY2tQcm9wcyxcblx0XHRcdHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChcblx0XHRcdFx0SW5zcGVjdG9yQ29udHJvbHMsXG5cdFx0XHRcdG51bGwsXG5cdFx0XHRcdHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChcblx0XHRcdFx0XHRQYW5lbCxcblx0XHRcdFx0XHR7IGhlYWRlcjogJ01lbnUnIH0sXG5cdFx0XHRcdFx0d3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KFxuXHRcdFx0XHRcdFx0UGFuZWxCb2R5LFxuXHRcdFx0XHRcdFx0eyB0aXRsZTogJ01lbnUgU2V0dGluZ3MnLCBpY29uOiBtb3JlLCBpbml0aWFsT3BlbjogdHJ1ZSB9LFxuXHRcdFx0XHRcdFx0d3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KFxuXHRcdFx0XHRcdFx0XHRQYW5lbFJvdyxcblx0XHRcdFx0XHRcdFx0bnVsbCxcblx0XHRcdFx0XHRcdFx0d3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KFNlbGVjdENvbnRyb2wsIHtcblx0XHRcdFx0XHRcdFx0XHRsYWJlbDogX18oJ1NlbGVjdCBhIG1lbnU6ICcpLFxuXHRcdFx0XHRcdFx0XHRcdG9uQ2hhbmdlOiBvblVwZGF0ZU1lbnUsXG5cdFx0XHRcdFx0XHRcdFx0dmFsdWU6IGF0dHJpYnV0ZXMubWVudSxcblx0XHRcdFx0XHRcdFx0XHRvcHRpb25zOiBhdHRyaWJ1dGVzLm1lbnVzQXZhaWxhYmxlXG5cdFx0XHRcdFx0XHRcdH0pXG5cdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpXG5cdFx0XHQpLFxuXHRcdFx0YmxvY2tSZW5kZXJcblx0XHQpO1xuXHR9XG59KTtcblxuLy8gPEluc3BlY3RvckNvbnRyb2xzIGtleT1cInNldHRpbmdcIj5cbi8vIFx0PFBhbmVsQm9keT5cbi8vIFx0XHQ8UGFuZWxSb3c+XG4vLyBcdFx0XHQ8cD5IZWxsbzwvcD5cbi8vIFx0XHQ8L1BhbmVsUm93PlxuLy8gXHQ8L1BhbmVsQm9keT5cbi8vIDwvSW5zcGVjdG9yQ29udHJvbHM+XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbWVudS9tZW51LmpzXG4vLyBtb2R1bGUgaWQgPSAyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/*!******************************!*\
  !*** ./src/menu/editor.scss ***!
  \******************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9tZW51L2VkaXRvci5zY3NzPzI1YmEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9tZW51L2VkaXRvci5zY3NzXG4vLyBtb2R1bGUgaWQgPSAzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/*!*****************************!*\
  !*** ./src/menu/style.scss ***!
  \*****************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9tZW51L3N0eWxlLnNjc3M/YTBjMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL21lbnUvc3R5bGUuc2Nzc1xuLy8gbW9kdWxlIGlkID0gNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/*!************************!*\
  !*** ./src/map/map.js ***!
  \************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__editor_scss__ = __webpack_require__(/*! ./editor.scss */ 6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__editor_scss__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__style_scss__ = __webpack_require__(/*! ./style.scss */ 7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__style_scss__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__react_google_maps_api__ = __webpack_require__(/*! @react-google-maps/api */ 8);\n\n\n\n\n\nvar __ = wp.i18n.__;\nvar registerBlockType = wp.blocks.registerBlockType;\nvar _wp$blockEditor = wp.blockEditor,\n    useBlockProps = _wp$blockEditor.useBlockProps,\n    InspectorControls = _wp$blockEditor.InspectorControls;\nvar TextControl = wp.components.TextControl;\nvar _wp = wp,\n    ServerSideRender = _wp.serverSideRender;\nvar _wp$components = wp.components,\n    Panel = _wp$components.Panel,\n    PanelBody = _wp$components.PanelBody,\n    PanelRow = _wp$components.PanelRow;\nvar _wordpressIcons = '@wordpress/icons',\n    more = _wordpressIcons.more;\n\n\nregisterBlockType('gb/block-map', {\n\tapiVersion: 2,\n\ttitle: __('Map'),\n\ticon: 'admin-site-alt2',\n\tcategory: 'common',\n\tkeywords: [__('Map'), __('Appearance')],\n\tattributes: {\n\t\tkey: {\n\t\t\ttype: 'string',\n\t\t\tdefault: \"Key\"\n\t\t},\n\t\tzoom: {\n\t\t\ttype: 'string',\n\t\t\tdefault: \"12\"\n\t\t},\n\t\tlat: {\n\t\t\ttype: 'string',\n\t\t\tdefault: \"-31.0\"\n\t\t},\n\t\tlng: {\n\t\t\ttype: 'string',\n\t\t\tdefault: \"128.0\"\n\t\t},\n\t\ttitle: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tmediaType: {\n\t\t\ttype: 'string'\n\t\t},\n\t\tmediaUrl: {\n\t\t\ttype: 'string'\n\t\t},\n\t\ticonWidth: {\n\t\t\ttype: 'string',\n\t\t\tdefault: \"32\"\n\t\t},\n\t\ticonHeight: {\n\t\t\ttype: 'string',\n\t\t\tdefault: \"32\"\n\t\t}\n\t},\n\n\tedit: function edit(props) {\n\t\tvar attributes = props.attributes,\n\t\t    setAttributes = props.setAttributes;\n\n\n\t\tvar blockProps = useBlockProps();\n\n\t\t// let blockRender;\n\t\t// if( attributes.key ) {\n\t\tvar blockRender = wp.element.createElement(ServerSideRender, {\n\t\t\tblock: 'gb/block-map',\n\t\t\tattributes: {\n\t\t\t\tkey: attributes.key,\n\t\t\t\tzoom: attributes.zoom,\n\t\t\t\tlat: attributes.lat,\n\t\t\t\tlng: attributes.lng,\n\t\t\t\ttitle: attributes.title,\n\t\t\t\tmediaUrl: attributes.mediaUrl,\n\t\t\t\ticonWidth: attributes.iconWidth,\n\t\t\t\ticonHeight: attributes.iconHeight\n\t\t\t}\n\t\t});\n\t\t// }\n\t\t// else {\n\t\t// \tblockRender = <p>Enter a key, zoom, lat and lng.</p>\n\t\t// }\n\n\t\tvar center = {\n\t\t\tlat: attributes.lat ? parseFloat(attributes.lat) : 0,\n\t\t\tlng: attributes.lng ? parseFloat(attributes.lng) : 0\n\t\t};\n\t\tvar marker = wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__react_google_maps_api__[\"c\" /* Marker */], { position: center, label: attributes.label });\n\t\tvar map = attributes.key ? wp.element.createElement(\n\t\t\t'div',\n\t\t\t{ 'class': 'map-wrapper' },\n\t\t\twp.element.createElement(\n\t\t\t\t__WEBPACK_IMPORTED_MODULE_2__react_google_maps_api__[\"b\" /* LoadScript */],\n\t\t\t\t{\n\t\t\t\t\tgoogleMapsApiKey: attributes.key\n\t\t\t\t},\n\t\t\t\twp.element.createElement(\n\t\t\t\t\t__WEBPACK_IMPORTED_MODULE_2__react_google_maps_api__[\"a\" /* GoogleMap */],\n\t\t\t\t\t{\n\t\t\t\t\t\tcenter: center,\n\t\t\t\t\t\tzoom: attributes.zoom ? parseFloat(attributes.zoom) : 12\n\t\t\t\t\t},\n\t\t\t\t\tmarker\n\t\t\t\t)\n\t\t\t)\n\t\t) : wp.element.createElement(\n\t\t\t'p',\n\t\t\tnull,\n\t\t\t'Enter a valid API key'\n\t\t);\n\n\t\treturn wp.element.createElement(\n\t\t\t'div',\n\t\t\tblockProps,\n\t\t\twp.element.createElement(\n\t\t\t\tInspectorControls,\n\t\t\t\tnull,\n\t\t\t\twp.element.createElement(\n\t\t\t\t\tPanelBody,\n\t\t\t\t\t{ title: 'Map Settings', icon: more, initialOpen: true },\n\t\t\t\t\twp.element.createElement(TextControl, {\n\t\t\t\t\t\tlabel: 'Key',\n\t\t\t\t\t\tvalue: attributes.key,\n\t\t\t\t\t\tonChange: function onChange(newKey) {\n\t\t\t\t\t\t\treturn setAttributes({ key: newKey });\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\twp.element.createElement(TextControl, {\n\t\t\t\t\t\tlabel: 'Zoom',\n\t\t\t\t\t\tvalue: attributes.zoom,\n\t\t\t\t\t\tonChange: function onChange(newZoom) {\n\t\t\t\t\t\t\treturn setAttributes({ zoom: newZoom });\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\twp.element.createElement(TextControl, {\n\t\t\t\t\t\tlabel: 'Lat',\n\t\t\t\t\t\tvalue: attributes.lat,\n\t\t\t\t\t\tonChange: function onChange(newLat) {\n\t\t\t\t\t\t\treturn setAttributes({ lat: newLat });\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\twp.element.createElement(TextControl, {\n\t\t\t\t\t\tlabel: 'Lng',\n\t\t\t\t\t\tvalue: attributes.lng,\n\t\t\t\t\t\tonChange: function onChange(newLng) {\n\t\t\t\t\t\t\treturn setAttributes({ lng: newLng });\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\twp.element.createElement(TextControl, {\n\t\t\t\t\t\tlabel: 'Title',\n\t\t\t\t\t\tvalue: attributes.title,\n\t\t\t\t\t\tonChange: function onChange(newtitle) {\n\t\t\t\t\t\t\treturn setAttributes({ title: newtitle });\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\twp.element.createElement(TextControl, {\n\t\t\t\t\t\tlabel: 'Icon URL',\n\t\t\t\t\t\tvalue: attributes.mediaUrl,\n\t\t\t\t\t\tonChange: function onChange(newUrl) {\n\t\t\t\t\t\t\treturn setAttributes({ mediaUrl: newUrl });\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\twp.element.createElement(TextControl, {\n\t\t\t\t\t\tlabel: 'Icon Width',\n\t\t\t\t\t\tvalue: attributes.iconWidth,\n\t\t\t\t\t\tonChange: function onChange(newWidth) {\n\t\t\t\t\t\t\treturn setAttributes({ iconWidth: newWidth });\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\twp.element.createElement(TextControl, {\n\t\t\t\t\t\tlabel: 'Icon Height',\n\t\t\t\t\t\tvalue: attributes.iconHeight,\n\t\t\t\t\t\tonChange: function onChange(newHeight) {\n\t\t\t\t\t\t\treturn setAttributes({ iconHeight: newHeight });\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t),\n\t\t\tmap\n\t\t);\n\t},\n\tsave: function save(props) {\n\t\tvar attributes = props.attributes;\n\n\t\tvar blockProps = useBlockProps.save();\n\n\t\tvar center = {\n\t\t\tlat: attributes.lat ? parseFloat(attributes.lat) : 0,\n\t\t\tlng: attributes.lng ? parseFloat(attributes.lng) : 0\n\t\t};\n\t\tvar marker = wp.element.createElement(__WEBPACK_IMPORTED_MODULE_2__react_google_maps_api__[\"c\" /* Marker */], { position: center, label: attributes.label });\n\t\tvar map = attributes.key ? wp.element.createElement(\n\t\t\t'div',\n\t\t\t{ 'class': 'map-wrapper' },\n\t\t\twp.element.createElement(\n\t\t\t\t'p',\n\t\t\t\tnull,\n\t\t\t\t'Hello'\n\t\t\t)\n\t\t) : wp.element.createElement(\n\t\t\t'p',\n\t\t\tnull,\n\t\t\t'Enter a valid API key'\n\t\t);\n\n\t\treturn wp.element.createElement(\n\t\t\t'div',\n\t\t\tblockProps,\n\t\t\twp.element.createElement('div', { 'class': 'gb-map',\n\t\t\t\t'data-key': attributes.key,\n\t\t\t\t'data-lat': attributes.lat,\n\t\t\t\t'data-lng': attributes.lng,\n\t\t\t\t'data-zoom': attributes.zoom,\n\t\t\t\t'data-title': attributes.title,\n\t\t\t\t'data-media-url': attributes.mediaUrl,\n\t\t\t\t'data-icon-width': attributes.iconWidth,\n\t\t\t\t'data-icon-height': attributes.iconHeight\n\t\t\t})\n\t\t);\n\t}\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9tYXAvbWFwLmpzPzI5OWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuL2VkaXRvci5zY3NzJztcbmltcG9ydCAnLi9zdHlsZS5zY3NzJztcblxuaW1wb3J0IHsgR29vZ2xlTWFwLCBMb2FkU2NyaXB0LCBNYXJrZXIgfSBmcm9tICdAcmVhY3QtZ29vZ2xlLW1hcHMvYXBpJztcblxudmFyIF9fID0gd3AuaTE4bi5fXztcbnZhciByZWdpc3RlckJsb2NrVHlwZSA9IHdwLmJsb2Nrcy5yZWdpc3RlckJsb2NrVHlwZTtcbnZhciBfd3AkYmxvY2tFZGl0b3IgPSB3cC5ibG9ja0VkaXRvcixcbiAgICB1c2VCbG9ja1Byb3BzID0gX3dwJGJsb2NrRWRpdG9yLnVzZUJsb2NrUHJvcHMsXG4gICAgSW5zcGVjdG9yQ29udHJvbHMgPSBfd3AkYmxvY2tFZGl0b3IuSW5zcGVjdG9yQ29udHJvbHM7XG52YXIgVGV4dENvbnRyb2wgPSB3cC5jb21wb25lbnRzLlRleHRDb250cm9sO1xudmFyIF93cCA9IHdwLFxuICAgIFNlcnZlclNpZGVSZW5kZXIgPSBfd3Auc2VydmVyU2lkZVJlbmRlcjtcbnZhciBfd3AkY29tcG9uZW50cyA9IHdwLmNvbXBvbmVudHMsXG4gICAgUGFuZWwgPSBfd3AkY29tcG9uZW50cy5QYW5lbCxcbiAgICBQYW5lbEJvZHkgPSBfd3AkY29tcG9uZW50cy5QYW5lbEJvZHksXG4gICAgUGFuZWxSb3cgPSBfd3AkY29tcG9uZW50cy5QYW5lbFJvdztcbnZhciBfd29yZHByZXNzSWNvbnMgPSAnQHdvcmRwcmVzcy9pY29ucycsXG4gICAgbW9yZSA9IF93b3JkcHJlc3NJY29ucy5tb3JlO1xuXG5cbnJlZ2lzdGVyQmxvY2tUeXBlKCdnYi9ibG9jay1tYXAnLCB7XG5cdGFwaVZlcnNpb246IDIsXG5cdHRpdGxlOiBfXygnTWFwJyksXG5cdGljb246ICdhZG1pbi1zaXRlLWFsdDInLFxuXHRjYXRlZ29yeTogJ2NvbW1vbicsXG5cdGtleXdvcmRzOiBbX18oJ01hcCcpLCBfXygnQXBwZWFyYW5jZScpXSxcblx0YXR0cmlidXRlczoge1xuXHRcdGtleToge1xuXHRcdFx0dHlwZTogJ3N0cmluZycsXG5cdFx0XHRkZWZhdWx0OiBcIktleVwiXG5cdFx0fSxcblx0XHR6b29tOiB7XG5cdFx0XHR0eXBlOiAnc3RyaW5nJyxcblx0XHRcdGRlZmF1bHQ6IFwiMTJcIlxuXHRcdH0sXG5cdFx0bGF0OiB7XG5cdFx0XHR0eXBlOiAnc3RyaW5nJyxcblx0XHRcdGRlZmF1bHQ6IFwiLTMxLjBcIlxuXHRcdH0sXG5cdFx0bG5nOiB7XG5cdFx0XHR0eXBlOiAnc3RyaW5nJyxcblx0XHRcdGRlZmF1bHQ6IFwiMTI4LjBcIlxuXHRcdH0sXG5cdFx0dGl0bGU6IHtcblx0XHRcdHR5cGU6ICdzdHJpbmcnLFxuXHRcdFx0ZGVmYXVsdDogJydcblx0XHR9LFxuXHRcdG1lZGlhVHlwZToge1xuXHRcdFx0dHlwZTogJ3N0cmluZydcblx0XHR9LFxuXHRcdG1lZGlhVXJsOiB7XG5cdFx0XHR0eXBlOiAnc3RyaW5nJ1xuXHRcdH0sXG5cdFx0aWNvbldpZHRoOiB7XG5cdFx0XHR0eXBlOiAnc3RyaW5nJyxcblx0XHRcdGRlZmF1bHQ6IFwiMzJcIlxuXHRcdH0sXG5cdFx0aWNvbkhlaWdodDoge1xuXHRcdFx0dHlwZTogJ3N0cmluZycsXG5cdFx0XHRkZWZhdWx0OiBcIjMyXCJcblx0XHR9XG5cdH0sXG5cblx0ZWRpdDogZnVuY3Rpb24gZWRpdChwcm9wcykge1xuXHRcdHZhciBhdHRyaWJ1dGVzID0gcHJvcHMuYXR0cmlidXRlcyxcblx0XHQgICAgc2V0QXR0cmlidXRlcyA9IHByb3BzLnNldEF0dHJpYnV0ZXM7XG5cblxuXHRcdHZhciBibG9ja1Byb3BzID0gdXNlQmxvY2tQcm9wcygpO1xuXG5cdFx0Ly8gbGV0IGJsb2NrUmVuZGVyO1xuXHRcdC8vIGlmKCBhdHRyaWJ1dGVzLmtleSApIHtcblx0XHR2YXIgYmxvY2tSZW5kZXIgPSB3cC5lbGVtZW50LmNyZWF0ZUVsZW1lbnQoU2VydmVyU2lkZVJlbmRlciwge1xuXHRcdFx0YmxvY2s6ICdnYi9ibG9jay1tYXAnLFxuXHRcdFx0YXR0cmlidXRlczoge1xuXHRcdFx0XHRrZXk6IGF0dHJpYnV0ZXMua2V5LFxuXHRcdFx0XHR6b29tOiBhdHRyaWJ1dGVzLnpvb20sXG5cdFx0XHRcdGxhdDogYXR0cmlidXRlcy5sYXQsXG5cdFx0XHRcdGxuZzogYXR0cmlidXRlcy5sbmcsXG5cdFx0XHRcdHRpdGxlOiBhdHRyaWJ1dGVzLnRpdGxlLFxuXHRcdFx0XHRtZWRpYVVybDogYXR0cmlidXRlcy5tZWRpYVVybCxcblx0XHRcdFx0aWNvbldpZHRoOiBhdHRyaWJ1dGVzLmljb25XaWR0aCxcblx0XHRcdFx0aWNvbkhlaWdodDogYXR0cmlidXRlcy5pY29uSGVpZ2h0XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0Ly8gfVxuXHRcdC8vIGVsc2Uge1xuXHRcdC8vIFx0YmxvY2tSZW5kZXIgPSA8cD5FbnRlciBhIGtleSwgem9vbSwgbGF0IGFuZCBsbmcuPC9wPlxuXHRcdC8vIH1cblxuXHRcdHZhciBjZW50ZXIgPSB7XG5cdFx0XHRsYXQ6IGF0dHJpYnV0ZXMubGF0ID8gcGFyc2VGbG9hdChhdHRyaWJ1dGVzLmxhdCkgOiAwLFxuXHRcdFx0bG5nOiBhdHRyaWJ1dGVzLmxuZyA/IHBhcnNlRmxvYXQoYXR0cmlidXRlcy5sbmcpIDogMFxuXHRcdH07XG5cdFx0dmFyIG1hcmtlciA9IHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChNYXJrZXIsIHsgcG9zaXRpb246IGNlbnRlciwgbGFiZWw6IGF0dHJpYnV0ZXMubGFiZWwgfSk7XG5cdFx0dmFyIG1hcCA9IGF0dHJpYnV0ZXMua2V5ID8gd3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KFxuXHRcdFx0J2RpdicsXG5cdFx0XHR7ICdjbGFzcyc6ICdtYXAtd3JhcHBlcicgfSxcblx0XHRcdHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChcblx0XHRcdFx0TG9hZFNjcmlwdCxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGdvb2dsZU1hcHNBcGlLZXk6IGF0dHJpYnV0ZXMua2V5XG5cdFx0XHRcdH0sXG5cdFx0XHRcdHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChcblx0XHRcdFx0XHRHb29nbGVNYXAsXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0Y2VudGVyOiBjZW50ZXIsXG5cdFx0XHRcdFx0XHR6b29tOiBhdHRyaWJ1dGVzLnpvb20gPyBwYXJzZUZsb2F0KGF0dHJpYnV0ZXMuem9vbSkgOiAxMlxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0bWFya2VyXG5cdFx0XHRcdClcblx0XHRcdClcblx0XHQpIDogd3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KFxuXHRcdFx0J3AnLFxuXHRcdFx0bnVsbCxcblx0XHRcdCdFbnRlciBhIHZhbGlkIEFQSSBrZXknXG5cdFx0KTtcblxuXHRcdHJldHVybiB3cC5lbGVtZW50LmNyZWF0ZUVsZW1lbnQoXG5cdFx0XHQnZGl2Jyxcblx0XHRcdGJsb2NrUHJvcHMsXG5cdFx0XHR3cC5lbGVtZW50LmNyZWF0ZUVsZW1lbnQoXG5cdFx0XHRcdEluc3BlY3RvckNvbnRyb2xzLFxuXHRcdFx0XHRudWxsLFxuXHRcdFx0XHR3cC5lbGVtZW50LmNyZWF0ZUVsZW1lbnQoXG5cdFx0XHRcdFx0UGFuZWxCb2R5LFxuXHRcdFx0XHRcdHsgdGl0bGU6ICdNYXAgU2V0dGluZ3MnLCBpY29uOiBtb3JlLCBpbml0aWFsT3BlbjogdHJ1ZSB9LFxuXHRcdFx0XHRcdHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChUZXh0Q29udHJvbCwge1xuXHRcdFx0XHRcdFx0bGFiZWw6ICdLZXknLFxuXHRcdFx0XHRcdFx0dmFsdWU6IGF0dHJpYnV0ZXMua2V5LFxuXHRcdFx0XHRcdFx0b25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKG5ld0tleSkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gc2V0QXR0cmlidXRlcyh7IGtleTogbmV3S2V5IH0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pLFxuXHRcdFx0XHRcdHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChUZXh0Q29udHJvbCwge1xuXHRcdFx0XHRcdFx0bGFiZWw6ICdab29tJyxcblx0XHRcdFx0XHRcdHZhbHVlOiBhdHRyaWJ1dGVzLnpvb20sXG5cdFx0XHRcdFx0XHRvbkNoYW5nZTogZnVuY3Rpb24gb25DaGFuZ2UobmV3Wm9vbSkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gc2V0QXR0cmlidXRlcyh7IHpvb206IG5ld1pvb20gfSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSksXG5cdFx0XHRcdFx0d3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KFRleHRDb250cm9sLCB7XG5cdFx0XHRcdFx0XHRsYWJlbDogJ0xhdCcsXG5cdFx0XHRcdFx0XHR2YWx1ZTogYXR0cmlidXRlcy5sYXQsXG5cdFx0XHRcdFx0XHRvbkNoYW5nZTogZnVuY3Rpb24gb25DaGFuZ2UobmV3TGF0KSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBzZXRBdHRyaWJ1dGVzKHsgbGF0OiBuZXdMYXQgfSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSksXG5cdFx0XHRcdFx0d3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KFRleHRDb250cm9sLCB7XG5cdFx0XHRcdFx0XHRsYWJlbDogJ0xuZycsXG5cdFx0XHRcdFx0XHR2YWx1ZTogYXR0cmlidXRlcy5sbmcsXG5cdFx0XHRcdFx0XHRvbkNoYW5nZTogZnVuY3Rpb24gb25DaGFuZ2UobmV3TG5nKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBzZXRBdHRyaWJ1dGVzKHsgbG5nOiBuZXdMbmcgfSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSksXG5cdFx0XHRcdFx0d3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KFRleHRDb250cm9sLCB7XG5cdFx0XHRcdFx0XHRsYWJlbDogJ1RpdGxlJyxcblx0XHRcdFx0XHRcdHZhbHVlOiBhdHRyaWJ1dGVzLnRpdGxlLFxuXHRcdFx0XHRcdFx0b25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKG5ld3RpdGxlKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBzZXRBdHRyaWJ1dGVzKHsgdGl0bGU6IG5ld3RpdGxlIH0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pLFxuXHRcdFx0XHRcdHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChUZXh0Q29udHJvbCwge1xuXHRcdFx0XHRcdFx0bGFiZWw6ICdJY29uIFVSTCcsXG5cdFx0XHRcdFx0XHR2YWx1ZTogYXR0cmlidXRlcy5tZWRpYVVybCxcblx0XHRcdFx0XHRcdG9uQ2hhbmdlOiBmdW5jdGlvbiBvbkNoYW5nZShuZXdVcmwpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHNldEF0dHJpYnV0ZXMoeyBtZWRpYVVybDogbmV3VXJsIH0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pLFxuXHRcdFx0XHRcdHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChUZXh0Q29udHJvbCwge1xuXHRcdFx0XHRcdFx0bGFiZWw6ICdJY29uIFdpZHRoJyxcblx0XHRcdFx0XHRcdHZhbHVlOiBhdHRyaWJ1dGVzLmljb25XaWR0aCxcblx0XHRcdFx0XHRcdG9uQ2hhbmdlOiBmdW5jdGlvbiBvbkNoYW5nZShuZXdXaWR0aCkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gc2V0QXR0cmlidXRlcyh7IGljb25XaWR0aDogbmV3V2lkdGggfSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSksXG5cdFx0XHRcdFx0d3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KFRleHRDb250cm9sLCB7XG5cdFx0XHRcdFx0XHRsYWJlbDogJ0ljb24gSGVpZ2h0Jyxcblx0XHRcdFx0XHRcdHZhbHVlOiBhdHRyaWJ1dGVzLmljb25IZWlnaHQsXG5cdFx0XHRcdFx0XHRvbkNoYW5nZTogZnVuY3Rpb24gb25DaGFuZ2UobmV3SGVpZ2h0KSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBzZXRBdHRyaWJ1dGVzKHsgaWNvbkhlaWdodDogbmV3SGVpZ2h0IH0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pXG5cdFx0XHRcdClcblx0XHRcdCksXG5cdFx0XHRtYXBcblx0XHQpO1xuXHR9LFxuXHRzYXZlOiBmdW5jdGlvbiBzYXZlKHByb3BzKSB7XG5cdFx0dmFyIGF0dHJpYnV0ZXMgPSBwcm9wcy5hdHRyaWJ1dGVzO1xuXG5cdFx0dmFyIGJsb2NrUHJvcHMgPSB1c2VCbG9ja1Byb3BzLnNhdmUoKTtcblxuXHRcdHZhciBjZW50ZXIgPSB7XG5cdFx0XHRsYXQ6IGF0dHJpYnV0ZXMubGF0ID8gcGFyc2VGbG9hdChhdHRyaWJ1dGVzLmxhdCkgOiAwLFxuXHRcdFx0bG5nOiBhdHRyaWJ1dGVzLmxuZyA/IHBhcnNlRmxvYXQoYXR0cmlidXRlcy5sbmcpIDogMFxuXHRcdH07XG5cdFx0dmFyIG1hcmtlciA9IHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChNYXJrZXIsIHsgcG9zaXRpb246IGNlbnRlciwgbGFiZWw6IGF0dHJpYnV0ZXMubGFiZWwgfSk7XG5cdFx0dmFyIG1hcCA9IGF0dHJpYnV0ZXMua2V5ID8gd3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KFxuXHRcdFx0J2RpdicsXG5cdFx0XHR7ICdjbGFzcyc6ICdtYXAtd3JhcHBlcicgfSxcblx0XHRcdHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChcblx0XHRcdFx0J3AnLFxuXHRcdFx0XHRudWxsLFxuXHRcdFx0XHQnSGVsbG8nXG5cdFx0XHQpXG5cdFx0KSA6IHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChcblx0XHRcdCdwJyxcblx0XHRcdG51bGwsXG5cdFx0XHQnRW50ZXIgYSB2YWxpZCBBUEkga2V5J1xuXHRcdCk7XG5cblx0XHRyZXR1cm4gd3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KFxuXHRcdFx0J2RpdicsXG5cdFx0XHRibG9ja1Byb3BzLFxuXHRcdFx0d3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KCdkaXYnLCB7ICdjbGFzcyc6ICdnYi1tYXAnLFxuXHRcdFx0XHQnZGF0YS1rZXknOiBhdHRyaWJ1dGVzLmtleSxcblx0XHRcdFx0J2RhdGEtbGF0JzogYXR0cmlidXRlcy5sYXQsXG5cdFx0XHRcdCdkYXRhLWxuZyc6IGF0dHJpYnV0ZXMubG5nLFxuXHRcdFx0XHQnZGF0YS16b29tJzogYXR0cmlidXRlcy56b29tLFxuXHRcdFx0XHQnZGF0YS10aXRsZSc6IGF0dHJpYnV0ZXMudGl0bGUsXG5cdFx0XHRcdCdkYXRhLW1lZGlhLXVybCc6IGF0dHJpYnV0ZXMubWVkaWFVcmwsXG5cdFx0XHRcdCdkYXRhLWljb24td2lkdGgnOiBhdHRyaWJ1dGVzLmljb25XaWR0aCxcblx0XHRcdFx0J2RhdGEtaWNvbi1oZWlnaHQnOiBhdHRyaWJ1dGVzLmljb25IZWlnaHRcblx0XHRcdH0pXG5cdFx0KTtcblx0fVxufSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbWFwL21hcC5qc1xuLy8gbW9kdWxlIGlkID0gNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/*!*****************************!*\
  !*** ./src/map/editor.scss ***!
  \*****************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9tYXAvZWRpdG9yLnNjc3M/ZTExZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL21hcC9lZGl0b3Iuc2Nzc1xuLy8gbW9kdWxlIGlkID0gNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/*!****************************!*\
  !*** ./src/map/style.scss ***!
  \****************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9tYXAvc3R5bGUuc2Nzcz82YTIwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbWFwL3N0eWxlLnNjc3Ncbi8vIG1vZHVsZSBpZCA9IDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///7\n");

/***/ }),
/* 8 */
/*!****************************************************************************!*\
  !*** ./node_modules/@react-google-maps/api/dist/reactgooglemapsapi.esm.js ***!
  \****************************************************************************/
/*! exports provided: Autocomplete, BicyclingLayer, Circle, Data, DirectionsRenderer, DirectionsService, DistanceMatrixService, DrawingManager, GoogleMap, GroundOverlay, HeatmapLayer, InfoBox, InfoWindow, KmlLayer, LoadScript, LoadScriptNext, MapContext, Marker, MarkerClusterer, OverlayView, Polygon, Polyline, Rectangle, StandaloneSearchBox, StreetViewPanorama, StreetViewService, TrafficLayer, TransitLayer, useGoogleMap, useJsApiLoader, useLoadScript */
/*! exports used: GoogleMap, LoadScript, Marker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {/* unused harmony export Autocomplete */\n/* unused harmony export BicyclingLayer */\n/* unused harmony export Circle */\n/* unused harmony export Data */\n/* unused harmony export DirectionsRenderer */\n/* unused harmony export DirectionsService */\n/* unused harmony export DistanceMatrixService */\n/* unused harmony export DrawingManager */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return GoogleMap; });\n/* unused harmony export GroundOverlay */\n/* unused harmony export HeatmapLayer */\n/* unused harmony export InfoBox */\n/* unused harmony export InfoWindow */\n/* unused harmony export KmlLayer */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return LoadScript; });\n/* unused harmony export LoadScriptNext */\n/* unused harmony export MapContext */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return Marker; });\n/* unused harmony export MarkerClusterer */\n/* unused harmony export OverlayView */\n/* unused harmony export Polygon */\n/* unused harmony export Polyline */\n/* unused harmony export Rectangle */\n/* unused harmony export StandaloneSearchBox */\n/* unused harmony export StreetViewPanorama */\n/* unused harmony export StreetViewService */\n/* unused harmony export TrafficLayer */\n/* unused harmony export TransitLayer */\n/* unused harmony export useGoogleMap */\n/* unused harmony export useJsApiLoader */\n/* unused harmony export useLoadScript */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ 9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant__ = __webpack_require__(/*! invariant */ 10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_invariant__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__googlemaps_js_api_loader__ = __webpack_require__(/*! @googlemaps/js-api-loader */ 11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__react_google_maps_marker_clusterer__ = __webpack_require__(/*! @react-google-maps/marker-clusterer */ 12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_react_dom__ = __webpack_require__(/*! react-dom */ 13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_react_dom__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__react_google_maps_infobox__ = __webpack_require__(/*! @react-google-maps/infobox */ 14);\n\n\n\n\n\n\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar MapContext = /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createContext\"])(null);\nfunction useGoogleMap() {\n  !!!__WEBPACK_IMPORTED_MODULE_0_react__[\"useContext\"] ? process.env.NODE_ENV !== \"production\" ? __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false, 'useGoogleMap is React hook and requires React version 16.8+') : __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false) : void 0;\n  var map = Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useContext\"])(MapContext);\n  !!!map ? process.env.NODE_ENV !== \"production\" ? __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false, 'useGoogleMap needs a GoogleMap available up in the tree') : __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false) : void 0;\n  return map;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar reduce = function reduce(obj, fn, acc) {\n  return Object.keys(obj).reduce(function reducer(newAcc, key) {\n    return fn(newAcc, obj[key], key);\n  }, acc);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction forEach(obj, fn) {\n  Object.keys(obj).forEach(function iterator(key) {\n    return fn(obj[key], key);\n  });\n}\n\n/* global google */\nvar applyUpdaterToNextProps = function applyUpdaterToNextProps( // eslint-disable-next-line @typescript-eslint/no-explicit-any\nupdaterMap, // eslint-disable-next-line @typescript-eslint/no-explicit-any\nprevProps, // eslint-disable-next-line @typescript-eslint/no-explicit-any\nnextProps, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ninstance // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var map = {}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  var iter = function iter(fn, key) {\n    var nextValue = nextProps[key];\n\n    if (nextValue !== prevProps[key]) {\n      map[key] = nextValue;\n      fn(instance, nextValue);\n    }\n  };\n\n  forEach(updaterMap, iter);\n  return map;\n};\nfunction registerEvents( // eslint-disable-next-line @typescript-eslint/no-explicit-any\nprops, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ninstance, eventMap) {\n  var registeredList = reduce(eventMap, function reducer(acc, googleEventName, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onEventName) {\n    if (typeof props[onEventName] === 'function') {\n      acc.push(google.maps.event.addListener(instance, googleEventName, props[onEventName]));\n    }\n\n    return acc;\n  }, []);\n  return registeredList;\n}\n\nfunction unregisterEvent(registered) {\n  google.maps.event.removeListener(registered);\n}\n\nfunction unregisterEvents(events) {\n  if (events === void 0) {\n    events = [];\n  }\n\n  events.forEach(unregisterEvent);\n}\nfunction applyUpdatersToPropsAndRegisterEvents(_ref) {\n  var updaterMap = _ref.updaterMap,\n      eventMap = _ref.eventMap,\n      prevProps = _ref.prevProps,\n      nextProps = _ref.nextProps,\n      instance = _ref.instance;\n  var registeredEvents = registerEvents(nextProps, instance, eventMap);\n  applyUpdaterToNextProps(updaterMap, prevProps, nextProps, instance);\n  return registeredEvents;\n}\n\nvar eventMap = {\n  onDblClick: 'dblclick',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMapTypeIdChanged: 'maptypeid_changed',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseDown: 'mousedown',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick',\n  onTilesLoaded: 'tilesloaded',\n  onBoundsChanged: 'bounds_changed',\n  onCenterChanged: 'center_changed',\n  onClick: 'click',\n  onDrag: 'drag',\n  onHeadingChanged: 'heading_changed',\n  onIdle: 'idle',\n  onProjectionChanged: 'projection_changed',\n  onResize: 'resize',\n  onTiltChanged: 'tilt_changed',\n  onZoomChanged: 'zoom_changed'\n};\nvar updaterMap = {\n  extraMapTypes: function extraMapTypes(map, extra) {\n    extra.forEach(function forEachExtra(it, i) {\n      map.mapTypes.set(String(i), it);\n    });\n  },\n  center: function center(map, _center) {\n    map.setCenter(_center);\n  },\n  clickableIcons: function clickableIcons(map, clickable) {\n    map.setClickableIcons(clickable);\n  },\n  heading: function heading(map, _heading) {\n    map.setHeading(_heading);\n  },\n  mapTypeId: function mapTypeId(map, _mapTypeId) {\n    map.setMapTypeId(_mapTypeId);\n  },\n  options: function options(map, _options) {\n    map.setOptions(_options);\n  },\n  streetView: function streetView(map, _streetView) {\n    map.setStreetView(_streetView);\n  },\n  tilt: function tilt(map, _tilt) {\n    map.setTilt(_tilt);\n  },\n  zoom: function zoom(map, _zoom) {\n    map.setZoom(_zoom);\n  }\n}; // function GoogleMapFunctional({ children, options, id, mapContainerStyle, center, clickableIcons, extraMapTypes, heading, mapContainerClassName, mapTypeId, onBoundsChanged, onCenterChanged, onClick, onDblClick, onDrag, onDragEnd, onDragStart, onHeadingChanged, onIdle, onProjectionChanged, onResize, onTiltChanged, onLoad }: GoogleMapProps): JSX.Element {\n//   const [map, setMap] = React.useState<google.maps.Map | null>(null)\n//   const ref = React.useRef<HTMLDivElement | null>(null)\n//   const getInstance = React.useCallback(() => {\n//     if (ref.current === null) {\n//       return null\n//     }\n//     return new google.maps.Map(ref.current, options)\n//   }, [options])\n//   React.useEffect(() => {\n//   }, [])\n//   const panTo = React.useCallback((latLng: google.maps.LatLng | google.maps.LatLngLiteral): void => {\n//     const map = getInstance()\n//     if (map) {\n//       map.panTo(latLng)\n//     }\n//   }, [])\n//   React.useEffect(() => {\n//     const map = getInstance()\n//   }, [])\n//   return (\n//     <div\n//         id={id}\n//         ref={ref}\n//         style={mapContainerStyle}\n//         className={mapContainerClassName}\n//       >\n//         <MapContext.Provider value={map}>\n//           {map !== null ? children : <></>}\n//         </MapContext.Provider>\n//       </div>\n//   )\n// }\n\nvar GoogleMap = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(GoogleMap, _React$PureComponent);\n\n  function GoogleMap() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.state = {\n      map: null\n    };\n    _this.registeredEvents = [];\n    _this.mapRef = null;\n\n    _this.getInstance = function () {\n      if (_this.mapRef === null) {\n        return null;\n      }\n\n      return new google.maps.Map(_this.mapRef, _this.props.options);\n    };\n\n    _this.panTo = function (latLng) {\n      var map = _this.getInstance();\n\n      if (map) {\n        map.panTo(latLng);\n      }\n    };\n\n    _this.setMapCallback = function () {\n      if (_this.state.map !== null) {\n        if (_this.props.onLoad) {\n          _this.props.onLoad(_this.state.map);\n        }\n      }\n    };\n\n    _this.getRef = function (ref) {\n      _this.mapRef = ref;\n    };\n\n    return _this;\n  }\n\n  var _proto = GoogleMap.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var map = this.getInstance();\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap,\n      eventMap: eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: map\n    });\n    this.setState(function setMap() {\n      return {\n        map: map\n      };\n    }, this.setMapCallback);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.map !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap,\n        eventMap: eventMap,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.map\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.map !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.map);\n      }\n\n      unregisterEvents(this.registeredEvents);\n    }\n  };\n\n  _proto.render = function render() {\n    return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(\"div\", {\n      id: this.props.id,\n      ref: this.getRef,\n      style: this.props.mapContainerStyle,\n      className: this.props.mapContainerClassName\n    }, Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(MapContext.Provider, {\n      value: this.state.map\n    }, this.state.map !== null ? this.props.children : Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(__WEBPACK_IMPORTED_MODULE_0_react__[\"Fragment\"], null)));\n  };\n\n  return GoogleMap;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar runtime_1 = createCommonjsModule(function (module) {\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined$1; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined$1) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined$1;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined$1;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined$1;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined$1, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined$1;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined$1;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined$1;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined$1;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined$1;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   module.exports \n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n});\n\nvar isBrowser = typeof document !== 'undefined';\n\nvar injectScript = function injectScript(_ref) {\n  var url = _ref.url,\n      id = _ref.id,\n      nonce = _ref.nonce;\n\n  if (!isBrowser) {\n    return Promise.reject(new Error('document is undefined'));\n  }\n\n  return new Promise(function injectScriptCallback(resolve, reject) {\n    var existingScript = document.getElementById(id);\n    var windowWithGoogleMap = window;\n\n    if (existingScript) {\n      // Same script id/url: keep same script\n      var dataStateAttribute = existingScript.getAttribute('data-state');\n\n      if (existingScript.src === url && dataStateAttribute !== 'error') {\n        if (dataStateAttribute === 'ready') {\n          return resolve(id);\n        } else {\n          var originalInitMap = windowWithGoogleMap.initMap;\n          var originalErrorCallback = existingScript.onerror;\n\n          windowWithGoogleMap.initMap = function initMap() {\n            if (originalInitMap) {\n              originalInitMap();\n            }\n\n            resolve(id);\n          };\n\n          existingScript.onerror = function (err) {\n            if (originalErrorCallback) {\n              originalErrorCallback(err);\n            }\n\n            reject(err);\n          };\n\n          return;\n        }\n      } // Same script id, but either\n      // 1. requested URL is different\n      // 2. script failed to load\n      else {\n          existingScript.remove();\n        }\n    }\n\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = url;\n    script.id = id;\n    script.async = true;\n    script.nonce = nonce;\n\n    script.onerror = function onerror(err) {\n      script.setAttribute('data-state', 'error');\n      reject(err);\n    };\n\n    windowWithGoogleMap.initMap = function onload() {\n      script.setAttribute('data-state', 'ready');\n      resolve(id);\n    };\n\n    document.head.appendChild(script);\n  })[\"catch\"](function (err) {\n    console.error('injectScript error: ', err);\n    throw err;\n  });\n};\n\nvar isRobotoStyle = function isRobotoStyle(element) {\n  // roboto font download\n  if (element.href && element.href.indexOf('https://fonts.googleapis.com/css?family=Roboto') === 0) {\n    return true;\n  } // roboto style elements\n\n\n  if (element.tagName.toLowerCase() === 'style' && // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  element.styleSheet && // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  element.styleSheet.cssText && // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  element.styleSheet.cssText.replace('\\r\\n', '').indexOf('.gm-style') === 0) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    element.styleSheet.cssText = '';\n    return true;\n  } // roboto style elements for other browsers\n\n\n  if (element.tagName.toLowerCase() === 'style' && element.innerHTML && element.innerHTML.replace('\\r\\n', '').indexOf('.gm-style') === 0) {\n    element.innerHTML = '';\n    return true;\n  } // when google tries to add empty style\n\n\n  if (element.tagName.toLowerCase() === 'style' && // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  !element.styleSheet && !element.innerHTML) {\n    return true;\n  }\n\n  return false;\n}; // Preventing the Google Maps library from downloading an extra font\n\n\nvar preventGoogleFonts = function preventGoogleFonts() {\n  // we override these methods only for one particular head element\n  // default methods for other elements are not affected\n  var head = document.getElementsByTagName('head')[0];\n  var trueInsertBefore = head.insertBefore.bind(head); // TODO: adding return before reflect solves the TS issue\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n\n  head.insertBefore = function insertBefore(newElement, referenceElement) {\n    if (!isRobotoStyle(newElement)) {\n      Reflect.apply(trueInsertBefore, head, [newElement, referenceElement]);\n    }\n  };\n\n  var trueAppend = head.appendChild.bind(head); // TODO: adding return before reflect solves the TS issue\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n\n  head.appendChild = function appendChild(textNode) {\n    if (!isRobotoStyle(textNode)) {\n      Reflect.apply(trueAppend, head, [textNode]);\n    }\n  };\n};\n\nfunction makeLoadScriptUrl(_ref) {\n  var googleMapsApiKey = _ref.googleMapsApiKey,\n      googleMapsClientId = _ref.googleMapsClientId,\n      _ref$version = _ref.version,\n      version = _ref$version === void 0 ? 'weekly' : _ref$version,\n      language = _ref.language,\n      region = _ref.region,\n      libraries = _ref.libraries,\n      channel = _ref.channel,\n      mapIds = _ref.mapIds;\n  var params = [];\n  !(googleMapsApiKey && googleMapsClientId || !(googleMapsApiKey && googleMapsClientId)) ? process.env.NODE_ENV !== \"production\" ? __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false, 'You need to specify either googleMapsApiKey or googleMapsClientId for @react-google-maps/api load script to work. You cannot use both at the same time.') : __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false) : void 0;\n\n  if (googleMapsApiKey) {\n    params.push(\"key=\" + googleMapsApiKey);\n  } else if (googleMapsClientId) {\n    params.push(\"client=\" + googleMapsClientId);\n  }\n\n  if (version) {\n    params.push(\"v=\" + version);\n  }\n\n  if (language) {\n    params.push(\"language=\" + language);\n  }\n\n  if (region) {\n    params.push(\"region=\" + region);\n  }\n\n  if (libraries && libraries.length) {\n    params.push(\"libraries=\" + libraries.sort().join(','));\n  }\n\n  if (channel) {\n    params.push(\"channel=\" + channel);\n  }\n\n  if (mapIds && mapIds.length) {\n    params.push(\"map_ids=\" + mapIds.join(','));\n  }\n\n  params.push('callback=initMap');\n  return \"https://maps.googleapis.com/maps/api/js?\" + params.join('&');\n}\n\nvar cleaningUp = false;\nfunction DefaultLoadingElement() {\n  return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(\"div\", null, \"Loading...\");\n}\nvar defaultLoadScriptProps = {\n  id: 'script-loader',\n  version: 'weekly'\n};\n\nvar LoadScript = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(LoadScript, _React$PureComponent);\n\n  function LoadScript() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.check = Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createRef\"])();\n    _this.state = {\n      loaded: false\n    };\n\n    _this.cleanupCallback = function () {\n      // @ts-ignore\n      delete window.google.maps;\n\n      _this.injectScript();\n    };\n\n    _this.isCleaningUp = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee() {\n      var promiseCallback;\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              promiseCallback = function _promiseCallback(resolve) {\n                if (!cleaningUp) {\n                  resolve();\n                } else {\n                  if (isBrowser) {\n                    var timer = window.setInterval(function interval() {\n                      if (!cleaningUp) {\n                        window.clearInterval(timer);\n                        resolve();\n                      }\n                    }, 1);\n                  }\n                }\n\n                return;\n              };\n\n              return _context.abrupt(\"return\", new Promise(promiseCallback));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.cleanup = function () {\n      cleaningUp = true;\n      var script = document.getElementById(_this.props.id);\n\n      if (script && script.parentNode) {\n        script.parentNode.removeChild(script);\n      }\n\n      Array.prototype.slice.call(document.getElementsByTagName('script')).filter(function filter(script) {\n        return typeof script.src === 'string' && script.src.includes('maps.googleapis');\n      }).forEach(function forEach(script) {\n        if (script.parentNode) {\n          script.parentNode.removeChild(script);\n        }\n      });\n      Array.prototype.slice.call(document.getElementsByTagName('link')).filter(function filter(link) {\n        return link.href === 'https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Google+Sans';\n      }).forEach(function forEach(link) {\n        if (link.parentNode) {\n          link.parentNode.removeChild(link);\n        }\n      });\n      Array.prototype.slice.call(document.getElementsByTagName('style')).filter(function filter(style) {\n        return style.innerText !== undefined && style.innerText.length > 0 && style.innerText.includes('.gm-');\n      }).forEach(function forEach(style) {\n        if (style.parentNode) {\n          style.parentNode.removeChild(style);\n        }\n      });\n    };\n\n    _this.injectScript = function () {\n      if (_this.props.preventGoogleFontsLoading) {\n        preventGoogleFonts();\n      }\n\n      !!!_this.props.id ? process.env.NODE_ENV !== \"production\" ? __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false, 'LoadScript requires \"id\" prop to be a string: %s', _this.props.id) : __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false) : void 0;\n      var injectScriptOptions = {\n        id: _this.props.id,\n        nonce: _this.props.nonce,\n        url: makeLoadScriptUrl(_this.props)\n      };\n      injectScript(injectScriptOptions).then(function () {\n        if (_this.props.onLoad) {\n          _this.props.onLoad();\n        }\n\n        _this.setState(function setLoaded() {\n          return {\n            loaded: true\n          };\n        });\n\n        return;\n      })[\"catch\"](function (err) {\n        if (_this.props.onError) {\n          _this.props.onError(err);\n        }\n\n        console.error(\"\\n          There has been an Error with loading Google Maps API script, please check that you provided correct google API key (\" + (_this.props.googleMapsApiKey || '-') + \") or Client ID (\" + (_this.props.googleMapsClientId || '-') + \") to <LoadScript />\\n          Otherwise it is a Network issue.\\n        \");\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = LoadScript.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (isBrowser) {\n      if (window.google && window.google.maps && !cleaningUp) {\n        console.error('google api is already presented');\n        return;\n      }\n\n      this.isCleaningUp().then(this.injectScript)[\"catch\"](function error(err) {\n        console.error('Error at injecting script after cleaning up: ', err);\n      });\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.libraries !== prevProps.libraries) {\n      console.warn('Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables');\n    }\n\n    if (isBrowser && prevProps.language !== this.props.language) {\n      this.cleanup(); // TODO: refactor to use gDSFP maybe... wait for hooks refactoring.\n      // eslint-disable-next-line react/no-did-update-set-state\n\n      this.setState(function setLoaded() {\n        return {\n          loaded: false\n        };\n      }, this.cleanupCallback);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var _this2 = this;\n\n    if (isBrowser) {\n      this.cleanup();\n\n      var timeoutCallback = function timeoutCallback() {\n        if (!_this2.check.current) {\n          // @ts-ignore\n          delete window.google;\n          cleaningUp = false;\n        }\n      };\n\n      window.setTimeout(timeoutCallback, 1);\n\n      if (this.props.onUnmount) {\n        this.props.onUnmount();\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(__WEBPACK_IMPORTED_MODULE_0_react__[\"Fragment\"], null, Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(\"div\", {\n      ref: this.check\n    }), this.state.loaded ? this.props.children : this.props.loadingElement || Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(DefaultLoadingElement, null));\n  };\n\n  return LoadScript;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\n\nLoadScript.defaultProps = defaultLoadScriptProps;\n\n/* eslint-disable filenames/match-regex */\nvar previouslyLoadedUrl;\nfunction useLoadScript(_ref) {\n  var _ref$id = _ref.id,\n      id = _ref$id === void 0 ? defaultLoadScriptProps.id : _ref$id,\n      _ref$version = _ref.version,\n      version = _ref$version === void 0 ? defaultLoadScriptProps.version : _ref$version,\n      nonce = _ref.nonce,\n      googleMapsApiKey = _ref.googleMapsApiKey,\n      googleMapsClientId = _ref.googleMapsClientId,\n      language = _ref.language,\n      region = _ref.region,\n      libraries = _ref.libraries,\n      preventGoogleFontsLoading = _ref.preventGoogleFontsLoading,\n      channel = _ref.channel,\n      mapIds = _ref.mapIds;\n  var isMounted = Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useRef\"])(false);\n\n  var _React$useState = Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useState\"])(false),\n      isLoaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  var _React$useState2 = Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useState\"])(undefined),\n      loadError = _React$useState2[0],\n      setLoadError = _React$useState2[1];\n\n  Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useEffect\"])(function trackMountedState() {\n    isMounted.current = true;\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n  Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useEffect\"])(function applyPreventGoogleFonts() {\n    if (isBrowser && preventGoogleFontsLoading) {\n      preventGoogleFonts();\n    }\n  }, [preventGoogleFontsLoading]);\n  Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useEffect\"])(function validateLoadedState() {\n    if (isLoaded) {\n      !!!window.google ? process.env.NODE_ENV !== \"production\" ? __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false, 'useLoadScript was marked as loaded, but window.google is not present. Something went wrong.') : __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false) : void 0;\n    }\n  }, [isLoaded]);\n  var url = makeLoadScriptUrl({\n    version: version,\n    googleMapsApiKey: googleMapsApiKey,\n    googleMapsClientId: googleMapsClientId,\n    language: language,\n    region: region,\n    libraries: libraries,\n    channel: channel,\n    mapIds: mapIds\n  });\n  Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useEffect\"])(function loadScriptAndModifyLoadedState() {\n    if (!isBrowser) {\n      return;\n    }\n\n    function setLoadedIfMounted() {\n      if (isMounted.current) {\n        setLoaded(true);\n        previouslyLoadedUrl = url;\n      }\n    }\n\n    if (window.google && window.google.maps && previouslyLoadedUrl === url) {\n      setLoadedIfMounted();\n      return;\n    }\n\n    injectScript({\n      id: id,\n      url: url,\n      nonce: nonce\n    }).then(setLoadedIfMounted)[\"catch\"](function handleInjectError(err) {\n      if (isMounted.current) {\n        setLoadError(err);\n      }\n\n      console.warn(\"\\n        There has been an Error with loading Google Maps API script, please check that you provided correct google API key (\" + (googleMapsApiKey || '-') + \") or Client ID (\" + (googleMapsClientId || '-') + \")\\n        Otherwise it is a Network issue.\\n      \");\n      console.error(err);\n    });\n  }, [id, url, nonce]);\n  var prevLibraries = Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useRef\"])();\n  Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useEffect\"])(function checkPerformance() {\n    if (prevLibraries.current && libraries !== prevLibraries.current) {\n      console.warn('Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables');\n    }\n\n    prevLibraries.current = libraries;\n  }, [libraries]);\n  return {\n    isLoaded: isLoaded,\n    loadError: loadError,\n    url: url\n  };\n}\n\nvar defaultLoadingElement = /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(DefaultLoadingElement, null);\n\nfunction LoadScriptNext(_ref) {\n  var loadingElement = _ref.loadingElement,\n      onLoad = _ref.onLoad,\n      onError = _ref.onError,\n      onUnmount = _ref.onUnmount,\n      children = _ref.children,\n      hookOptions = _objectWithoutPropertiesLoose(_ref, [\"loadingElement\", \"onLoad\", \"onError\", \"onUnmount\", \"children\"]);\n\n  var _useLoadScript = useLoadScript(hookOptions),\n      isLoaded = _useLoadScript.isLoaded,\n      loadError = _useLoadScript.loadError;\n\n  Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useEffect\"])(function handleOnLoad() {\n    if (isLoaded && typeof onLoad === 'function') {\n      onLoad();\n    }\n  }, [isLoaded, onLoad]);\n  Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useEffect\"])(function handleOnError() {\n    if (loadError && typeof onError === 'function') {\n      onError(loadError);\n    }\n  }, [loadError, onError]);\n  Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useEffect\"])(function handleOnUnmount() {\n    return function () {\n      if (onUnmount) {\n        onUnmount();\n      }\n    };\n  }, [onUnmount]);\n  return isLoaded ? children : loadingElement || defaultLoadingElement;\n}\n\nvar LoadScriptNext$1 = /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"memo\"])(LoadScriptNext);\n\n/* eslint-disable filenames/match-regex */\nfunction useJsApiLoader(_ref) {\n  var _ref$id = _ref.id,\n      id = _ref$id === void 0 ? defaultLoadScriptProps.id : _ref$id,\n      _ref$version = _ref.version,\n      version = _ref$version === void 0 ? defaultLoadScriptProps.version : _ref$version,\n      nonce = _ref.nonce,\n      googleMapsApiKey = _ref.googleMapsApiKey,\n      language = _ref.language,\n      region = _ref.region,\n      libraries = _ref.libraries,\n      preventGoogleFontsLoading = _ref.preventGoogleFontsLoading,\n      mapIds = _ref.mapIds;\n\n  var _React$useState = Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useState\"])(false),\n      isLoaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  var _React$useState2 = Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useState\"])(undefined),\n      loadError = _React$useState2[0],\n      setLoadError = _React$useState2[1];\n\n  var loader = Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useMemo\"])(function memo() {\n    return new __WEBPACK_IMPORTED_MODULE_2__googlemaps_js_api_loader__[\"a\" /* Loader */]({\n      id: id,\n      apiKey: googleMapsApiKey,\n      version: version,\n      libraries: libraries,\n      language: language,\n      region: region,\n      mapIds: mapIds,\n      nonce: nonce\n    });\n  }, [id, googleMapsApiKey, version, libraries, language, region, mapIds, nonce]);\n  Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useEffect\"])(function effect() {\n    if (isLoaded) {\n      return;\n    } else {\n      loader.load().then(function then() {\n        setLoaded(true);\n      })[\"catch\"](function onrejected(error) {\n        setLoadError(error);\n      });\n    }\n  }, []);\n  Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useEffect\"])(function applyPreventGoogleFonts() {\n    if (isBrowser && preventGoogleFontsLoading) {\n      preventGoogleFonts();\n    }\n  }, [preventGoogleFontsLoading]);\n  var prevLibraries = Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useRef\"])();\n  Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useEffect\"])(function effect() {\n    if (prevLibraries.current && libraries !== prevLibraries.current) {\n      console.warn('Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables');\n    }\n\n    prevLibraries.current = libraries;\n  }, [libraries]);\n  return {\n    isLoaded: isLoaded,\n    loadError: loadError\n  };\n}\n\nvar eventMap$1 = {};\nvar updaterMap$1 = {\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  }\n};\nvar TrafficLayer = /*#__PURE__*/function (_PureComponent) {\n  _inheritsLoose(TrafficLayer, _PureComponent);\n\n  function TrafficLayer() {\n    var _this;\n\n    _this = _PureComponent.apply(this, arguments) || this;\n    _this.state = {\n      trafficLayer: null\n    };\n\n    _this.setTrafficLayerCallback = function () {\n      if (_this.state.trafficLayer !== null) {\n        if (_this.props.onLoad) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          _this.props.onLoad(_this.state.trafficLayer);\n        }\n      }\n    };\n\n    _this.registeredEvents = [];\n    return _this;\n  }\n\n  var _proto = TrafficLayer.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var trafficLayer = new google.maps.TrafficLayer(_extends({}, this.props.options || {}, {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$1,\n      eventMap: eventMap$1,\n      prevProps: {},\n      nextProps: this.props,\n      instance: trafficLayer\n    });\n    this.setState(function setTrafficLayer() {\n      return {\n        trafficLayer: trafficLayer\n      };\n    }, this.setTrafficLayerCallback);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.trafficLayer !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$1,\n        eventMap: eventMap$1,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.trafficLayer\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.trafficLayer !== null) {\n      if (this.props.onUnmount) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onUnmount(this.state.trafficLayer);\n      }\n\n      unregisterEvents(this.registeredEvents); // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n\n      this.state.trafficLayer.setMap(null);\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return TrafficLayer;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\nTrafficLayer.contextType = MapContext;\n\nvar BicyclingLayer = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(BicyclingLayer, _React$PureComponent);\n\n  function BicyclingLayer() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.state = {\n      bicyclingLayer: null\n    };\n\n    _this.setBicyclingLayerCallback = function () {\n      if (_this.state.bicyclingLayer !== null) {\n        // TODO: how is this possibly null if we're doing a null check\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        _this.state.bicyclingLayer.setMap(_this.context);\n\n        if (_this.props.onLoad) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          _this.props.onLoad(_this.state.bicyclingLayer);\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = BicyclingLayer.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var bicyclingLayer = new google.maps.BicyclingLayer();\n    this.setState(function setBicyclingLayer() {\n      return {\n        bicyclingLayer: bicyclingLayer\n      };\n    }, this.setBicyclingLayerCallback);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.bicyclingLayer !== null) {\n      if (this.props.onUnmount) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onUnmount(this.state.bicyclingLayer);\n      } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n\n\n      this.state.bicyclingLayer.setMap(null);\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return BicyclingLayer;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\nBicyclingLayer.contextType = MapContext;\n\nvar TransitLayer = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(TransitLayer, _React$PureComponent);\n\n  function TransitLayer() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.state = {\n      transitLayer: null\n    };\n\n    _this.setTransitLayerCallback = function () {\n      if (_this.state.transitLayer !== null) {\n        // TODO: how is this possibly null if we're doing a null check\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        _this.state.transitLayer.setMap(_this.context);\n\n        if (_this.props.onLoad) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          _this.props.onLoad(_this.state.transitLayer);\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = TransitLayer.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var transitLayer = new google.maps.TransitLayer();\n    this.setState(function setTransitLayer() {\n      return {\n        transitLayer: transitLayer\n      };\n    }, this.setTransitLayerCallback);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.transitLayer !== null) {\n      if (this.props.onUnmount) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.props.onUnmount(this.state.transitLayer);\n      } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n\n\n      this.state.transitLayer.setMap(null);\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return TransitLayer;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\nTransitLayer.contextType = MapContext;\n\nvar eventMap$2 = {\n  onCircleComplete: 'circlecomplete',\n  onMarkerComplete: 'markercomplete',\n  onOverlayComplete: 'overlaycomplete',\n  onPolygonComplete: 'polygoncomplete',\n  onPolylineComplete: 'polylinecomplete',\n  onRectangleComplete: 'rectanglecomplete'\n};\nvar updaterMap$2 = {\n  drawingMode: function drawingMode(instance, _drawingMode) {\n    instance.setDrawingMode(_drawingMode);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  }\n};\nvar DrawingManager = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(DrawingManager, _React$PureComponent);\n\n  function DrawingManager(props) {\n    var _this;\n\n    _this = _React$PureComponent.call(this, props) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      drawingManager: null\n    };\n\n    _this.setDrawingManagerCallback = function () {\n      if (_this.state.drawingManager !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.drawingManager);\n      }\n    };\n\n    !!!google.maps.drawing ? process.env.NODE_ENV !== \"production\" ? __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false, \"Did you include prop libraries={['drawing']} in the URL? %s\", google.maps.drawing) : __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false) : void 0;\n    return _this;\n  }\n\n  var _proto = DrawingManager.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var drawingManager = new google.maps.drawing.DrawingManager(_extends({}, this.props.options || {}, {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$2,\n      eventMap: eventMap$2,\n      prevProps: {},\n      nextProps: this.props,\n      instance: drawingManager\n    });\n    this.setState(function setDrawingManager() {\n      return {\n        drawingManager: drawingManager\n      };\n    }, this.setDrawingManagerCallback);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.drawingManager !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$2,\n        eventMap: eventMap$2,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.drawingManager\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.drawingManager !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.drawingManager);\n      }\n\n      unregisterEvents(this.registeredEvents);\n      this.state.drawingManager.setMap(null);\n    }\n  };\n\n  _proto.render = function render() {\n    return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(__WEBPACK_IMPORTED_MODULE_0_react__[\"Fragment\"], null);\n  };\n\n  return DrawingManager;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\nDrawingManager.contextType = MapContext;\n\nvar eventMap$3 = {\n  onAnimationChanged: 'animation_changed',\n  onClick: 'click',\n  onClickableChanged: 'clickable_changed',\n  onCursorChanged: 'cursor_changed',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDraggableChanged: 'draggable_changed',\n  onDragStart: 'dragstart',\n  onFlatChanged: 'flat_changed',\n  onIconChanged: 'icon_changed',\n  onMouseDown: 'mousedown',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onPositionChanged: 'position_changed',\n  onRightClick: 'rightclick',\n  onShapeChanged: 'shape_changed',\n  onTitleChanged: 'title_changed',\n  onVisibleChanged: 'visible_changed',\n  onZindexChanged: 'zindex_changed'\n};\nvar updaterMap$3 = {\n  animation: function animation(instance, _animation) {\n    instance.setAnimation(_animation);\n  },\n  clickable: function clickable(instance, _clickable) {\n    instance.setClickable(_clickable);\n  },\n  cursor: function cursor(instance, _cursor) {\n    instance.setCursor(_cursor);\n  },\n  draggable: function draggable(instance, _draggable) {\n    instance.setDraggable(_draggable);\n  },\n  icon: function icon(instance, _icon) {\n    instance.setIcon(_icon);\n  },\n  label: function label(instance, _label) {\n    instance.setLabel(_label);\n  },\n  map: function map(instance, _map) {\n    instance.setMap(_map);\n  },\n  opacity: function opacity(instance, _opacity) {\n    instance.setOpacity(_opacity);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  position: function position(instance, _position) {\n    instance.setPosition(_position);\n  },\n  shape: function shape(instance, _shape) {\n    instance.setShape(_shape);\n  },\n  title: function title(instance, _title) {\n    instance.setTitle(_title);\n  },\n  visible: function visible(instance, _visible) {\n    instance.setVisible(_visible);\n  },\n  zIndex: function zIndex(instance, _zIndex) {\n    instance.setZIndex(_zIndex);\n  }\n};\nvar Marker = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(Marker, _React$PureComponent);\n\n  function Marker() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    return _this;\n  }\n\n  var _proto = Marker.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var markerOptions = _extends({}, this.props.options || {}, this.props.clusterer ? {} : {\n      map: this.context\n    }, {\n      position: this.props.position\n    }); // Unfortunately we can't just do this in the contstructor, because the\n    // `MapContext` might not be filled in yet.\n\n\n    this.marker = new google.maps.Marker(markerOptions);\n\n    if (this.props.clusterer) {\n      this.props.clusterer.addMarker(this.marker, !!this.props.noClustererRedraw);\n    } else {\n      this.marker.setMap(this.context);\n    }\n\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$3,\n      eventMap: eventMap$3,\n      prevProps: {},\n      nextProps: this.props,\n      instance: this.marker\n    });\n\n    if (this.props.onLoad) {\n      this.props.onLoad(this.marker);\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.marker) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$3,\n        eventMap: eventMap$3,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.marker\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.marker) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.marker);\n      }\n\n      unregisterEvents(this.registeredEvents);\n\n      if (this.props.clusterer) {\n        this.props.clusterer.removeMarker(this.marker, !!this.props.noClustererRedraw);\n      } else {\n        this.marker && this.marker.setMap(null);\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var children = null;\n\n    if (this.props.children) {\n      children = __WEBPACK_IMPORTED_MODULE_0_react__[\"Children\"].map(this.props.children, function (child) {\n        if (!Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"isValidElement\"])(child)) {\n          return child;\n        }\n\n        var elementChild = child;\n        return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"cloneElement\"])(elementChild, {\n          anchor: _this2.marker\n        });\n      });\n    }\n\n    return children || null;\n  };\n\n  return Marker;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\nMarker.contextType = MapContext;\n\nvar eventMap$4 = {\n  onClick: 'click',\n  onClusteringBegin: 'clusteringbegin',\n  onClusteringEnd: 'clusteringend',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover'\n};\nvar updaterMap$4 = {\n  averageCenter: function averageCenter(instance, _averageCenter) {\n    instance.setAverageCenter(_averageCenter);\n  },\n  batchSizeIE: function batchSizeIE(instance, _batchSizeIE) {\n    instance.setBatchSizeIE(_batchSizeIE);\n  },\n  calculator: function calculator(instance, _calculator) {\n    instance.setCalculator(_calculator);\n  },\n  clusterClass: function clusterClass(instance, _clusterClass) {\n    instance.setClusterClass(_clusterClass);\n  },\n  enableRetinaIcons: function enableRetinaIcons(instance, _enableRetinaIcons) {\n    instance.setEnableRetinaIcons(_enableRetinaIcons);\n  },\n  gridSize: function gridSize(instance, _gridSize) {\n    instance.setGridSize(_gridSize);\n  },\n  ignoreHidden: function ignoreHidden(instance, _ignoreHidden) {\n    instance.setIgnoreHidden(_ignoreHidden);\n  },\n  imageExtension: function imageExtension(instance, _imageExtension) {\n    instance.setImageExtension(_imageExtension);\n  },\n  imagePath: function imagePath(instance, _imagePath) {\n    instance.setImagePath(_imagePath);\n  },\n  imageSizes: function imageSizes(instance, _imageSizes) {\n    instance.setImageSizes(_imageSizes);\n  },\n  maxZoom: function maxZoom(instance, _maxZoom) {\n    instance.setMaxZoom(_maxZoom);\n  },\n  minimumClusterSize: function minimumClusterSize(instance, _minimumClusterSize) {\n    instance.setMinimumClusterSize(_minimumClusterSize);\n  },\n  styles: function styles(instance, _styles) {\n    instance.setStyles(_styles);\n  },\n  title: function title(instance, _title) {\n    instance.setTitle(_title);\n  },\n  zoomOnClick: function zoomOnClick(instance, _zoomOnClick) {\n    instance.setZoomOnClick(_zoomOnClick);\n  }\n};\nvar ClustererComponent = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(ClustererComponent, _React$PureComponent);\n\n  function ClustererComponent() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      markerClusterer: null\n    };\n\n    _this.setClustererCallback = function () {\n      if (_this.state.markerClusterer !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.markerClusterer);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = ClustererComponent.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.context) {\n      var markerClusterer = new __WEBPACK_IMPORTED_MODULE_3__react_google_maps_marker_clusterer__[\"a\" /* Clusterer */](this.context, [], this.props.options);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$4,\n        eventMap: eventMap$4,\n        prevProps: {},\n        nextProps: this.props,\n        instance: markerClusterer\n      });\n      this.setState(function setClusterer() {\n        return {\n          markerClusterer: markerClusterer\n        };\n      }, this.setClustererCallback);\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.markerClusterer) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$4,\n        eventMap: eventMap$4,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.markerClusterer\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.markerClusterer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.markerClusterer);\n      }\n\n      unregisterEvents(this.registeredEvents); // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n\n      this.state.markerClusterer.setMap(null);\n    }\n  };\n\n  _proto.render = function render() {\n    return this.state.markerClusterer !== null ? this.props.children(this.state.markerClusterer) : null;\n  };\n\n  return ClustererComponent;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\nClustererComponent.contextType = MapContext;\n\nvar eventMap$5 = {\n  onCloseClick: 'closeclick',\n  onContentChanged: 'content_changed',\n  onDomReady: 'domready',\n  onPositionChanged: 'position_changed',\n  onZindexChanged: 'zindex_changed'\n};\nvar updaterMap$5 = {\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  position: function position(instance, _position) {\n    if (_position instanceof google.maps.LatLng) {\n      instance.setPosition(_position);\n    } else {\n      instance.setPosition(new google.maps.LatLng(_position.lat, _position.lng));\n    }\n  },\n  visible: function visible(instance, _visible) {\n    instance.setVisible(_visible);\n  },\n  zIndex: function zIndex(instance, _zIndex) {\n    instance.setZIndex(_zIndex);\n  }\n};\nvar InfoBoxComponent = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(InfoBoxComponent, _React$PureComponent);\n\n  function InfoBoxComponent() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.containerElement = null;\n    _this.state = {\n      infoBox: null\n    };\n\n    _this.open = function (infoBox, anchor) {\n      if (anchor) {\n        infoBox.open(_this.context, anchor);\n      } else if (infoBox.getPosition()) {\n        infoBox.open(_this.context);\n      } else {\n         process.env.NODE_ENV !== \"production\" ? __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false, 'You must provide either an anchor or a position prop for <InfoBox>.') : __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false) ;\n      }\n    };\n\n    _this.setInfoBoxCallback = function () {\n      var _this$props = _this.props,\n          anchor = _this$props.anchor,\n          onLoad = _this$props.onLoad;\n      var infoBox = _this.state.infoBox;\n\n      if (infoBox !== null && _this.containerElement !== null) {\n        infoBox.setContent(_this.containerElement);\n\n        _this.open(infoBox, anchor);\n\n        if (onLoad) {\n          onLoad(infoBox);\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = InfoBoxComponent.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var options = this.props.options;\n\n    var _ref = options || {},\n        position = _ref.position,\n        infoBoxOptions = _objectWithoutPropertiesLoose(_ref, [\"position\"]);\n\n    var positionLatLng;\n\n    if (position && !(position instanceof google.maps.LatLng)) {\n      positionLatLng = new google.maps.LatLng(position.lat, position.lng);\n    }\n\n    var infoBox = new __WEBPACK_IMPORTED_MODULE_5__react_google_maps_infobox__[\"a\" /* InfoBox */](_extends({}, infoBoxOptions, positionLatLng ? {\n      position: positionLatLng\n    } : {}));\n    this.containerElement = document.createElement('div');\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$5,\n      eventMap: eventMap$5,\n      prevProps: {},\n      nextProps: this.props,\n      instance: infoBox\n    });\n    this.setState({\n      infoBox: infoBox\n    }, this.setInfoBoxCallback);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var infoBox = this.state.infoBox;\n\n    if (infoBox !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$5,\n        eventMap: eventMap$5,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: infoBox\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var onUnmount = this.props.onUnmount;\n    var infoBox = this.state.infoBox;\n\n    if (infoBox !== null) {\n      if (onUnmount) {\n        onUnmount(infoBox);\n      }\n\n      unregisterEvents(this.registeredEvents);\n      infoBox.close();\n    }\n  };\n\n  _proto.render = function render() {\n    if (!this.containerElement) {\n      return null;\n    }\n\n    return Object(__WEBPACK_IMPORTED_MODULE_4_react_dom__[\"createPortal\"])(__WEBPACK_IMPORTED_MODULE_0_react__[\"Children\"].only(this.props.children), this.containerElement);\n  };\n\n  return InfoBoxComponent;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\nInfoBoxComponent.contextType = MapContext;\n\nvar eventMap$6 = {\n  onCloseClick: 'closeclick',\n  onContentChanged: 'content_changed',\n  onDomReady: 'domready',\n  onPositionChanged: 'position_changed',\n  onZindexChanged: 'zindex_changed'\n};\nvar updaterMap$6 = {\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  position: function position(instance, _position) {\n    instance.setPosition(_position);\n  },\n  zIndex: function zIndex(instance, _zIndex) {\n    instance.setZIndex(_zIndex);\n  }\n};\nvar InfoWindow = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(InfoWindow, _React$PureComponent);\n\n  function InfoWindow() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.containerElement = null;\n    _this.state = {\n      infoWindow: null\n    };\n\n    _this.open = function (infoWindow, anchor) {\n      if (anchor) {\n        infoWindow.open(_this.context, anchor);\n      } else if (infoWindow.getPosition()) {\n        infoWindow.open(_this.context);\n      } else {\n         process.env.NODE_ENV !== \"production\" ? __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false, \"You must provide either an anchor (typically render it inside a <Marker>) or a position props for <InfoWindow>.\") : __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false) ;\n      }\n    };\n\n    _this.setInfoWindowCallback = function () {\n      if (_this.state.infoWindow !== null && _this.containerElement !== null) {\n        _this.state.infoWindow.setContent(_this.containerElement);\n\n        _this.open(_this.state.infoWindow, _this.props.anchor);\n\n        if (_this.props.onLoad) {\n          _this.props.onLoad(_this.state.infoWindow);\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = InfoWindow.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var infoWindow = new google.maps.InfoWindow(_extends({}, this.props.options || {}));\n    this.containerElement = document.createElement('div');\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$6,\n      eventMap: eventMap$6,\n      prevProps: {},\n      nextProps: this.props,\n      instance: infoWindow\n    });\n    this.setState(function setInfoWindow() {\n      return {\n        infoWindow: infoWindow\n      };\n    }, this.setInfoWindowCallback);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.infoWindow !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$6,\n        eventMap: eventMap$6,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.infoWindow\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.infoWindow !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.state.infoWindow.close();\n    }\n  };\n\n  _proto.render = function render() {\n    return this.containerElement ? Object(__WEBPACK_IMPORTED_MODULE_4_react_dom__[\"createPortal\"])(__WEBPACK_IMPORTED_MODULE_0_react__[\"Children\"].only(this.props.children), this.containerElement) : Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(__WEBPACK_IMPORTED_MODULE_0_react__[\"Fragment\"], null);\n  };\n\n  return InfoWindow;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\nInfoWindow.contextType = MapContext;\n\nvar eventMap$7 = {\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick'\n};\nvar updaterMap$7 = {\n  draggable: function draggable(instance, _draggable) {\n    instance.setDraggable(_draggable);\n  },\n  editable: function editable(instance, _editable) {\n    instance.setEditable(_editable);\n  },\n  map: function map(instance, _map) {\n    instance.setMap(_map);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  path: function path(instance, _path) {\n    instance.setPath(_path);\n  },\n  visible: function visible(instance, _visible) {\n    instance.setVisible(_visible);\n  }\n};\nvar Polyline = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(Polyline, _React$PureComponent);\n\n  function Polyline() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      polyline: null\n    };\n\n    _this.setPolylineCallback = function () {\n      if (_this.state.polyline !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.polyline);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = Polyline.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var polyline = new google.maps.Polyline(_extends({}, this.props.options || {}, {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$7,\n      eventMap: eventMap$7,\n      prevProps: {},\n      nextProps: this.props,\n      instance: polyline\n    });\n    this.setState(function setPolyline() {\n      return {\n        polyline: polyline\n      };\n    }, this.setPolylineCallback);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.polyline !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$7,\n        eventMap: eventMap$7,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.polyline\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.polyline !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.polyline);\n      }\n\n      unregisterEvents(this.registeredEvents);\n      this.state.polyline.setMap(null);\n    }\n  };\n\n  _proto.render = function render() {\n    return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(__WEBPACK_IMPORTED_MODULE_0_react__[\"Fragment\"], null);\n  };\n\n  return Polyline;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\nPolyline.contextType = MapContext;\n\nvar eventMap$8 = {\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick'\n};\nvar updaterMap$8 = {\n  draggable: function draggable(instance, _draggable) {\n    instance.setDraggable(_draggable);\n  },\n  editable: function editable(instance, _editable) {\n    instance.setEditable(_editable);\n  },\n  map: function map(instance, _map) {\n    instance.setMap(_map);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  path: function path(instance, _path) {\n    instance.setPath(_path);\n  },\n  paths: function paths(instance, _paths) {\n    instance.setPaths(_paths);\n  },\n  visible: function visible(instance, _visible) {\n    instance.setVisible(_visible);\n  }\n};\nvar Polygon = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(Polygon, _React$PureComponent);\n\n  function Polygon() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      polygon: null\n    };\n\n    _this.setPolygonCallback = function () {\n      if (_this.state.polygon !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.polygon);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = Polygon.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var polygon = new google.maps.Polygon(_extends({}, this.props.options || {}, {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$8,\n      eventMap: eventMap$8,\n      prevProps: {},\n      nextProps: this.props,\n      instance: polygon\n    });\n    this.setState(function setPolygon() {\n      return {\n        polygon: polygon\n      };\n    }, this.setPolygonCallback);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.polygon !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$8,\n        eventMap: eventMap$8,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.polygon\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.polygon !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.polygon);\n      }\n\n      unregisterEvents(this.registeredEvents);\n      this.state.polygon && this.state.polygon.setMap(null);\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return Polygon;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\nPolygon.contextType = MapContext;\n\nvar eventMap$9 = {\n  onBoundsChanged: 'bounds_changed',\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRightClick: 'rightclick'\n};\nvar updaterMap$9 = {\n  bounds: function bounds(instance, _bounds) {\n    instance.setBounds(_bounds);\n  },\n  draggable: function draggable(instance, _draggable) {\n    instance.setDraggable(_draggable);\n  },\n  editable: function editable(instance, _editable) {\n    instance.setEditable(_editable);\n  },\n  map: function map(instance, _map) {\n    instance.setMap(_map);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  visible: function visible(instance, _visible) {\n    instance.setVisible(_visible);\n  }\n};\nvar Rectangle = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(Rectangle, _React$PureComponent);\n\n  function Rectangle() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      rectangle: null\n    };\n\n    _this.setRectangleCallback = function () {\n      if (_this.state.rectangle !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.rectangle);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = Rectangle.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var rectangle = new google.maps.Rectangle(_extends({}, this.props.options || {}, {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$9,\n      eventMap: eventMap$9,\n      prevProps: {},\n      nextProps: this.props,\n      instance: rectangle\n    });\n    this.setState(function setRectangle() {\n      return {\n        rectangle: rectangle\n      };\n    }, this.setRectangleCallback);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.rectangle !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$9,\n        eventMap: eventMap$9,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.rectangle\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.rectangle !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.rectangle);\n      }\n\n      unregisterEvents(this.registeredEvents);\n      this.state.rectangle.setMap(null);\n    }\n  };\n\n  _proto.render = function render() {\n    return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(__WEBPACK_IMPORTED_MODULE_0_react__[\"Fragment\"], null);\n  };\n\n  return Rectangle;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\nRectangle.contextType = MapContext;\n\nvar eventMap$a = {\n  onCenterChanged: 'center_changed',\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragStart: 'dragstart',\n  onMouseDown: 'mousedown',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRadiusChanged: 'radius_changed',\n  onRightClick: 'rightclick'\n};\nvar updaterMap$a = {\n  center: function center(instance, _center) {\n    instance.setCenter(_center);\n  },\n  draggable: function draggable(instance, _draggable) {\n    instance.setDraggable(_draggable);\n  },\n  editable: function editable(instance, _editable) {\n    instance.setEditable(_editable);\n  },\n  map: function map(instance, _map) {\n    instance.setMap(_map);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  radius: function radius(instance, _radius) {\n    instance.setRadius(_radius);\n  },\n  visible: function visible(instance, _visible) {\n    instance.setVisible(_visible);\n  }\n};\nvar Circle = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(Circle, _React$PureComponent);\n\n  function Circle() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      circle: null\n    };\n\n    _this.setCircleCallback = function () {\n      if (_this.state.circle !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.circle);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = Circle.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var circle = new google.maps.Circle(_extends({}, this.props.options || {}, {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$a,\n      eventMap: eventMap$a,\n      prevProps: {},\n      nextProps: this.props,\n      instance: circle\n    });\n    this.setState(function setCircle() {\n      return {\n        circle: circle\n      };\n    }, this.setCircleCallback);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.circle !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$a,\n        eventMap: eventMap$a,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.circle\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.circle !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.circle);\n      }\n\n      unregisterEvents(this.registeredEvents);\n      this.state.circle && this.state.circle.setMap(null);\n    }\n  };\n\n  _proto.render = function render() {\n    return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(__WEBPACK_IMPORTED_MODULE_0_react__[\"Fragment\"], null);\n  };\n\n  return Circle;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\nCircle.contextType = MapContext;\n\nvar eventMap$b = {\n  onAddFeature: 'addfeature',\n  onClick: 'click',\n  onDblClick: 'dblclick',\n  onMouseDown: 'mousedown',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onRemoveFeature: 'removefeature',\n  onRemoveProperty: 'removeproperty',\n  onRightClick: 'rightclick',\n  onSetGeometry: 'setgeometry',\n  onSetProperty: 'setproperty'\n};\nvar updaterMap$b = {\n  add: function add(instance, features) {\n    instance.add(features);\n  },\n  addgeojson: function addgeojson(instance, geojson, options) {\n    instance.addGeoJson(geojson, options);\n  },\n  contains: function contains(instance, feature) {\n    instance.contains(feature);\n  },\n  foreach: function foreach(instance, callback) {\n    instance.forEach(callback);\n  },\n  loadgeojson: function loadgeojson(instance, url, options, callback) {\n    instance.loadGeoJson(url, options, callback);\n  },\n  overridestyle: function overridestyle(instance, feature, style) {\n    instance.overrideStyle(feature, style);\n  },\n  remove: function remove(instance, feature) {\n    instance.remove(feature);\n  },\n  revertstyle: function revertstyle(instance, feature) {\n    instance.revertStyle(feature);\n  },\n  controlposition: function controlposition(instance, controlPosition) {\n    instance.setControlPosition(controlPosition);\n  },\n  controls: function controls(instance, _controls) {\n    instance.setControls(_controls);\n  },\n  drawingmode: function drawingmode(instance, mode) {\n    instance.setDrawingMode(mode);\n  },\n  map: function map(instance, _map) {\n    instance.setMap(_map);\n  },\n  style: function style(instance, _style) {\n    instance.setStyle(_style);\n  },\n  togeojson: function togeojson(instance, callback) {\n    instance.toGeoJson(callback);\n  }\n};\nvar Data = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(Data, _React$PureComponent);\n\n  function Data() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      data: null\n    };\n\n    _this.setDataCallback = function () {\n      if (_this.state.data !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.data);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = Data.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var data = new google.maps.Data(_extends({}, this.props.options || {}, {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$b,\n      eventMap: eventMap$b,\n      prevProps: {},\n      nextProps: this.props,\n      instance: data\n    });\n    this.setState(function setData() {\n      return {\n        data: data\n      };\n    }, this.setDataCallback);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.data !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$b,\n        eventMap: eventMap$b,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.data\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.data !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.data);\n      }\n\n      unregisterEvents(this.registeredEvents);\n\n      if (this.state.data) {\n        this.state.data.setMap(null);\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return Data;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\nData.contextType = MapContext;\n\nvar eventMap$c = {\n  onClick: 'click',\n  onDefaultViewportChanged: 'defaultviewport_changed',\n  onStatusChanged: 'status_changed'\n};\nvar updaterMap$c = {\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  url: function url(instance, _url) {\n    instance.setUrl(_url);\n  },\n  zIndex: function zIndex(instance, _zIndex) {\n    instance.setZIndex(_zIndex);\n  }\n};\nvar KmlLayer = /*#__PURE__*/function (_PureComponent) {\n  _inheritsLoose(KmlLayer, _PureComponent);\n\n  function KmlLayer() {\n    var _this;\n\n    _this = _PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      kmlLayer: null\n    };\n\n    _this.setKmlLayerCallback = function () {\n      if (_this.state.kmlLayer !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.kmlLayer);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = KmlLayer.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var kmlLayer = new google.maps.KmlLayer(_extends({}, this.props.options, {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$c,\n      eventMap: eventMap$c,\n      prevProps: {},\n      nextProps: this.props,\n      instance: kmlLayer\n    });\n    this.setState(function setLmlLayer() {\n      return {\n        kmlLayer: kmlLayer\n      };\n    }, this.setKmlLayerCallback);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.kmlLayer !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$c,\n        eventMap: eventMap$c,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.kmlLayer\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.kmlLayer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.kmlLayer);\n      }\n\n      unregisterEvents(this.registeredEvents);\n      this.state.kmlLayer.setMap(null);\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return KmlLayer;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\nKmlLayer.contextType = MapContext;\n\n/* eslint-disable filenames/match-regex */\nfunction getOffsetOverride(containerElement, getPixelPositionOffset) {\n  return typeof getPixelPositionOffset === 'function' ? getPixelPositionOffset(containerElement.offsetWidth, containerElement.offsetHeight) : {};\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar createLatLng = function createLatLng(inst, Type) {\n  return new Type(inst.lat, inst.lng);\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nvar createLatLngBounds = function createLatLngBounds(inst, Type) {\n  return new Type(new google.maps.LatLng(inst.ne.lat, inst.ne.lng), new google.maps.LatLng(inst.sw.lat, inst.sw.lng));\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nvar ensureOfType = function ensureOfType(inst, type, factory) {\n  return inst instanceof type ? inst : factory(inst, type);\n};\n\nvar getLayoutStylesByBounds = function getLayoutStylesByBounds(mapCanvasProjection, offset, bounds) {\n  var ne = mapCanvasProjection && mapCanvasProjection.fromLatLngToDivPixel(bounds.getNorthEast());\n  var sw = mapCanvasProjection && mapCanvasProjection.fromLatLngToDivPixel(bounds.getSouthWest());\n\n  if (ne && sw) {\n    return {\n      left: sw.x + offset.x + \"px\",\n      top: ne.y + offset.y + \"px\",\n      width: ne.x - sw.x - offset.x + \"px\",\n      height: sw.y - ne.y - offset.y + \"px\"\n    };\n  }\n\n  return {\n    left: '-9999px',\n    top: '-9999px'\n  };\n};\n\nvar getLayoutStylesByPosition = function getLayoutStylesByPosition(mapCanvasProjection, offset, position) {\n  var point = mapCanvasProjection && mapCanvasProjection.fromLatLngToDivPixel(position);\n\n  if (point) {\n    var x = point.x,\n        y = point.y;\n    return {\n      left: x + offset.x + \"px\",\n      top: y + offset.y + \"px\"\n    };\n  }\n\n  return {\n    left: '-9999px',\n    top: '-9999px'\n  };\n};\n\nvar getLayoutStyles = function getLayoutStyles(mapCanvasProjection, offset, bounds, position) {\n  return bounds !== undefined ? getLayoutStylesByBounds(mapCanvasProjection, offset, ensureOfType(bounds, google.maps.LatLngBounds, createLatLngBounds)) : getLayoutStylesByPosition(mapCanvasProjection, offset, ensureOfType(position, google.maps.LatLng, createLatLng));\n};\nvar arePositionsEqual = function arePositionsEqual(currentPosition, previousPosition) {\n  return currentPosition.left === previousPosition.left && currentPosition.top === previousPosition.top && currentPosition.width === previousPosition.height && currentPosition.height === previousPosition.height;\n};\n\nfunction convertToLatLngString(latLngLike) {\n  if (!latLngLike) {\n    return '';\n  }\n\n  var latLng = latLngLike instanceof google.maps.LatLng ? latLngLike : new google.maps.LatLng(latLngLike.lat, latLngLike.lng);\n  return latLng + '';\n}\n\nfunction convertToLatLngBoundsString(latLngBoundsLike) {\n  if (!latLngBoundsLike) {\n    return '';\n  }\n\n  var latLngBounds = latLngBoundsLike instanceof google.maps.LatLngBounds ? latLngBoundsLike : new google.maps.LatLngBounds(new google.maps.LatLng(latLngBoundsLike.south, latLngBoundsLike.east), new google.maps.LatLng(latLngBoundsLike.north, latLngBoundsLike.west));\n  return latLngBounds + '';\n}\n\nvar OverlayView = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(OverlayView, _React$PureComponent);\n\n  function OverlayView(props) {\n    var _this;\n\n    _this = _React$PureComponent.call(this, props) || this;\n    _this.state = {\n      paneEl: null,\n      containerStyle: {\n        // set initial position\n        position: 'absolute'\n      }\n    };\n\n    _this.updatePane = function () {\n      var mapPaneName = _this.props.mapPaneName; // https://developers.google.com/maps/documentation/javascript/3.exp/reference#MapPanes\n\n      var mapPanes = _this.overlayView.getPanes();\n\n      !!!mapPaneName ? process.env.NODE_ENV !== \"production\" ? __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false, \"OverlayView requires props.mapPaneName but got %s\", mapPaneName) : __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false) : void 0;\n\n      if (mapPanes) {\n        _this.setState({\n          paneEl: mapPanes[mapPaneName]\n        });\n      } else {\n        _this.setState({\n          paneEl: null\n        });\n      }\n    };\n\n    _this.onAdd = function () {\n      _this.updatePane();\n\n      _this.props.onLoad == null ? void 0 : _this.props.onLoad(_this.overlayView);\n    };\n\n    _this.onPositionElement = function () {\n      var mapCanvasProjection = _this.overlayView.getProjection();\n\n      var offset = _extends({\n        x: 0,\n        y: 0\n      }, _this.containerRef.current ? getOffsetOverride(_this.containerRef.current, _this.props.getPixelPositionOffset) : {});\n\n      var layoutStyles = getLayoutStyles(mapCanvasProjection, offset, _this.props.bounds, _this.props.position);\n      var _this$state$container = _this.state.containerStyle,\n          left = _this$state$container.left,\n          top = _this$state$container.top,\n          width = _this$state$container.width,\n          height = _this$state$container.height;\n\n      if (!arePositionsEqual(layoutStyles, {\n        left: left,\n        top: top,\n        width: width,\n        height: height\n      })) {\n        _this.setState({\n          containerStyle: _extends({}, layoutStyles, {\n            position: 'absolute'\n          })\n        });\n      }\n    };\n\n    _this.draw = function () {\n      _this.onPositionElement();\n    };\n\n    _this.onRemove = function () {\n      _this.setState(function () {\n        return {\n          paneEl: null\n        };\n      }); // this.mapPaneEl = null\n\n\n      _this.props.onUnmount == null ? void 0 : _this.props.onUnmount(_this.overlayView);\n    };\n\n    _this.containerRef = Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createRef\"])(); // You must implement three methods: onAdd(), draw(), and onRemove().\n\n    var overlayView = new google.maps.OverlayView();\n    overlayView.onAdd = _this.onAdd;\n    overlayView.draw = _this.draw;\n    overlayView.onRemove = _this.onRemove;\n    _this.overlayView = overlayView;\n    return _this;\n  }\n\n  var _proto = OverlayView.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    // You must call setMap() with a valid Map object to trigger the call to\n    // the onAdd() method and setMap(null) in order to trigger the onRemove() method.\n    this.overlayView.setMap(this.context);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var prevPositionString = convertToLatLngString(prevProps.position);\n    var positionString = convertToLatLngString(this.props.position);\n    var prevBoundsString = convertToLatLngBoundsString(prevProps.bounds);\n    var boundsString = convertToLatLngBoundsString(this.props.bounds);\n\n    if (prevPositionString !== positionString || prevBoundsString !== boundsString) {\n      this.overlayView.draw();\n    }\n\n    if (prevProps.mapPaneName !== this.props.mapPaneName) {\n      this.updatePane();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.overlayView.setMap(null);\n  };\n\n  _proto.render = function render() {\n    var paneEl = this.state.paneEl;\n\n    if (paneEl) {\n      return Object(__WEBPACK_IMPORTED_MODULE_4_react_dom__[\"createPortal\"])(Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(\"div\", {\n        ref: this.containerRef,\n        style: this.state.containerStyle\n      }, __WEBPACK_IMPORTED_MODULE_0_react__[\"Children\"].only(this.props.children)), paneEl);\n    } else {\n      return null;\n    }\n  };\n\n  return OverlayView;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\nOverlayView.FLOAT_PANE = \"floatPane\";\nOverlayView.MAP_PANE = \"mapPane\";\nOverlayView.MARKER_LAYER = \"markerLayer\";\nOverlayView.OVERLAY_LAYER = \"overlayLayer\";\nOverlayView.OVERLAY_MOUSE_TARGET = \"overlayMouseTarget\";\nOverlayView.contextType = MapContext;\n\nfunction noop() {}\n\nvar eventMap$d = {\n  onDblClick: 'dblclick',\n  onClick: 'click'\n};\nvar updaterMap$d = {\n  opacity: function opacity(instance, _opacity) {\n    instance.setOpacity(_opacity);\n  }\n};\nvar GroundOverlay = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(GroundOverlay, _React$PureComponent);\n\n  function GroundOverlay() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      groundOverlay: null\n    };\n\n    _this.setGroundOverlayCallback = function () {\n      if (_this.state.groundOverlay !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.groundOverlay);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = GroundOverlay.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    !(!!this.props.url || !!this.props.bounds) ? process.env.NODE_ENV !== \"production\" ? __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false, \"For GroundOverlay, url and bounds are passed in to constructor and are immutable after instantiated. This is the behavior of Google Maps JavaScript API v3 ( See https://developers.google.com/maps/documentation/javascript/reference#GroundOverlay) Hence, use the corresponding two props provided by `react-google-maps-api`, url and bounds. In some cases, you'll need the GroundOverlay component to reflect the changes of url and bounds. You can leverage the React's key property to remount the component. Typically, just `key={url}` would serve your need. See https://github.com/tomchentw/react-google-maps/issues/655\") : __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false) : void 0;\n    var groundOverlay = new google.maps.GroundOverlay(this.props.url, this.props.bounds, _extends({}, this.props.options, {\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$d,\n      eventMap: eventMap$d,\n      prevProps: {},\n      nextProps: this.props,\n      instance: groundOverlay\n    });\n    this.setState(function setGroundOverlay() {\n      return {\n        groundOverlay: groundOverlay\n      };\n    }, this.setGroundOverlayCallback);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.groundOverlay !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$d,\n        eventMap: eventMap$d,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.groundOverlay\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.groundOverlay) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.groundOverlay);\n      }\n\n      this.state.groundOverlay.setMap(null);\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return GroundOverlay;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\nGroundOverlay.defaultProps = {\n  onLoad: noop\n};\nGroundOverlay.contextType = MapContext;\n\nvar eventMap$e = {};\nvar updaterMap$e = {\n  data: function data(instance, _data) {\n    instance.setData(_data);\n  },\n  map: function map(instance, _map) {\n    instance.setMap(_map);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  }\n};\nvar HeatmapLayer = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(HeatmapLayer, _React$PureComponent);\n\n  function HeatmapLayer() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      heatmapLayer: null\n    };\n\n    _this.setHeatmapLayerCallback = function () {\n      if (_this.state.heatmapLayer !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.heatmapLayer);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = HeatmapLayer.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    !!!google.maps.visualization ? process.env.NODE_ENV !== \"production\" ? __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false, 'Did you include prop libraries={[\"visualization\"]} to <LoadScript />? %s', google.maps.visualization) : __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false) : void 0;\n    !!!this.props.data ? process.env.NODE_ENV !== \"production\" ? __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false, 'data property is required in HeatmapLayer %s', this.props.data) : __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false) : void 0;\n    var heatmapLayer = new google.maps.visualization.HeatmapLayer(_extends({}, this.props.options || {}, {\n      data: this.props.data,\n      map: this.context\n    }));\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$e,\n      eventMap: eventMap$e,\n      prevProps: {},\n      nextProps: this.props,\n      instance: heatmapLayer\n    });\n    this.setState(function setHeatmapLayer() {\n      return {\n        heatmapLayer: heatmapLayer\n      };\n    }, this.setHeatmapLayerCallback);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    unregisterEvents(this.registeredEvents);\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$e,\n      eventMap: eventMap$e,\n      prevProps: prevProps,\n      nextProps: this.props,\n      instance: this.state.heatmapLayer\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.heatmapLayer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.heatmapLayer);\n      }\n\n      unregisterEvents(this.registeredEvents);\n      this.state.heatmapLayer.setMap(null);\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return HeatmapLayer;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\nHeatmapLayer.contextType = MapContext;\n\nvar eventMap$f = {\n  onCloseClick: 'closeclick',\n  onPanoChanged: 'pano_changed',\n  onPositionChanged: 'position_changed',\n  onPovChanged: 'pov_changed',\n  onResize: 'resize',\n  onStatusChanged: 'status_changed',\n  onVisibleChanged: 'visible_changed',\n  onZoomChanged: 'zoom_changed'\n};\nvar updaterMap$f = {\n  register: function register(instance, provider, options) {\n    instance.registerPanoProvider(provider, options);\n  },\n  links: function links(instance, _links) {\n    instance.setLinks(_links);\n  },\n  motionTracking: function motionTracking(instance, _motionTracking) {\n    instance.setMotionTracking(_motionTracking);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  pano: function pano(instance, _pano) {\n    instance.setPano(_pano);\n  },\n  position: function position(instance, _position) {\n    instance.setPosition(_position);\n  },\n  pov: function pov(instance, _pov) {\n    instance.setPov(_pov);\n  },\n  visible: function visible(instance, _visible) {\n    instance.setVisible(_visible);\n  },\n  zoom: function zoom(instance, _zoom) {\n    instance.setZoom(_zoom);\n  }\n};\nvar StreetViewPanorama = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(StreetViewPanorama, _React$PureComponent);\n\n  function StreetViewPanorama() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      streetViewPanorama: null\n    };\n\n    _this.setStreetViewPanoramaCallback = function () {\n      if (_this.state.streetViewPanorama !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.streetViewPanorama);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = StreetViewPanorama.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var streetViewPanorama = this.context.getStreetView();\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$f,\n      eventMap: eventMap$f,\n      prevProps: {},\n      nextProps: this.props,\n      instance: streetViewPanorama\n    });\n    this.setState(function setStreetViewPanorama() {\n      return {\n        streetViewPanorama: streetViewPanorama\n      };\n    }, this.setStreetViewPanoramaCallback);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.streetViewPanorama !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$f,\n        eventMap: eventMap$f,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.streetViewPanorama\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.streetViewPanorama !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.streetViewPanorama);\n      }\n\n      unregisterEvents(this.registeredEvents);\n      this.state.streetViewPanorama.setVisible(false);\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return StreetViewPanorama;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\nStreetViewPanorama.contextType = MapContext;\n\nvar StreetViewService = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(StreetViewService, _React$PureComponent);\n\n  function StreetViewService() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.state = {\n      streetViewService: null\n    };\n\n    _this.setStreetViewServiceCallback = function () {\n      if (_this.state.streetViewService !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.streetViewService);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = StreetViewService.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var streetViewService = new google.maps.StreetViewService();\n    this.setState(function setStreetViewService() {\n      return {\n        streetViewService: streetViewService\n      };\n    }, this.setStreetViewServiceCallback);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.streetViewService !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.streetViewService);\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return StreetViewService;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\nStreetViewService.contextType = MapContext;\n\nvar DirectionsService = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(DirectionsService, _React$PureComponent);\n\n  function DirectionsService() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.state = {\n      directionsService: null\n    };\n\n    _this.setDirectionsServiceCallback = function () {\n      if (_this.state.directionsService !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.directionsService);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = DirectionsService.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    !!!this.props.options ? process.env.NODE_ENV !== \"production\" ? __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false, 'DirectionsService expected options object as parameter, but got %s', this.props.options) : __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false) : void 0;\n    var directionsService = new google.maps.DirectionsService();\n    this.setState(function setDirectionsService() {\n      return {\n        directionsService: directionsService\n      };\n    }, this.setDirectionsServiceCallback);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    if (this.state.directionsService !== null) {\n      this.state.directionsService.route(this.props.options, this.props.callback);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.directionsService !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.directionsService);\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(__WEBPACK_IMPORTED_MODULE_0_react__[\"Fragment\"], null);\n  };\n\n  return DirectionsService;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\n\nvar eventMap$g = {\n  onDirectionsChanged: 'directions_changed'\n};\nvar updaterMap$g = {\n  directions: function directions(instance, _directions) {\n    instance.setDirections(_directions);\n  },\n  map: function map(instance, _map) {\n    instance.setMap(_map);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  panel: function panel(instance, _panel) {\n    instance.setPanel(_panel);\n  },\n  routeIndex: function routeIndex(instance, _routeIndex) {\n    instance.setRouteIndex(_routeIndex);\n  }\n};\nvar DirectionsRenderer = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(DirectionsRenderer, _React$PureComponent);\n\n  function DirectionsRenderer() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.state = {\n      directionsRenderer: null\n    };\n\n    _this.setDirectionsRendererCallback = function () {\n      if (_this.state.directionsRenderer !== null) {\n        _this.state.directionsRenderer.setMap(_this.context);\n\n        if (_this.props.onLoad) {\n          _this.props.onLoad(_this.state.directionsRenderer);\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = DirectionsRenderer.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var directionsRenderer = new google.maps.DirectionsRenderer(this.props.options);\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$g,\n      eventMap: eventMap$g,\n      prevProps: {},\n      nextProps: this.props,\n      instance: directionsRenderer\n    });\n    this.setState(function setDirectionsRenderer() {\n      return {\n        directionsRenderer: directionsRenderer\n      };\n    }, this.setDirectionsRendererCallback);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.directionsRenderer !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$g,\n        eventMap: eventMap$g,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.directionsRenderer\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.directionsRenderer !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.directionsRenderer);\n      }\n\n      unregisterEvents(this.registeredEvents);\n\n      if (this.state.directionsRenderer) {\n        this.state.directionsRenderer.setMap(null);\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(__WEBPACK_IMPORTED_MODULE_0_react__[\"Fragment\"], null);\n  };\n\n  return DirectionsRenderer;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\nDirectionsRenderer.contextType = MapContext;\n\nvar DistanceMatrixService = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(DistanceMatrixService, _React$PureComponent);\n\n  function DistanceMatrixService() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.state = {\n      distanceMatrixService: null\n    };\n\n    _this.setDistanceMatrixServiceCallback = function () {\n      if (_this.state.distanceMatrixService !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.distanceMatrixService);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = DistanceMatrixService.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    !!!this.props.options ? process.env.NODE_ENV !== \"production\" ? __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false, 'DistanceMatrixService expected options object as parameter, but go %s', this.props.options) : __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false) : void 0;\n    var distanceMatrixService = new google.maps.DistanceMatrixService();\n    this.setState(function setDistanceMatrixService() {\n      return {\n        distanceMatrixService: distanceMatrixService\n      };\n    }, this.setDistanceMatrixServiceCallback);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    if (this.state.distanceMatrixService !== null) {\n      this.state.distanceMatrixService.getDistanceMatrix(this.props.options, this.props.callback);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.distanceMatrixService !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.distanceMatrixService);\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(__WEBPACK_IMPORTED_MODULE_0_react__[\"Fragment\"], null);\n  };\n\n  return DistanceMatrixService;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\n\nvar eventMap$h = {\n  onPlacesChanged: 'places_changed'\n};\nvar updaterMap$h = {\n  bounds: function bounds(instance, _bounds) {\n    instance.setBounds(_bounds);\n  }\n};\n\nvar StandaloneSearchBox = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(StandaloneSearchBox, _React$PureComponent);\n\n  function StandaloneSearchBox() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.containerElement = Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createRef\"])();\n    _this.state = {\n      searchBox: null\n    };\n\n    _this.setSearchBoxCallback = function () {\n      if (_this.state.searchBox !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.searchBox);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = StandaloneSearchBox.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    !!!google.maps.places ? process.env.NODE_ENV !== \"production\" ? __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false, 'You need to provide libraries={[\"places\"]} prop to <LoadScript /> component %s', google.maps.places) : __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false) : void 0;\n\n    if (this.containerElement !== null && this.containerElement.current !== null) {\n      var input = this.containerElement.current.querySelector('input');\n\n      if (input !== null) {\n        var searchBox = new google.maps.places.SearchBox(input, this.props.options);\n        this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n          updaterMap: updaterMap$h,\n          eventMap: eventMap$h,\n          prevProps: {},\n          nextProps: this.props,\n          instance: searchBox\n        });\n        this.setState(function setSearchBox() {\n          return {\n            searchBox: searchBox\n          };\n        }, this.setSearchBoxCallback);\n      }\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.state.searchBox !== null) {\n      unregisterEvents(this.registeredEvents);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$h,\n        eventMap: eventMap$h,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.searchBox\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.searchBox !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.searchBox);\n      }\n\n      unregisterEvents(this.registeredEvents);\n    }\n  };\n\n  _proto.render = function render() {\n    return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(\"div\", {\n      ref: this.containerElement\n    }, __WEBPACK_IMPORTED_MODULE_0_react__[\"Children\"].only(this.props.children));\n  };\n\n  return StandaloneSearchBox;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\n\nStandaloneSearchBox.contextType = MapContext;\n\nvar eventMap$i = {\n  onPlaceChanged: 'place_changed'\n};\nvar updaterMap$i = {\n  bounds: function bounds(instance, _bounds) {\n    instance.setBounds(_bounds);\n  },\n  restrictions: function restrictions(instance, _restrictions) {\n    instance.setComponentRestrictions(_restrictions);\n  },\n  fields: function fields(instance, _fields) {\n    instance.setFields(_fields);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  types: function types(instance, _types) {\n    instance.setTypes(_types);\n  }\n};\nvar Autocomplete = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(Autocomplete, _React$PureComponent);\n\n  function Autocomplete() {\n    var _this;\n\n    _this = _React$PureComponent.apply(this, arguments) || this;\n    _this.registeredEvents = [];\n    _this.containerElement = Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createRef\"])();\n    _this.state = {\n      autocomplete: null\n    };\n\n    _this.setAutocompleteCallback = function () {\n      if (_this.state.autocomplete !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.autocomplete);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = Autocomplete.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    !!!google.maps.places ? process.env.NODE_ENV !== \"production\" ? __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false, 'You need to provide libraries={[\"places\"]} prop to <LoadScript /> component %s', google.maps.places) : __WEBPACK_IMPORTED_MODULE_1_invariant___default()(false) : void 0; // TODO: why current could be equal null?\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n    var input = this.containerElement.current.querySelector('input');\n\n    if (input) {\n      var autocomplete = new google.maps.places.Autocomplete(input, this.props.options);\n      this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap$i,\n        eventMap: eventMap$i,\n        prevProps: {},\n        nextProps: this.props,\n        instance: autocomplete\n      });\n      this.setState(function setAutocomplete() {\n        return {\n          autocomplete: autocomplete\n        };\n      }, this.setAutocompleteCallback);\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    unregisterEvents(this.registeredEvents);\n    this.registeredEvents = applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap$i,\n      eventMap: eventMap$i,\n      prevProps: prevProps,\n      nextProps: this.props,\n      instance: this.state.autocomplete\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.autocomplete !== null) {\n      unregisterEvents(this.registeredEvents);\n    }\n  };\n\n  _proto.render = function render() {\n    return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(\"div\", {\n      ref: this.containerElement,\n      className: this.props.className || ''\n    }, __WEBPACK_IMPORTED_MODULE_0_react__[\"Children\"].only(this.props.children));\n  };\n\n  return Autocomplete;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);\nAutocomplete.contextType = MapContext;\n\n\n//# sourceMappingURL=reactgooglemapsapi.esm.js.map\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(/*! ./../../../process/browser.js */ 0)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8\n");

/***/ }),
/* 9 */
/*!************************!*\
  !*** external "React" ***!
  \************************/
/*! dynamic exports provided */
/*! exports used: Children, Fragment, PureComponent, cloneElement, createContext, createElement, createRef, isValidElement, memo, useContext, useEffect, useMemo, useRef, useState */
/***/ (function(module, exports) {

module.exports = React;

/***/ }),
/* 10 */
/*!*******************************************!*\
  !*** ./node_modules/invariant/browser.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../process/browser.js */ 0)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW52YXJpYW50L2Jyb3dzZXIuanM/NzJiNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIGludmFyaWFudCA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFyaWFudCByZXF1aXJlcyBhbiBlcnJvciBtZXNzYWdlIGFyZ3VtZW50Jyk7XG4gICAgfVxuICB9XG5cbiAgaWYgKCFjb25kaXRpb24pIHtcbiAgICB2YXIgZXJyb3I7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgK1xuICAgICAgICAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYXJncyA9IFthLCBiLCBjLCBkLCBlLCBmXTtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkgeyByZXR1cm4gYXJnc1thcmdJbmRleCsrXTsgfSlcbiAgICAgICk7XG4gICAgICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCBpbnZhcmlhbnQncyBvd24gZnJhbWVcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBpbnZhcmlhbnQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9pbnZhcmlhbnQvYnJvd3Nlci5qc1xuLy8gbW9kdWxlIGlkID0gMTBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///10\n");

/***/ }),
/* 11 */
/*!******************************************************************!*\
  !*** ./node_modules/@googlemaps/js-api-loader/dist/index.esm.js ***!
  \******************************************************************/
/*! exports provided: DEFAULT_ID, Loader */
/*! exports used: Loader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export DEFAULT_ID */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Loader; });\n// do not edit .js files directly - edit src/index.jst\n\n\n\nvar fastDeepEqual = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n\n/**\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at.\r\n *\r\n *      Http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_ID = \"__googleMapsScriptId\";\r\n/**\r\n * [[Loader]] makes it easier to add Google Maps JavaScript API to your application\r\n * dynamically using\r\n * [Promises](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\r\n * It works by dynamically creating and appending a script node to the the\r\n * document head and wrapping the callback function so as to return a promise.\r\n *\r\n * ```\r\n * const loader = new Loader({\r\n *   apiKey: \"\",\r\n *   version: \"weekly\",\r\n *   libraries: [\"places\"]\r\n * });\r\n *\r\n * loader.load().then(() => {\r\n *   const map = new google.maps.Map(...)\r\n * })\r\n * ```\r\n */\r\nclass Loader {\r\n    /**\r\n     * Creates an instance of Loader using [[LoaderOptions]]. No defaults are set\r\n     * using this library, instead the defaults are set by the Google Maps\r\n     * JavaScript API server.\r\n     *\r\n     * ```\r\n     * const loader = Loader({apiKey, version: 'weekly', libraries: ['places']});\r\n     * ```\r\n     */\r\n    constructor({ apiKey, channel, client, id = DEFAULT_ID, libraries = [], language, region, version, mapIds, nonce, retries = 3, url = \"https://maps.googleapis.com/maps/api/js\", }) {\r\n        this.CALLBACK = \"__googleMapsCallback\";\r\n        this.callbacks = [];\r\n        this.done = false;\r\n        this.loading = false;\r\n        this.errors = [];\r\n        this.version = version;\r\n        this.apiKey = apiKey;\r\n        this.channel = channel;\r\n        this.client = client;\r\n        this.id = id || DEFAULT_ID; // Do not allow empty string\r\n        this.libraries = libraries;\r\n        this.language = language;\r\n        this.region = region;\r\n        this.mapIds = mapIds;\r\n        this.nonce = nonce;\r\n        this.retries = retries;\r\n        this.url = url;\r\n        if (Loader.instance) {\r\n            if (!fastDeepEqual(this.options, Loader.instance.options)) {\r\n                throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(Loader.instance.options)}`);\r\n            }\r\n            return Loader.instance;\r\n        }\r\n        Loader.instance = this;\r\n    }\r\n    get options() {\r\n        return {\r\n            version: this.version,\r\n            apiKey: this.apiKey,\r\n            channel: this.channel,\r\n            client: this.client,\r\n            id: this.id,\r\n            libraries: this.libraries,\r\n            language: this.language,\r\n            region: this.region,\r\n            mapIds: this.mapIds,\r\n            nonce: this.nonce,\r\n            url: this.url,\r\n        };\r\n    }\r\n    get failed() {\r\n        return this.done && !this.loading && this.errors.length >= this.retries + 1;\r\n    }\r\n    /**\r\n     * CreateUrl returns the Google Maps JavaScript API script url given the [[LoaderOptions]].\r\n     *\r\n     * @ignore\r\n     */\r\n    createUrl() {\r\n        let url = this.url;\r\n        url += `?callback=${this.CALLBACK}`;\r\n        if (this.apiKey) {\r\n            url += `&key=${this.apiKey}`;\r\n        }\r\n        if (this.channel) {\r\n            url += `&channel=${this.channel}`;\r\n        }\r\n        if (this.client) {\r\n            url += `&client=${this.client}`;\r\n        }\r\n        if (this.libraries.length > 0) {\r\n            url += `&libraries=${this.libraries.join(\",\")}`;\r\n        }\r\n        if (this.language) {\r\n            url += `&language=${this.language}`;\r\n        }\r\n        if (this.region) {\r\n            url += `&region=${this.region}`;\r\n        }\r\n        if (this.version) {\r\n            url += `&v=${this.version}`;\r\n        }\r\n        if (this.mapIds) {\r\n            url += `&map_ids=${this.mapIds.join(\",\")}`;\r\n        }\r\n        return url;\r\n    }\r\n    /**\r\n     * Load the Google Maps JavaScript API script and return a Promise.\r\n     */\r\n    load() {\r\n        return this.loadPromise();\r\n    }\r\n    /**\r\n     * Load the Google Maps JavaScript API script and return a Promise.\r\n     *\r\n     * @ignore\r\n     */\r\n    loadPromise() {\r\n        return new Promise((resolve, reject) => {\r\n            this.loadCallback((err) => {\r\n                if (!err) {\r\n                    resolve();\r\n                }\r\n                else {\r\n                    reject(err);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Load the Google Maps JavaScript API script with a callback.\r\n     */\r\n    loadCallback(fn) {\r\n        this.callbacks.push(fn);\r\n        this.execute();\r\n    }\r\n    /**\r\n     * Set the script on document.\r\n     */\r\n    setScript() {\r\n        if (document.getElementById(this.id)) {\r\n            // TODO wrap onerror callback for cases where the script was loaded elsewhere\r\n            this.callback();\r\n            return;\r\n        }\r\n        const url = this.createUrl();\r\n        const script = document.createElement(\"script\");\r\n        script.id = this.id;\r\n        script.type = \"text/javascript\";\r\n        script.src = url;\r\n        script.onerror = this.loadErrorCallback.bind(this);\r\n        script.defer = true;\r\n        script.async = true;\r\n        if (this.nonce) {\r\n            script.nonce = this.nonce;\r\n        }\r\n        document.head.appendChild(script);\r\n    }\r\n    deleteScript() {\r\n        const script = document.getElementById(this.id);\r\n        if (script) {\r\n            script.remove();\r\n        }\r\n    }\r\n    /**\r\n     * Reset the loader state.\r\n     */\r\n    reset() {\r\n        this.deleteScript();\r\n        this.done = false;\r\n        this.loading = false;\r\n        this.errors = [];\r\n        this.onerrorEvent = null;\r\n    }\r\n    resetIfRetryingFailed() {\r\n        if (this.failed) {\r\n            this.reset();\r\n        }\r\n    }\r\n    loadErrorCallback(e) {\r\n        this.errors.push(e);\r\n        if (this.errors.length <= this.retries) {\r\n            const delay = this.errors.length * Math.pow(2, this.errors.length);\r\n            console.log(`Failed to load Google Maps script, retrying in ${delay} ms.`);\r\n            setTimeout(() => {\r\n                this.deleteScript();\r\n                this.setScript();\r\n            }, delay);\r\n        }\r\n        else {\r\n            this.onerrorEvent = e;\r\n            this.callback();\r\n        }\r\n    }\r\n    setCallback() {\r\n        window.__googleMapsCallback = this.callback.bind(this);\r\n    }\r\n    callback() {\r\n        this.done = true;\r\n        this.loading = false;\r\n        this.callbacks.forEach((cb) => {\r\n            cb(this.onerrorEvent);\r\n        });\r\n        this.callbacks = [];\r\n    }\r\n    execute() {\r\n        this.resetIfRetryingFailed();\r\n        if (this.done) {\r\n            this.callback();\r\n        }\r\n        else {\r\n            // short circuit and warn if google.maps is already loaded\r\n            if (window.google && window.google.maps && window.google.maps.version) {\r\n                console.warn(\"Google Maps already loaded outside @googlemaps/js-api-loader.\" +\r\n                    \"This may result in undesirable behavior as options and script parameters may not match.\");\r\n                this.callback();\r\n                return;\r\n            }\r\n            if (this.loading) ;\r\n            else {\r\n                this.loading = true;\r\n                this.setCallback();\r\n                this.setScript();\r\n            }\r\n        }\r\n    }\r\n}\n\n\n//# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///11\n");

/***/ }),
/* 12 */
/*!**************************************************************************************!*\
  !*** ./node_modules/@react-google-maps/marker-clusterer/dist/markerclusterer.esm.js ***!
  \**************************************************************************************/
/*! exports provided: Cluster, ClusterIcon, Clusterer */
/*! exports used: Clusterer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export Cluster */\n/* unused harmony export ClusterIcon */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Clusterer; });\nvar ClusterIcon = /*#__PURE__*/function () {\n  function ClusterIcon(cluster, styles) {\n    cluster.getClusterer().extend(ClusterIcon, google.maps.OverlayView);\n    this.cluster = cluster;\n    this.className = this.cluster.getClusterer().getClusterClass();\n    this.styles = styles;\n    this.center = undefined;\n    this.div = null;\n    this.sums = null;\n    this.visible = false;\n    this.boundsChangedListener = null;\n    this.url = '';\n    this.height = 0;\n    this.width = 0;\n    this.anchorText = [0, 0];\n    this.anchorIcon = [0, 0];\n    this.textColor = 'black';\n    this.textSize = 11;\n    this.textDecoration = 'none';\n    this.fontWeight = 'bold';\n    this.fontStyle = 'normal';\n    this.fontFamily = 'Arial,sans-serif';\n    this.backgroundPosition = '0 0'; // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n    this.setMap(cluster.getMap()); // Note: this causes onAdd to be called\n  }\n\n  var _proto = ClusterIcon.prototype;\n\n  _proto.onAdd = function onAdd() {\n    var _this = this;\n\n    var cMouseDownInCluster;\n    var cDraggingMapByCluster;\n    this.div = document.createElement('div');\n    this.div.className = this.className;\n\n    if (this.visible) {\n      this.show();\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n\n    this.getPanes().overlayMouseTarget.appendChild(this.div); // Fix for Issue 157\n\n    this.boundsChangedListener = google.maps.event.addListener( // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap(), 'boundschanged', function boundsChanged() {\n      cDraggingMapByCluster = cMouseDownInCluster;\n    });\n    google.maps.event.addDomListener(this.div, 'mousedown', function onMouseDown() {\n      cMouseDownInCluster = true;\n      cDraggingMapByCluster = false;\n    }); // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n\n    google.maps.event.addDomListener(this.div, 'click', // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    function (event) {\n      cMouseDownInCluster = false;\n\n      if (!cDraggingMapByCluster) {\n        var markerClusterer = _this.cluster.getClusterer();\n        /**\r\n         * This event is fired when a cluster marker is clicked.\r\n         * @name MarkerClusterer#click\r\n         * @param {Cluster} c The cluster that was clicked.\r\n         * @event\r\n         */\n\n\n        google.maps.event.trigger(markerClusterer, 'click', _this.cluster);\n        google.maps.event.trigger(markerClusterer, 'clusterclick', _this.cluster); // deprecated name\n        // The default click handler follows. Disable it by setting\n        // the zoomOnClick property to false.\n\n        if (markerClusterer.getZoomOnClick()) {\n          // Zoom into the cluster.\n          var maxZoom = markerClusterer.getMaxZoom();\n\n          var bounds = _this.cluster.getBounds(); // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n\n\n          markerClusterer.getMap().fitBounds(bounds); // There is a fix for Issue 170 here:\n\n          setTimeout(function timeout() {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            markerClusterer.getMap().fitBounds(bounds); // Don't zoom beyond the max zoom level\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n\n            if (maxZoom !== null && markerClusterer.getMap().getZoom() > maxZoom) {\n              // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n              // @ts-ignore\n              markerClusterer.getMap().setZoom(maxZoom + 1);\n            }\n          }, 100);\n        } // Prevent event propagation to the map:\n\n\n        event.cancelBubble = true;\n\n        if (event.stopPropagation) {\n          event.stopPropagation();\n        }\n      }\n    });\n    google.maps.event.addDomListener(this.div, 'mouseover', // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    function () {\n      /**\r\n       * This event is fired when the mouse moves over a cluster marker.\r\n       * @name MarkerClusterer#mouseover\r\n       * @param {Cluster} c The cluster that the mouse moved over.\r\n       * @event\r\n       */\n      google.maps.event.trigger(_this.cluster.getClusterer(), 'mouseover', _this.cluster);\n    }); // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n\n    google.maps.event.addDomListener(this.div, 'mouseout', // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    function () {\n      /**\r\n       * This event is fired when the mouse moves out of a cluster marker.\r\n       * @name MarkerClusterer#mouseout\r\n       * @param {Cluster} c The cluster that the mouse moved out of.\r\n       * @event\r\n       */\n      google.maps.event.trigger(_this.cluster.getClusterer(), 'mouseout', _this.cluster);\n    });\n  };\n\n  _proto.onRemove = function onRemove() {\n    if (this.div && this.div.parentNode) {\n      this.hide();\n\n      if (this.boundsChangedListener !== null) {\n        google.maps.event.removeListener(this.boundsChangedListener);\n      }\n\n      google.maps.event.clearInstanceListeners(this.div);\n      this.div.parentNode.removeChild(this.div);\n      this.div = null;\n    }\n  };\n\n  _proto.draw = function draw() {\n    if (this.visible && this.div !== null && this.center) {\n      var _this$getPosFromLatLn = this.getPosFromLatLng(this.center),\n          x = _this$getPosFromLatLn.x,\n          y = _this$getPosFromLatLn.y;\n\n      this.div.style.top = y + 'px';\n      this.div.style.left = x + 'px';\n    }\n  };\n\n  _proto.hide = function hide() {\n    if (this.div) {\n      this.div.style.display = 'none';\n    }\n\n    this.visible = false;\n  };\n\n  _proto.show = function show() {\n    if (this.div && this.center) {\n      var img = '',\n          divTitle = ''; // NOTE: values must be specified in px units\n\n      var bp = this.backgroundPosition.split(' ');\n      var spriteH = parseInt(bp[0].replace(/^\\s+|\\s+$/g, ''), 10);\n      var spriteV = parseInt(bp[1].replace(/^\\s+|\\s+$/g, ''), 10);\n      var pos = this.getPosFromLatLng(this.center);\n\n      if (this.sums === null || typeof this.sums.title === 'undefined' || this.sums.title === '') {\n        divTitle = this.cluster.getClusterer().getTitle();\n      } else {\n        divTitle = this.sums.title;\n      }\n\n      this.div.style.cssText = this.createCss(pos);\n      img = \"<img alt='\" + divTitle + \"' src='\" + this.url + \"' style='position: absolute; top: \" + spriteV + 'px; left: ' + spriteH + 'px; '; // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      //@ts-ignore\n\n      if (!this.cluster.getClusterer().enableRetinaIcons) {\n        img += 'clip: rect(' + -1 * spriteV + 'px, ' + (-1 * spriteH + this.width) + 'px, ' + (-1 * spriteV + this.height) + 'px, ' + -1 * spriteH + 'px);';\n      }\n\n      img += \"'>\";\n      this.div.innerHTML = img + \"<div style='\" + 'position: absolute;' + 'top: ' + this.anchorText[0] + 'px;' + 'left: ' + this.anchorText[1] + 'px;' + 'color: ' + this.textColor + ';' + 'font-size: ' + this.textSize + 'px;' + 'font-family: ' + this.fontFamily + ';' + 'font-weight: ' + this.fontWeight + ';' + 'font-style: ' + this.fontStyle + ';' + 'text-decoration: ' + this.textDecoration + ';' + 'text-align: center;' + 'width: ' + this.width + 'px;' + 'line-height:' + this.height + 'px;' + \"'>\" + // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.sums.text + '</div>';\n      this.div.title = divTitle;\n      this.div.style.display = '';\n    }\n\n    this.visible = true;\n  };\n\n  _proto.useStyle = function useStyle(sums) {\n    this.sums = sums;\n    var style = this.styles[Math.min(this.styles.length - 1, Math.max(0, sums.index - 1))];\n    this.url = style.url;\n    this.height = style.height;\n    this.width = style.width;\n    if (style.className) this.className = this.className + \" \" + style.className;\n    this.anchorText = style.anchorText || [0, 0];\n    this.anchorIcon = style.anchorIcon || [this.height / 2, this.width / 2];\n    this.textColor = style.textColor || 'black';\n    this.textSize = style.textSize || 11;\n    this.textDecoration = style.textDecoration || 'none';\n    this.fontWeight = style.fontWeight || 'bold';\n    this.fontStyle = style.fontStyle || 'normal';\n    this.fontFamily = style.fontFamily || 'Arial,sans-serif';\n    this.backgroundPosition = style.backgroundPosition || '0 0';\n  };\n\n  _proto.setCenter = function setCenter(center) {\n    this.center = center;\n  };\n\n  _proto.createCss = function createCss(pos) {\n    var style = [];\n    style.push('cursor: pointer;');\n    style.push('position: absolute; top: ' + pos.y + 'px; left: ' + pos.x + 'px;');\n    style.push('width: ' + this.width + 'px; height: ' + this.height + 'px;');\n    return style.join('');\n  };\n\n  _proto.getPosFromLatLng = function getPosFromLatLng(latlng) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    var pos = this.getProjection().fromLatLngToDivPixel(latlng);\n    pos.x -= this.anchorIcon[1];\n    pos.y -= this.anchorIcon[0]; // pos.x = pos.x\n    // pos.y = pos.y\n\n    return pos;\n  };\n\n  return ClusterIcon;\n}();\n\nvar Cluster = /*#__PURE__*/function () {\n  function Cluster(markerClusterer) {\n    this.markerClusterer = markerClusterer; // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n    this.map = this.markerClusterer.getMap();\n    this.gridSize = this.markerClusterer.getGridSize();\n    this.minClusterSize = this.markerClusterer.getMinimumClusterSize();\n    this.averageCenter = this.markerClusterer.getAverageCenter();\n    this.markers = [];\n    this.center = undefined;\n    this.bounds = null;\n    this.clusterIcon = new ClusterIcon(this, this.markerClusterer.getStyles());\n  }\n\n  var _proto = Cluster.prototype;\n\n  _proto.getSize = function getSize() {\n    return this.markers.length;\n  };\n\n  _proto.getMarkers = function getMarkers() {\n    return this.markers;\n  };\n\n  _proto.getCenter = function getCenter() {\n    return this.center;\n  };\n\n  _proto.getMap = function getMap() {\n    return this.map;\n  };\n\n  _proto.getClusterer = function getClusterer() {\n    return this.markerClusterer;\n  };\n\n  _proto.getBounds = function getBounds() {\n    var bounds = new google.maps.LatLngBounds(this.center, this.center);\n    var markers = this.getMarkers();\n\n    for (var i = 0; i < markers.length; i++) {\n      var position = markers[i].getPosition();\n\n      if (position) {\n        bounds.extend(position);\n      }\n    }\n\n    return bounds;\n  };\n\n  _proto.remove = function remove() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.clusterIcon.setMap(null);\n    this.markers = []; // @ts-ignore\n\n    delete this.markers;\n  };\n\n  _proto.addMarker = function addMarker(marker) {\n    if (this.isMarkerAlreadyAdded(marker)) {\n      return false;\n    }\n\n    if (!this.center) {\n      var position = marker.getPosition();\n\n      if (position) {\n        this.center = position;\n        this.calculateBounds();\n      }\n    } else {\n      if (this.averageCenter) {\n        var _position = marker.getPosition();\n\n        if (_position) {\n          var length = this.markers.length + 1;\n          this.center = new google.maps.LatLng((this.center.lat() * (length - 1) + _position.lat()) / length, (this.center.lng() * (length - 1) + _position.lng()) / length);\n          this.calculateBounds();\n        }\n      }\n    }\n\n    marker.isAdded = true;\n    this.markers.push(marker);\n    var mCount = this.markers.length;\n    var maxZoom = this.markerClusterer.getMaxZoom();\n\n    if (maxZoom !== null && this.map.getZoom() > maxZoom) {\n      // Zoomed in past max zoom, so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map);\n      }\n    } else if (mCount < this.minClusterSize) {\n      // Min cluster size not reached so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map);\n      }\n    } else if (mCount === this.minClusterSize) {\n      // Hide the markers that were showing.\n      for (var i = 0; i < mCount; i++) {\n        this.markers[i].setMap(null);\n      }\n    } else {\n      marker.setMap(null);\n    }\n\n    return true;\n  };\n\n  _proto.isMarkerInClusterBounds = function isMarkerInClusterBounds(marker) {\n    if (this.bounds !== null) {\n      var position = marker.getPosition();\n\n      if (position) {\n        return this.bounds.contains(position);\n      }\n    }\n\n    return false;\n  };\n\n  _proto.calculateBounds = function calculateBounds() {\n    this.bounds = this.markerClusterer.getExtendedBounds(new google.maps.LatLngBounds(this.center, this.center));\n  };\n\n  _proto.updateIcon = function updateIcon() {\n    var mCount = this.markers.length;\n    var maxZoom = this.markerClusterer.getMaxZoom();\n\n    if (maxZoom !== null && this.map.getZoom() > maxZoom) {\n      this.clusterIcon.hide();\n      return;\n    }\n\n    if (mCount < this.minClusterSize) {\n      // Min cluster size not yet reached.\n      this.clusterIcon.hide();\n      return;\n    }\n\n    if (this.center) {\n      this.clusterIcon.setCenter(this.center);\n    }\n\n    this.clusterIcon.useStyle(this.markerClusterer.getCalculator()(this.markers, this.markerClusterer.getStyles().length));\n    this.clusterIcon.show();\n  };\n\n  _proto.isMarkerAlreadyAdded = function isMarkerAlreadyAdded(marker) {\n    if (this.markers.includes) {\n      return this.markers.includes(marker);\n    } else {\n      for (var i = 0; i < this.markers.length; i++) {\n        if (marker === this.markers[i]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  return Cluster;\n}();\n\n/* global google */\n/**\r\n * Supports up to 9007199254740991 (Number.MAX_SAFE_INTEGER) markers\r\n * which is not a problem as max array length is 4294967296 (2**32)\r\n */\n\nvar CALCULATOR = function CALCULATOR(markers, numStyles) {\n  var count = markers.length;\n  var numberOfDigits = count.toString().length;\n  var index = Math.min(numberOfDigits, numStyles);\n  return {\n    text: count.toString(),\n    index: index,\n    title: ''\n  };\n};\n\nvar BATCH_SIZE = 2000;\nvar BATCH_SIZE_IE = 500;\nvar IMAGE_PATH = 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m';\nvar IMAGE_EXTENSION = 'png';\nvar IMAGE_SIZES = [53, 56, 66, 78, 90];\nvar CLUSTERER_CLASS = 'cluster';\nvar Clusterer = /*#__PURE__*/function () {\n  function Clusterer(map, optMarkers, optOptions) {\n    if (optMarkers === void 0) {\n      optMarkers = [];\n    }\n\n    if (optOptions === void 0) {\n      optOptions = {};\n    }\n\n    this.extend(Clusterer, google.maps.OverlayView);\n    this.markers = [];\n    this.clusters = [];\n    this.listeners = [];\n    this.activeMap = null;\n    this.ready = false;\n    this.gridSize = optOptions.gridSize || 60;\n    this.minClusterSize = optOptions.minimumClusterSize || 2;\n    this.maxZoom = optOptions.maxZoom || null;\n    this.styles = optOptions.styles || [];\n    this.title = optOptions.title || '';\n    this.zoomOnClick = true;\n\n    if (optOptions.zoomOnClick !== undefined) {\n      this.zoomOnClick = optOptions.zoomOnClick;\n    }\n\n    this.averageCenter = false;\n\n    if (optOptions.averageCenter !== undefined) {\n      this.averageCenter = optOptions.averageCenter;\n    }\n\n    this.ignoreHidden = false;\n\n    if (optOptions.ignoreHidden !== undefined) {\n      this.ignoreHidden = optOptions.ignoreHidden;\n    }\n\n    this.enableRetinaIcons = false;\n\n    if (optOptions.enableRetinaIcons !== undefined) {\n      this.enableRetinaIcons = optOptions.enableRetinaIcons;\n    }\n\n    this.imagePath = optOptions.imagePath || IMAGE_PATH;\n    this.imageExtension = optOptions.imageExtension || IMAGE_EXTENSION;\n    this.imageSizes = optOptions.imageSizes || IMAGE_SIZES;\n    this.calculator = optOptions.calculator || CALCULATOR;\n    this.batchSize = optOptions.batchSize || BATCH_SIZE;\n    this.batchSizeIE = optOptions.batchSizeIE || BATCH_SIZE_IE;\n    this.clusterClass = optOptions.clusterClass || CLUSTERER_CLASS;\n\n    if (navigator.userAgent.toLowerCase().indexOf('msie') !== -1) {\n      // Try to avoid IE timeout when processing a huge number of markers:\n      this.batchSize = this.batchSizeIE;\n    }\n\n    this.timerRefStatic = null;\n    this.setupStyles();\n    this.addMarkers(optMarkers, true); // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n    this.setMap(map); // Note: this causes onAdd to be called\n  }\n\n  var _proto = Clusterer.prototype;\n\n  _proto.onAdd = function onAdd() {\n    var _this = this;\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.activeMap = this.getMap();\n    this.ready = true;\n    this.repaint(); // Add the map event listeners\n\n    this.listeners = [google.maps.event.addListener( // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap(), 'zoom_changed', // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    function () {\n      _this.resetViewport(false); // Workaround for this Google bug: when map is at level 0 and \"-\" of\n      // zoom slider is clicked, a \"zoom_changed\" event is fired even though\n      // the map doesn't zoom out any further. In this situation, no \"idle\"\n      // event is triggered so the cluster markers that have been removed\n      // do not get redrawn. Same goes for a zoom in at maxZoom.\n\n\n      if ( // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      _this.getMap().getZoom() === (_this.get('minZoom') || 0) || // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      _this.getMap().getZoom() === _this.get('maxZoom')) {\n        google.maps.event.trigger(_this, 'idle');\n      }\n    }), google.maps.event.addListener( // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap(), 'idle', // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    function () {\n      _this.redraw();\n    })];\n  } // eslint-disable-next-line @getify/proper-arrows/this\n  ;\n\n  _proto.onRemove = function onRemove() {\n    // Put all the managed markers back on the map:\n    for (var i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].getMap() !== this.activeMap) {\n        this.markers[i].setMap(this.activeMap);\n      }\n    } // Remove all clusters:\n\n\n    for (var _i = 0; _i < this.clusters.length; _i++) {\n      this.clusters[_i].remove();\n    }\n\n    this.clusters = []; // Remove map event listeners:\n\n    for (var _i2 = 0; _i2 < this.listeners.length; _i2++) {\n      google.maps.event.removeListener(this.listeners[_i2]);\n    }\n\n    this.listeners = [];\n    this.activeMap = null;\n    this.ready = false;\n  } // eslint-disable-next-line @typescript-eslint/no-empty-function\n  ;\n\n  _proto.draw = function draw() {};\n\n  _proto.setupStyles = function setupStyles() {\n    if (this.styles.length > 0) {\n      return;\n    }\n\n    for (var i = 0; i < this.imageSizes.length; i++) {\n      this.styles.push({\n        url: this.imagePath + (i + 1) + '.' + this.imageExtension,\n        height: this.imageSizes[i],\n        width: this.imageSizes[i]\n      });\n    }\n  };\n\n  _proto.fitMapToMarkers = function fitMapToMarkers() {\n    var markers = this.getMarkers();\n    var bounds = new google.maps.LatLngBounds();\n\n    for (var i = 0; i < markers.length; i++) {\n      var position = markers[i].getPosition();\n\n      if (position) {\n        bounds.extend(position);\n      }\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n\n    this.getMap().fitBounds(bounds);\n  };\n\n  _proto.getGridSize = function getGridSize() {\n    return this.gridSize;\n  };\n\n  _proto.setGridSize = function setGridSize(gridSize) {\n    this.gridSize = gridSize;\n  };\n\n  _proto.getMinimumClusterSize = function getMinimumClusterSize() {\n    return this.minClusterSize;\n  };\n\n  _proto.setMinimumClusterSize = function setMinimumClusterSize(minimumClusterSize) {\n    this.minClusterSize = minimumClusterSize;\n  };\n\n  _proto.getMaxZoom = function getMaxZoom() {\n    return this.maxZoom;\n  };\n\n  _proto.setMaxZoom = function setMaxZoom(maxZoom) {\n    this.maxZoom = maxZoom;\n  };\n\n  _proto.getStyles = function getStyles() {\n    return this.styles;\n  };\n\n  _proto.setStyles = function setStyles(styles) {\n    this.styles = styles;\n  };\n\n  _proto.getTitle = function getTitle() {\n    return this.title;\n  };\n\n  _proto.setTitle = function setTitle(title) {\n    this.title = title;\n  };\n\n  _proto.getZoomOnClick = function getZoomOnClick() {\n    return this.zoomOnClick;\n  };\n\n  _proto.setZoomOnClick = function setZoomOnClick(zoomOnClick) {\n    this.zoomOnClick = zoomOnClick;\n  };\n\n  _proto.getAverageCenter = function getAverageCenter() {\n    return this.averageCenter;\n  };\n\n  _proto.setAverageCenter = function setAverageCenter(averageCenter) {\n    this.averageCenter = averageCenter;\n  };\n\n  _proto.getIgnoreHidden = function getIgnoreHidden() {\n    return this.ignoreHidden;\n  };\n\n  _proto.setIgnoreHidden = function setIgnoreHidden(ignoreHidden) {\n    this.ignoreHidden = ignoreHidden;\n  };\n\n  _proto.getEnableRetinaIcons = function getEnableRetinaIcons() {\n    return this.enableRetinaIcons;\n  };\n\n  _proto.setEnableRetinaIcons = function setEnableRetinaIcons(enableRetinaIcons) {\n    this.enableRetinaIcons = enableRetinaIcons;\n  };\n\n  _proto.getImageExtension = function getImageExtension() {\n    return this.imageExtension;\n  };\n\n  _proto.setImageExtension = function setImageExtension(imageExtension) {\n    this.imageExtension = imageExtension;\n  };\n\n  _proto.getImagePath = function getImagePath() {\n    return this.imagePath;\n  };\n\n  _proto.setImagePath = function setImagePath(imagePath) {\n    this.imagePath = imagePath;\n  };\n\n  _proto.getImageSizes = function getImageSizes() {\n    return this.imageSizes;\n  };\n\n  _proto.setImageSizes = function setImageSizes(imageSizes) {\n    this.imageSizes = imageSizes;\n  };\n\n  _proto.getCalculator = function getCalculator() {\n    return this.calculator;\n  };\n\n  _proto.setCalculator = function setCalculator(calculator) {\n    this.calculator = calculator;\n  };\n\n  _proto.getBatchSizeIE = function getBatchSizeIE() {\n    return this.batchSizeIE;\n  };\n\n  _proto.setBatchSizeIE = function setBatchSizeIE(batchSizeIE) {\n    this.batchSizeIE = batchSizeIE;\n  };\n\n  _proto.getClusterClass = function getClusterClass() {\n    return this.clusterClass;\n  };\n\n  _proto.setClusterClass = function setClusterClass(clusterClass) {\n    this.clusterClass = clusterClass;\n  };\n\n  _proto.getMarkers = function getMarkers() {\n    return this.markers;\n  };\n\n  _proto.getTotalMarkers = function getTotalMarkers() {\n    return this.markers.length;\n  };\n\n  _proto.getClusters = function getClusters() {\n    return this.clusters;\n  };\n\n  _proto.getTotalClusters = function getTotalClusters() {\n    return this.clusters.length;\n  };\n\n  _proto.addMarker = function addMarker(marker, optNoDraw) {\n    this.pushMarkerTo(marker);\n\n    if (!optNoDraw) {\n      this.redraw();\n    }\n  };\n\n  _proto.addMarkers = function addMarkers(markers, optNoDraw) {\n    for (var key in markers) {\n      if (markers.hasOwnProperty(key)) {\n        this.pushMarkerTo(markers[key]);\n      }\n    }\n\n    if (!optNoDraw) {\n      this.redraw();\n    }\n  };\n\n  _proto.pushMarkerTo = function pushMarkerTo(marker) {\n    var _this2 = this;\n\n    // If the marker is draggable add a listener so we can update the clusters on the dragend:\n    if (marker.getDraggable()) {\n      // eslint-disable-next-line @getify/proper-arrows/name, @getify/proper-arrows/this\n      google.maps.event.addListener(marker, 'dragend', function () {\n        if (_this2.ready) {\n          marker.isAdded = false;\n\n          _this2.repaint();\n        }\n      });\n    }\n\n    marker.isAdded = false;\n    this.markers.push(marker);\n  };\n\n  _proto.removeMarker_ = function removeMarker_(marker) {\n    var index = -1;\n\n    if (this.markers.indexOf) {\n      index = this.markers.indexOf(marker);\n    } else {\n      for (var i = 0; i < this.markers.length; i++) {\n        if (marker === this.markers[i]) {\n          index = i;\n          break;\n        }\n      }\n    }\n\n    if (index === -1) {\n      // Marker is not in our list of markers, so do nothing:\n      return false;\n    }\n\n    marker.setMap(null);\n    this.markers.splice(index, 1); // Remove the marker from the list of managed markers\n\n    return true;\n  };\n\n  _proto.removeMarker = function removeMarker(marker, optNoDraw) {\n    var removed = this.removeMarker_(marker);\n\n    if (!optNoDraw && removed) {\n      this.repaint();\n    }\n\n    return removed;\n  };\n\n  _proto.removeMarkers = function removeMarkers(markers, optNoDraw) {\n    var removed = false;\n\n    for (var i = 0; i < markers.length; i++) {\n      removed = removed || this.removeMarker_(markers[i]);\n    }\n\n    if (!optNoDraw && removed) {\n      this.repaint();\n    }\n\n    return removed;\n  };\n\n  _proto.clearMarkers = function clearMarkers() {\n    this.resetViewport(true);\n    this.markers = [];\n  };\n\n  _proto.repaint = function repaint() {\n    var oldClusters = this.clusters.slice();\n    this.clusters = [];\n    this.resetViewport(false);\n    this.redraw(); // Remove the old clusters.\n    // Do it in a timeout to prevent blinking effect.\n\n    setTimeout(function timeout() {\n      for (var i = 0; i < oldClusters.length; i++) {\n        oldClusters[i].remove();\n      }\n    }, 0);\n  };\n\n  _proto.getExtendedBounds = function getExtendedBounds(bounds) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    var projection = this.getProjection(); // Convert the points to pixels and the extend out by the grid size.\n\n    var trPix = projection.fromLatLngToDivPixel( // Turn the bounds into latlng.\n    new google.maps.LatLng(bounds.getNorthEast().lat(), bounds.getNorthEast().lng()));\n    trPix.x += this.gridSize;\n    trPix.y -= this.gridSize;\n    var blPix = projection.fromLatLngToDivPixel( // Turn the bounds into latlng.\n    new google.maps.LatLng(bounds.getSouthWest().lat(), bounds.getSouthWest().lng()));\n    blPix.x -= this.gridSize;\n    blPix.y += this.gridSize; // Extend the bounds to contain the new bounds.\n\n    bounds.extend( // Convert the pixel points back to LatLng nw\n    projection.fromDivPixelToLatLng(trPix));\n    bounds.extend( // Convert the pixel points back to LatLng sw\n    projection.fromDivPixelToLatLng(blPix));\n    return bounds;\n  };\n\n  _proto.redraw = function redraw() {\n    // Redraws all the clusters.\n    this.createClusters(0);\n  };\n\n  _proto.resetViewport = function resetViewport(optHide) {\n    // Remove all the clusters\n    for (var i = 0; i < this.clusters.length; i++) {\n      this.clusters[i].remove();\n    }\n\n    this.clusters = []; // Reset the markers to not be added and to be removed from the map.\n\n    for (var _i3 = 0; _i3 < this.markers.length; _i3++) {\n      var marker = this.markers[_i3];\n      marker.isAdded = false;\n\n      if (optHide) {\n        marker.setMap(null);\n      }\n    }\n  };\n\n  _proto.distanceBetweenPoints = function distanceBetweenPoints(p1, p2) {\n    var R = 6371; // Radius of the Earth in km\n\n    var dLat = (p2.lat() - p1.lat()) * Math.PI / 180;\n    var dLon = (p2.lng() - p1.lng()) * Math.PI / 180;\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(p1.lat() * Math.PI / 180) * Math.cos(p2.lat() * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)));\n  };\n\n  _proto.isMarkerInBounds = function isMarkerInBounds(marker, bounds) {\n    var position = marker.getPosition();\n\n    if (position) {\n      return bounds.contains(position);\n    }\n\n    return false;\n  };\n\n  _proto.addToClosestCluster = function addToClosestCluster(marker) {\n    var cluster;\n    var distance = 40000; // Some large number\n\n    var clusterToAddTo = null;\n\n    for (var i = 0; i < this.clusters.length; i++) {\n      cluster = this.clusters[i];\n      var center = cluster.getCenter();\n      var position = marker.getPosition();\n\n      if (center && position) {\n        var d = this.distanceBetweenPoints(center, position);\n\n        if (d < distance) {\n          distance = d;\n          clusterToAddTo = cluster;\n        }\n      }\n    }\n\n    if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n      clusterToAddTo.addMarker(marker);\n    } else {\n      cluster = new Cluster(this);\n      cluster.addMarker(marker);\n      this.clusters.push(cluster);\n    }\n  };\n\n  _proto.createClusters = function createClusters(iFirst) {\n    var _this3 = this;\n\n    if (!this.ready) {\n      return;\n    } // Cancel previous batch processing if we're working on the first batch:\n\n\n    if (iFirst === 0) {\n      /**\r\n       * This event is fired when the <code>Clusterer</code> begins\r\n       *  clustering markers.\r\n       * @name Clusterer#clusteringbegin\r\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\r\n       * @event\r\n       */\n      google.maps.event.trigger(this, 'clusteringbegin', this);\n\n      if (this.timerRefStatic !== null) {\n        window.clearTimeout(this.timerRefStatic); // @ts-ignore\n\n        delete this.timerRefStatic;\n      }\n    } // Get our current map view bounds.\n    // Create a new bounds object so we don't affect the map.\n    //\n    // See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:\n\n\n    var mapBounds = // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap().getZoom() > 3 ? new google.maps.LatLngBounds( // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap().getBounds().getSouthWest(), // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap().getBounds().getNorthEast()) : new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472, -178.48388434375), new google.maps.LatLng(-85.08136444384544, 178.00048865625));\n    var bounds = this.getExtendedBounds(mapBounds);\n    var iLast = Math.min(iFirst + this.batchSize, this.markers.length);\n\n    for (var i = iFirst; i < iLast; i++) {\n      var marker = this.markers[i];\n\n      if (!marker.isAdded && this.isMarkerInBounds(marker, bounds)) {\n        if (!this.ignoreHidden || this.ignoreHidden && marker.getVisible()) {\n          this.addToClosestCluster(marker);\n        }\n      }\n    }\n\n    if (iLast < this.markers.length) {\n      this.timerRefStatic = window.setTimeout( // eslint-disable-next-line @getify/proper-arrows/this, @getify/proper-arrows/name\n      function () {\n        _this3.createClusters(iLast);\n      }, 0);\n    } else {\n      this.timerRefStatic = null;\n      /**\r\n       * This event is fired when the <code>Clusterer</code> stops\r\n       *  clustering markers.\r\n       * @name Clusterer#clusteringend\r\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\r\n       * @event\r\n       */\n\n      google.maps.event.trigger(this, 'clusteringend', this);\n\n      for (var _i4 = 0; _i4 < this.clusters.length; _i4++) {\n        this.clusters[_i4].updateIcon();\n      }\n    }\n  };\n\n  _proto.extend = function extend(obj1, obj2) {\n    return function applyExtend(object) {\n      // eslint-disable-next-line guard-for-in\n      for (var property in object.prototype) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.prototype[property] = object.prototype[property];\n      } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n\n\n      return this;\n    }.apply(obj1, [obj2]);\n  };\n\n  return Clusterer;\n}();\n\n\n//# sourceMappingURL=markerclusterer.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///12\n");

/***/ }),
/* 13 */
/*!***************************!*\
  !*** external "ReactDOM" ***!
  \***************************/
/*! dynamic exports provided */
/*! exports used: createPortal */
/***/ (function(module, exports) {

module.exports = ReactDOM;

/***/ }),
/* 14 */
/*!*********************************************************************!*\
  !*** ./node_modules/@react-google-maps/infobox/dist/infobox.esm.js ***!
  \*********************************************************************/
/*! exports provided: InfoBox */
/*! exports used: InfoBox */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return InfoBox; });\nvar InfoBox = /*#__PURE__*/function () {\n  function InfoBox(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.extend(InfoBox, google.maps.OverlayView); // Standard options (in common with google.maps.InfoWindow):\n\n    this.content = options.content || '';\n    this.disableAutoPan = options.disableAutoPan || false;\n    this.maxWidth = options.maxWidth || 0;\n    this.pixelOffset = options.pixelOffset || new google.maps.Size(0, 0);\n    this.position = options.position || new google.maps.LatLng(0, 0);\n    this.zIndex = options.zIndex || null; // Additional options (unique to InfoBox):\n\n    this.boxClass = options.boxClass || 'infoBox';\n    this.boxStyle = options.boxStyle || {};\n    this.closeBoxMargin = options.closeBoxMargin || '2px';\n    this.closeBoxURL = options.closeBoxURL || 'http://www.google.com/intl/en_us/mapfiles/close.gif';\n\n    if (options.closeBoxURL === '') {\n      this.closeBoxURL = '';\n    }\n\n    this.infoBoxClearance = options.infoBoxClearance || new google.maps.Size(1, 1);\n\n    if (typeof options.visible === 'undefined') {\n      if (typeof options.isHidden === 'undefined') {\n        options.visible = true;\n      } else {\n        options.visible = !options.isHidden;\n      }\n    }\n\n    this.isHidden = !options.visible;\n    this.alignBottom = options.alignBottom || false;\n    this.pane = options.pane || 'floatPane';\n    this.enableEventPropagation = options.enableEventPropagation || false;\n    this.div = null;\n    this.closeListener = null;\n    this.moveListener = null;\n    this.mapListener = null;\n    this.contextListener = null;\n    this.eventListeners = null;\n    this.fixedWidthSet = null;\n  }\n\n  var _proto = InfoBox.prototype;\n\n  _proto.createInfoBoxDiv = function createInfoBoxDiv() {\n    var _this = this;\n\n    // This handler prevents an event in the InfoBox from being passed on to the map.\n    function cancelHandler(event) {\n      event.cancelBubble = true;\n\n      if (event.stopPropagation) {\n        event.stopPropagation();\n      }\n    } // This handler ignores the current event in the InfoBox and conditionally prevents\n    // the event from being passed on to the map. It is used for the contextmenu event.\n    // eslint-disable-next-line  @getify/proper-arrows/this\n\n\n    var ignoreHandler = function ignoreHandler(event) {\n      event.returnValue = false;\n\n      if (event.preventDefault) {\n        event.preventDefault();\n      }\n\n      if (!_this.enableEventPropagation) {\n        cancelHandler(event);\n      }\n    };\n\n    if (!this.div) {\n      this.div = document.createElement('div');\n      this.setBoxStyle();\n\n      if (typeof this.content === 'string') {\n        this.div.innerHTML = this.getCloseBoxImg() + this.content;\n      } else {\n        this.div.innerHTML = this.getCloseBoxImg();\n        this.div.appendChild(this.content);\n      } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n\n\n      var panes = this.getPanes();\n      panes[this.pane].appendChild(this.div); // Add the InfoBox div to the DOM\n\n      this.addClickHandler();\n\n      if (this.div.style.width) {\n        this.fixedWidthSet = true;\n      } else {\n        if (this.maxWidth !== 0 && this.div.offsetWidth > this.maxWidth) {\n          this.div.style.width = this.maxWidth + 'px';\n          this.fixedWidthSet = true;\n        } else {\n          // The following code is needed to overcome problems with MSIE\n          var bw = this.getBoxWidths();\n          this.div.style.width = this.div.offsetWidth - bw.left - bw.right + 'px';\n          this.fixedWidthSet = false;\n        }\n      }\n\n      this.panBox(this.disableAutoPan);\n\n      if (!this.enableEventPropagation) {\n        this.eventListeners = []; // Cancel event propagation.\n        // Note: mousemove not included (to resolve Issue 152)\n\n        var events = ['mousedown', 'mouseover', 'mouseout', 'mouseup', 'click', 'dblclick', 'touchstart', 'touchend', 'touchmove'];\n\n        for (var i = 0; i < events.length; i++) {\n          this.eventListeners.push(google.maps.event.addDomListener(this.div, events[i], cancelHandler));\n        } // Workaround for Google bug that causes the cursor to change to a pointer\n        // when the mouse moves over a marker underneath InfoBox.\n\n\n        this.eventListeners.push(google.maps.event.addDomListener(this.div, 'mouseover', // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        function () {\n          if (_this.div) {\n            _this.div.style.cursor = 'default';\n          }\n        }));\n      }\n\n      this.contextListener = google.maps.event.addDomListener(this.div, 'contextmenu', ignoreHandler);\n      /**\r\n       * This event is fired when the DIV containing the InfoBox's content is attached to the DOM.\r\n       * @name InfoBox#domready\r\n       * @event\r\n       */\n\n      google.maps.event.trigger(this, 'domready');\n    }\n  };\n\n  _proto.getCloseBoxImg = function getCloseBoxImg() {\n    var img = '';\n\n    if (this.closeBoxURL !== '') {\n      img = '<img alt=\"\"';\n      img += ' aria-hidden=\"true\"';\n      img += \" src='\" + this.closeBoxURL + \"'\";\n      img += ' align=right'; // Do this because Opera chokes on style='float: right;'\n\n      img += \" style='\";\n      img += ' position: relative;'; // Required by MSIE\n\n      img += ' cursor: pointer;';\n      img += ' margin: ' + this.closeBoxMargin + ';';\n      img += \"'>\";\n    }\n\n    return img;\n  };\n\n  _proto.addClickHandler = function addClickHandler() {\n    if (this.div && this.div.firstChild && this.closeBoxURL !== '') {\n      var closeBox = this.div.firstChild;\n      this.closeListener = google.maps.event.addDomListener(closeBox, 'click', this.getCloseClickHandler());\n    } else {\n      this.closeListener = null;\n    }\n  };\n\n  _proto.getCloseClickHandler = function getCloseClickHandler() {\n    var _this2 = this;\n\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    return function (event) {\n      // 1.0.3 fix: Always prevent propagation of a close box click to the map:\n      event.cancelBubble = true;\n\n      if (event.stopPropagation) {\n        event.stopPropagation();\n      }\n      /**\r\n       * This event is fired when the InfoBox's close box is clicked.\r\n       * @name InfoBox#closeclick\r\n       * @event\r\n       */\n\n\n      google.maps.event.trigger(_this2, 'closeclick');\n\n      _this2.close();\n    };\n  };\n\n  _proto.panBox = function panBox(disablePan) {\n    if (this.div && !disablePan) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      var map = this.getMap(); // Only pan if attached to map, not panorama\n\n      if (map instanceof google.maps.Map) {\n        var xOffset = 0;\n        var yOffset = 0;\n        var bounds = map.getBounds();\n\n        if (bounds && !bounds.contains(this.position)) {\n          // Marker not in visible area of map, so set center\n          // of map to the marker position first.\n          map.setCenter(this.position);\n        }\n\n        var mapDiv = map.getDiv(); // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n\n        var mapWidth = mapDiv.offsetWidth; // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n\n        var mapHeight = mapDiv.offsetHeight;\n        var iwOffsetX = this.pixelOffset.width;\n        var iwOffsetY = this.pixelOffset.height;\n        var iwWidth = this.div.offsetWidth;\n        var iwHeight = this.div.offsetHeight;\n        var padX = this.infoBoxClearance.width;\n        var padY = this.infoBoxClearance.height; // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n\n        var projection = this.getProjection();\n        var pixPosition = projection.fromLatLngToContainerPixel(this.position);\n\n        if (pixPosition.x < -iwOffsetX + padX) {\n          xOffset = pixPosition.x + iwOffsetX - padX;\n        } else if (pixPosition.x + iwWidth + iwOffsetX + padX > mapWidth) {\n          xOffset = pixPosition.x + iwWidth + iwOffsetX + padX - mapWidth;\n        }\n\n        if (this.alignBottom) {\n          if (pixPosition.y < -iwOffsetY + padY + iwHeight) {\n            yOffset = pixPosition.y + iwOffsetY - padY - iwHeight;\n          } else if (pixPosition.y + iwOffsetY + padY > mapHeight) {\n            yOffset = pixPosition.y + iwOffsetY + padY - mapHeight;\n          }\n        } else {\n          if (pixPosition.y < -iwOffsetY + padY) {\n            yOffset = pixPosition.y + iwOffsetY - padY;\n          } else if (pixPosition.y + iwHeight + iwOffsetY + padY > mapHeight) {\n            yOffset = pixPosition.y + iwHeight + iwOffsetY + padY - mapHeight;\n          }\n        }\n\n        if (!(xOffset === 0 && yOffset === 0)) {\n          // Move the map to the shifted center.\n          map.panBy(xOffset, yOffset);\n        }\n      }\n    }\n  };\n\n  _proto.setBoxStyle = function setBoxStyle() {\n    if (this.div) {\n      // Apply style values from the style sheet defined in the boxClass parameter:\n      this.div.className = this.boxClass; // Clear existing inline style values:\n\n      this.div.style.cssText = ''; // Apply style values defined in the boxStyle parameter:\n\n      var boxStyle = this.boxStyle;\n\n      for (var i in boxStyle) {\n        if (boxStyle.hasOwnProperty(i)) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          this.div.style[i] = boxStyle[i];\n        }\n      } // Fix for iOS disappearing InfoBox problem\n      // See http://stackoverflow.com/questions/9229535/google-maps-markers-disappear-at-certain-zoom-level-only-on-iphone-ipad\n\n\n      this.div.style.webkitTransform = 'translateZ(0)'; // Fix up opacity style for benefit of MSIE\n\n      if (typeof this.div.style.opacity !== 'undefined' && this.div.style.opacity !== '') {\n        // See http://www.quirksmode.org/css/opacity.html\n        var opacity = parseFloat(this.div.style.opacity || ''); // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n\n        this.div.style.msFilter = '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=' + opacity * 100 + ')\"';\n        this.div.style.filter = 'alpha(opacity=' + opacity * 100 + ')';\n      } // Apply required styles\n\n\n      this.div.style.position = 'absolute';\n      this.div.style.visibility = 'hidden';\n\n      if (this.zIndex !== null) {\n        this.div.style.zIndex = this.zIndex + '';\n      }\n\n      if (!this.div.style.overflow) {\n        this.div.style.overflow = 'auto';\n      }\n    }\n  };\n\n  _proto.getBoxWidths = function getBoxWidths() {\n    var bw = {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    };\n\n    if (!this.div) {\n      return bw;\n    }\n\n    if (document.defaultView && document.defaultView.getComputedStyle) {\n      var ownerDocument = this.div.ownerDocument;\n      var computedStyle = ownerDocument && ownerDocument.defaultView ? ownerDocument.defaultView.getComputedStyle(this.div, '') : null;\n\n      if (computedStyle) {\n        // The computed styles are always in pixel units (good!)\n        bw.top = parseInt(computedStyle.borderTopWidth || '', 10) || 0;\n        bw.bottom = parseInt(computedStyle.borderBottomWidth || '', 10) || 0;\n        bw.left = parseInt(computedStyle.borderLeftWidth || '', 10) || 0;\n        bw.right = parseInt(computedStyle.borderRightWidth || '', 10) || 0;\n      }\n    } else if ( // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    document.documentElement.currentStyle // MSIE\n    ) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        var currentStyle = this.div.currentStyle;\n\n        if (currentStyle) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // The current styles may not be in pixel units, but assume they are (bad!)\n          bw.top = parseInt(currentStyle.borderTopWidth || '', 10) || 0;\n          bw.bottom = parseInt(currentStyle.borderBottomWidth || '', 10) || 0;\n          bw.left = parseInt(currentStyle.borderLeftWidth || '', 10) || 0;\n          bw.right = parseInt(currentStyle.borderRightWidth || '', 10) || 0;\n        }\n      }\n\n    return bw;\n  };\n\n  _proto.onRemove = function onRemove() {\n    if (this.div && this.div.parentNode) {\n      this.div.parentNode.removeChild(this.div);\n      this.div = null;\n    }\n  };\n\n  _proto.draw = function draw() {\n    this.createInfoBoxDiv();\n\n    if (this.div) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      var projection = this.getProjection();\n      var pixPosition = projection.fromLatLngToDivPixel(this.position);\n      this.div.style.left = pixPosition.x + this.pixelOffset.width + 'px';\n\n      if (this.alignBottom) {\n        this.div.style.bottom = -(pixPosition.y + this.pixelOffset.height) + 'px';\n      } else {\n        this.div.style.top = pixPosition.y + this.pixelOffset.height + 'px';\n      }\n\n      if (this.isHidden) {\n        this.div.style.visibility = 'hidden';\n      } else {\n        this.div.style.visibility = 'visible';\n      }\n    }\n  };\n\n  _proto.setOptions = function setOptions(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.boxClass !== 'undefined') {\n      // Must be first\n      this.boxClass = options.boxClass;\n      this.setBoxStyle();\n    }\n\n    if (typeof options.boxStyle !== 'undefined') {\n      // Must be second\n      this.boxStyle = options.boxStyle;\n      this.setBoxStyle();\n    }\n\n    if (typeof options.content !== 'undefined') {\n      this.setContent(options.content);\n    }\n\n    if (typeof options.disableAutoPan !== 'undefined') {\n      this.disableAutoPan = options.disableAutoPan;\n    }\n\n    if (typeof options.maxWidth !== 'undefined') {\n      this.maxWidth = options.maxWidth;\n    }\n\n    if (typeof options.pixelOffset !== 'undefined') {\n      this.pixelOffset = options.pixelOffset;\n    }\n\n    if (typeof options.alignBottom !== 'undefined') {\n      this.alignBottom = options.alignBottom;\n    }\n\n    if (typeof options.position !== 'undefined') {\n      this.setPosition(options.position);\n    }\n\n    if (typeof options.zIndex !== 'undefined') {\n      this.setZIndex(options.zIndex);\n    }\n\n    if (typeof options.closeBoxMargin !== 'undefined') {\n      this.closeBoxMargin = options.closeBoxMargin;\n    }\n\n    if (typeof options.closeBoxURL !== 'undefined') {\n      this.closeBoxURL = options.closeBoxURL;\n    }\n\n    if (typeof options.infoBoxClearance !== 'undefined') {\n      this.infoBoxClearance = options.infoBoxClearance;\n    }\n\n    if (typeof options.isHidden !== 'undefined') {\n      this.isHidden = options.isHidden;\n    }\n\n    if (typeof options.visible !== 'undefined') {\n      this.isHidden = !options.visible;\n    }\n\n    if (typeof options.enableEventPropagation !== 'undefined') {\n      this.enableEventPropagation = options.enableEventPropagation;\n    }\n\n    if (this.div) {\n      this.draw();\n    }\n  };\n\n  _proto.setContent = function setContent(content) {\n    this.content = content;\n\n    if (this.div) {\n      if (this.closeListener) {\n        google.maps.event.removeListener(this.closeListener);\n        this.closeListener = null;\n      } // Odd code required to make things work with MSIE.\n\n\n      if (!this.fixedWidthSet) {\n        this.div.style.width = '';\n      }\n\n      if (typeof content === 'string') {\n        this.div.innerHTML = this.getCloseBoxImg() + content;\n      } else {\n        this.div.innerHTML = this.getCloseBoxImg();\n        this.div.appendChild(content);\n      } // Perverse code required to make things work with MSIE.\n      // (Ensures the close box does, in fact, float to the right.)\n\n\n      if (!this.fixedWidthSet) {\n        this.div.style.width = this.div.offsetWidth + 'px';\n\n        if (typeof content === 'string') {\n          this.div.innerHTML = this.getCloseBoxImg() + content;\n        } else {\n          this.div.innerHTML = this.getCloseBoxImg();\n          this.div.appendChild(content);\n        }\n      }\n\n      this.addClickHandler();\n    }\n    /**\r\n     * This event is fired when the content of the InfoBox changes.\r\n     * @name InfoBox#content_changed\r\n     * @event\r\n     */\n\n\n    google.maps.event.trigger(this, 'content_changed');\n  };\n\n  _proto.setPosition = function setPosition(latLng) {\n    this.position = latLng;\n\n    if (this.div) {\n      this.draw();\n    }\n    /**\r\n     * This event is fired when the position of the InfoBox changes.\r\n     * @name InfoBox#position_changed\r\n     * @event\r\n     */\n\n\n    google.maps.event.trigger(this, 'position_changed');\n  };\n\n  _proto.setVisible = function setVisible(isVisible) {\n    this.isHidden = !isVisible;\n\n    if (this.div) {\n      this.div.style.visibility = this.isHidden ? 'hidden' : 'visible';\n    }\n  };\n\n  _proto.setZIndex = function setZIndex(index) {\n    this.zIndex = index;\n\n    if (this.div) {\n      this.div.style.zIndex = index + '';\n    }\n    /**\r\n     * This event is fired when the zIndex of the InfoBox changes.\r\n     * @name InfoBox#zindex_changed\r\n     * @event\r\n     */\n\n\n    google.maps.event.trigger(this, 'zindex_changed');\n  };\n\n  _proto.getContent = function getContent() {\n    return this.content;\n  };\n\n  _proto.getPosition = function getPosition() {\n    return this.position;\n  };\n\n  _proto.getZIndex = function getZIndex() {\n    return this.zIndex;\n  };\n\n  _proto.getVisible = function getVisible() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    var map = this.getMap();\n    var isVisible;\n\n    if (typeof map === 'undefined' || map === null) {\n      isVisible = false;\n    } else {\n      isVisible = !this.isHidden;\n    }\n\n    return isVisible;\n  };\n\n  _proto.show = function show() {\n    this.isHidden = false;\n\n    if (this.div) {\n      this.div.style.visibility = 'visible';\n    }\n  };\n\n  _proto.hide = function hide() {\n    this.isHidden = true;\n\n    if (this.div) {\n      this.div.style.visibility = 'hidden';\n    }\n  };\n\n  _proto.open = function open(map, anchor) {\n    var _this3 = this;\n\n    if (anchor) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.position = anchor.getPosition();\n      this.moveListener = google.maps.event.addListener(anchor, 'position_changed', // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n      function () {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        var position = anchor.getPosition();\n\n        _this3.setPosition(position);\n      });\n      this.mapListener = google.maps.event.addListener(anchor, 'map_changed', // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n      function () {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        _this3.setMap(anchor.map);\n      });\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n\n    this.setMap(map);\n\n    if (this.div) {\n      this.panBox();\n    }\n  };\n\n  _proto.close = function close() {\n    if (this.closeListener) {\n      google.maps.event.removeListener(this.closeListener);\n      this.closeListener = null;\n    }\n\n    if (this.eventListeners) {\n      for (var i = 0; i < this.eventListeners.length; i++) {\n        google.maps.event.removeListener(this.eventListeners[i]);\n      }\n\n      this.eventListeners = null;\n    }\n\n    if (this.moveListener) {\n      google.maps.event.removeListener(this.moveListener);\n      this.moveListener = null;\n    }\n\n    if (this.mapListener) {\n      google.maps.event.removeListener(this.mapListener);\n      this.mapListener = null;\n    }\n\n    if (this.contextListener) {\n      google.maps.event.removeListener(this.contextListener);\n      this.contextListener = null;\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n\n    this.setMap(null);\n  };\n\n  _proto.extend = function extend(obj1, obj2) {\n    return function applyExtend(object) {\n      // eslint-disable-next-line guard-for-in\n      for (var property in object.prototype) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        if (!this.prototype.hasOwnProperty(property)) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          this.prototype[property] = object.prototype[property];\n        }\n      } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n\n\n      return this;\n    }.apply(obj1, [obj2]);\n  };\n\n  return InfoBox;\n}();\n\n\n//# sourceMappingURL=infobox.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///14\n");

/***/ }),
/* 15 */
/*!****************************!*\
  !*** ./src/posts/posts.js ***!
  \****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__editor_scss__ = __webpack_require__(/*! ./editor.scss */ 16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__editor_scss__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__style_scss__ = __webpack_require__(/*! ./style.scss */ 17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__style_scss__);\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n\n\n\nvar __ = wp.i18n.__;\nvar registerBlockType = wp.blocks.registerBlockType;\nvar _wp$blockEditor = wp.blockEditor,\n    useBlockProps = _wp$blockEditor.useBlockProps,\n    InspectorControls = _wp$blockEditor.InspectorControls;\nvar _wp$components = wp.components,\n    SelectControl = _wp$components.SelectControl,\n    TextControl = _wp$components.TextControl,\n    CheckboxControl = _wp$components.CheckboxControl;\nvar _wp = wp,\n    ServerSideRender = _wp.serverSideRender;\nvar _wp$components2 = wp.components,\n    Panel = _wp$components2.Panel,\n    PanelBody = _wp$components2.PanelBody,\n    PanelRow = _wp$components2.PanelRow;\nvar _wordpressIcons = '@wordpress/icons',\n    more = _wordpressIcons.more;\n\n\nregisterBlockType('gb/block-posts', {\n\tapiVersion: 2,\n\ttitle: __('Posts by Type'),\n\ticon: 'sticky',\n\tcategory: 'common',\n\tkeywords: [__('Posts by Type'), __('Appearance')],\n\tattributes: {\n\t\tisInPostFetch: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false\n\t\t},\n\t\tpostType: {\n\t\t\ttype: 'string',\n\t\t\tdefault: null\n\t\t},\n\t\tpostTypesAvailable: {\n\t\t\ttype: 'array',\n\t\t\tdefault: null\n\t\t},\n\t\tlimit: {\n\t\t\ttype: 'string',\n\t\t\tdefault: \"10\"\n\t\t},\n\t\tpaginate: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false\n\t\t},\n\t\ttaxonomy: {\n\t\t\ttype: 'string',\n\t\t\tdefault: \"\"\n\t\t},\n\t\ttaxonomiesAvailable: {\n\t\t\ttype: 'array',\n\t\t\tdefault: null\n\t\t},\n\t\ttermSlug: {\n\t\t\ttype: 'string',\n\t\t\tdefault: \"\"\n\t\t},\n\t\ttaxonomyFilter: {\n\t\t\ttype: 'string',\n\t\t\tdefault: \"\"\n\t\t},\n\t\ttaxonomyFilterActive: {\n\t\t\ttype: 'array',\n\t\t\tdefault: null\n\t\t},\n\t\tcallbackFunction: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t}\n\t},\n\n\tedit: function edit(props) {\n\t\tvar attributes = props.attributes,\n\t\t    setAttributes = props.setAttributes;\n\n\n\t\tvar blockProps = useBlockProps();\n\n\t\t// Get post types\n\t\tif (!attributes.isInPostFetch) {\n\t\t\t// Fetch once\n\t\t\tsetAttributes({ isInPostFetch: true });\n\t\t\twp.apiFetch({\n\t\t\t\tpath: '/wp/v2/types'\n\t\t\t}).then(function (data) {\n\t\t\t\tvar postTypesTemp = [{ value: null, label: 'Select a post type' }];\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = Object.entries(data)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar _ref = _step.value;\n\n\t\t\t\t\t\tvar _ref2 = _slicedToArray(_ref, 2);\n\n\t\t\t\t\t\tvar key = _ref2[0];\n\t\t\t\t\t\tvar value = _ref2[1];\n\n\t\t\t\t\t\tpostTypesTemp.push({ label: value.name, value: key });\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsetAttributes({ postTypesAvailable: postTypesTemp });\n\t\t\t});\n\t\t}\n\n\t\tvar blockRender = void 0;\n\t\tif (attributes) {\n\t\t\tif (attributes.postType) {\n\t\t\t\tvar postType = attributes.postType,\n\t\t\t\t    limit = attributes.limit,\n\t\t\t\t    taxonomy = attributes.taxonomy,\n\t\t\t\t    taxonomyFilter = attributes.taxonomyFilter,\n\t\t\t\t    termSlug = attributes.termSlug,\n\t\t\t\t    callbackFunction = attributes.callbackFunction,\n\t\t\t\t    className = attributes.className,\n\t\t\t\t    paginate = attributes.paginate,\n\t\t\t\t    taxonomyFilterActive = attributes.taxonomyFilterActive;\n\n\t\t\t\tblockRender = wp.element.createElement(ServerSideRender, {\n\t\t\t\t\tblock: 'gb/block-posts',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tpostType: postType,\n\t\t\t\t\t\tlimit: limit,\n\t\t\t\t\t\ttaxonomy: taxonomy,\n\t\t\t\t\t\ttaxonomyFilter: taxonomyFilter,\n\t\t\t\t\t\ttermSlug: termSlug,\n\t\t\t\t\t\tcallbackFunction: callbackFunction,\n\t\t\t\t\t\tclassName: className,\n\t\t\t\t\t\tpaginate: paginate,\n\t\t\t\t\t\ttaxonomyFilterActive: taxonomyFilterActive\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tblockRender = wp.element.createElement(\n\t\t\t\t\t'p',\n\t\t\t\t\tnull,\n\t\t\t\t\t'Selected post type, term and term name.'\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tblockRender = wp.element.createElement(\n\t\t\t\t'p',\n\t\t\t\tnull,\n\t\t\t\t'Loading...'\n\t\t\t);\n\t\t}\n\n\t\tvar onUpdatePostType = function onUpdatePostType(newPostType) {\n\t\t\tsetAttributes({ postType: newPostType });\n\t\t\t// Get post type taxonomies\n\t\t\twp.apiFetch({\n\t\t\t\tpath: '/wp/v2/types/' + newPostType,\n\t\t\t\tcontext: 'view'\n\t\t\t}).then(function (data) {\n\t\t\t\tvar taxonomyTemp = [{ value: null, label: 'All taxonomies' }];\n\t\t\t\tvar taxonomyCheckboxTemp = [];\n\t\t\t\tdata.taxonomies.forEach(function (tax) {\n\t\t\t\t\ttaxonomyTemp.push({ value: tax, label: (tax[0].toUpperCase() + tax.substr(1)).replaceAll('_', ' ') });\n\t\t\t\t\ttaxonomyCheckboxTemp.push({ value: tax, visible: false });\n\t\t\t\t});\n\t\t\t\tsetAttributes({ taxonomiesAvailable: taxonomyTemp });\n\t\t\t\tsetAttributes({ taxonomyFilterActive: taxonomyCheckboxTemp });\n\t\t\t});\n\t\t};\n\n\t\tvar onUpdateTaxonomy = function onUpdateTaxonomy(newTaxonomy) {\n\t\t\tsetAttributes({ taxonomy: newTaxonomy });\n\t\t};\n\n\t\tvar onUpdateTaxonomyFilter = function onUpdateTaxonomyFilter(newTaxonomy) {\n\t\t\tsetAttributes({ taxonomyFilter: newTaxonomy });\n\t\t};\n\n\t\t// Add filter checkboxes\n\t\tvar filterTaxononmyCheckboxes = [];\n\t\tif (attributes.taxonomyFilterActive) {\n\t\t\tif (attributes.taxonomyFilterActive.length > 0) {\n\t\t\t\tvar _loop = function _loop(n) {\n\t\t\t\t\tvar label = attributes.taxonomyFilterActive[n];\n\t\t\t\t\tfilterTaxononmyCheckboxes.push(wp.element.createElement(CheckboxControl, {\n\t\t\t\t\t\tlabel: (label.value[0].toUpperCase() + label.value.substr(1)).replaceAll('_', ' '),\n\t\t\t\t\t\tchecked: label.visible,\n\t\t\t\t\t\tonChange: function onChange(newStatus) {\n\t\t\t\t\t\t\tconsole.log(newStatus + ' ' + n);\n\t\t\t\t\t\t\tvar taxChecks = [].concat(_toConsumableArray(attributes.taxonomyFilterActive));\n\t\t\t\t\t\t\tvar taxItem = Object.assign({}, taxChecks[n]);\n\t\t\t\t\t\t\ttaxItem['visible'] = newStatus;\n\t\t\t\t\t\t\ttaxChecks[n] = taxItem;\n\t\t\t\t\t\t\tsetAttributes({ taxonomyFilterActive: taxChecks });\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t};\n\n\t\t\t\tfor (var n in attributes.taxonomyFilterActive) {\n\t\t\t\t\t_loop(n);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfilterTaxononmyCheckboxes.push(wp.element.createElement(\n\t\t\t\t\t'p',\n\t\t\t\t\tnull,\n\t\t\t\t\twp.element.createElement(\n\t\t\t\t\t\t'em',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t'Post type contains no terms'\n\t\t\t\t\t)\n\t\t\t\t));\n\t\t\t}\n\t\t}\n\n\t\treturn wp.element.createElement(\n\t\t\t'div',\n\t\t\tblockProps,\n\t\t\twp.element.createElement(\n\t\t\t\tInspectorControls,\n\t\t\t\tnull,\n\t\t\t\twp.element.createElement(\n\t\t\t\t\tPanelBody,\n\t\t\t\t\t{ title: 'Posts Settings', icon: more, initialOpen: true },\n\t\t\t\t\twp.element.createElement(\n\t\t\t\t\t\t'div',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\twp.element.createElement(TextControl, {\n\t\t\t\t\t\t\tlabel: 'Layout callback function',\n\t\t\t\t\t\t\tvalue: attributes.callbackFunction,\n\t\t\t\t\t\t\tonChange: function onChange(newCallbackFunction) {\n\t\t\t\t\t\t\t\treturn setAttributes({ callbackFunction: newCallbackFunction });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tattributes.postTypesAvailable ? wp.element.createElement(SelectControl, {\n\t\t\t\t\t\t\tlabel: __('Select a post type: '),\n\t\t\t\t\t\t\tonChange: onUpdatePostType,\n\t\t\t\t\t\t\tvalue: attributes.postType,\n\t\t\t\t\t\t\toptions: attributes.postTypesAvailable\n\t\t\t\t\t\t}) : wp.element.createElement(\n\t\t\t\t\t\t\t'p',\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t'Loading\\u2026'\n\t\t\t\t\t\t),\n\t\t\t\t\t\tattributes.taxonomiesAvailable ? wp.element.createElement(SelectControl, {\n\t\t\t\t\t\t\tlabel: __('Select a taxonomy: '),\n\t\t\t\t\t\t\tonChange: onUpdateTaxonomy,\n\t\t\t\t\t\t\tvalue: attributes.taxonomy,\n\t\t\t\t\t\t\toptions: attributes.taxonomiesAvailable\n\t\t\t\t\t\t}) : wp.element.createElement('p', null),\n\t\t\t\t\t\tattributes.taxonomy ? wp.element.createElement(TextControl, {\n\t\t\t\t\t\t\tlabel: 'Term',\n\t\t\t\t\t\t\tvalue: attributes.termSlug,\n\t\t\t\t\t\t\tonChange: function onChange(newTermSlug) {\n\t\t\t\t\t\t\t\treturn setAttributes({ termSlug: newTermSlug });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}) : wp.element.createElement('p', null)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\twp.element.createElement(\n\t\t\t\t\tPanelBody,\n\t\t\t\t\t{ title: 'Posts Limits', icon: more, initialOpen: true },\n\t\t\t\t\twp.element.createElement(\n\t\t\t\t\t\t'div',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\twp.element.createElement(TextControl, {\n\t\t\t\t\t\t\tlabel: 'Post limit',\n\t\t\t\t\t\t\tvalue: attributes.limit,\n\t\t\t\t\t\t\tonChange: function onChange(newLimit) {\n\t\t\t\t\t\t\t\treturn setAttributes({ limit: newLimit });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t\twp.element.createElement(CheckboxControl, {\n\t\t\t\t\t\t\tlabel: 'Paginate',\n\t\t\t\t\t\t\tchecked: attributes.paginate,\n\t\t\t\t\t\t\tonChange: function onChange(newPaginate) {\n\t\t\t\t\t\t\t\treturn setAttributes({ paginate: newPaginate });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\twp.element.createElement(\n\t\t\t\t\tPanelBody,\n\t\t\t\t\t{ title: 'Filters Settings', icon: more, initialOpen: true },\n\t\t\t\t\twp.element.createElement(\n\t\t\t\t\t\t'div',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tfilterTaxononmyCheckboxes\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t),\n\t\t\tblockRender\n\t\t);\n\t}\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///15\n");

/***/ }),
/* 16 */
/*!*******************************!*\
  !*** ./src/posts/editor.scss ***!
  \*******************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcG9zdHMvZWRpdG9yLnNjc3M/YTJkOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL3Bvc3RzL2VkaXRvci5zY3NzXG4vLyBtb2R1bGUgaWQgPSAxNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///16\n");

/***/ }),
/* 17 */
/*!******************************!*\
  !*** ./src/posts/style.scss ***!
  \******************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcG9zdHMvc3R5bGUuc2Nzcz9iZGUxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvcG9zdHMvc3R5bGUuc2Nzc1xuLy8gbW9kdWxlIGlkID0gMTdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///17\n");

/***/ }),
/* 18 */
/*!********************************!*\
  !*** ./src/gallery/gallery.js ***!
  \********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__editor_scss__ = __webpack_require__(/*! ./editor.scss */ 19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__editor_scss__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__style_scss__ = __webpack_require__(/*! ./style.scss */ 20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__style_scss__);\n\n\n\n// import { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n\nvar __ = wp.i18n.__;\nvar registerBlockType = wp.blocks.registerBlockType;\nvar _wp$blockEditor = wp.blockEditor,\n    useBlockProps = _wp$blockEditor.useBlockProps,\n    InnerBlocks = _wp$blockEditor.InnerBlocks; // InspectorControls\n// const { TextControl } = wp.components;\n// const { serverSideRender: ServerSideRender } = wp;\n// const { Panel, PanelBody, PanelRow } = wp.components;\n\nvar _wordpressIcons = '@wordpress/icons',\n    more = _wordpressIcons.more;\n\n\nvar ALLOWED_BLOCKS = ['core/cover'];\n\nvar attributes = {};\nvar supports = {\n\talign: true\n};\n\nregisterBlockType('gb/block-gallery', {\n\tapiVersion: 2,\n\ttitle: __('Gallery Slider'),\n\ticon: 'format-gallery',\n\tcategory: 'common',\n\tkeywords: [__('Gallery'), __('Slider')],\n\tattributes: attributes,\n\tsupports: supports,\n\n\tedit: function edit() {\n\t\tvar blockProps = useBlockProps();\n\n\t\treturn wp.element.createElement(\n\t\t\t'div',\n\t\t\tblockProps,\n\t\t\twp.element.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ 'class': 'slides-wrapper' },\n\t\t\t\twp.element.createElement(InnerBlocks, { allowedBlocks: ALLOWED_BLOCKS })\n\t\t\t)\n\t\t);\n\t},\n\n\tsave: function save(props) {\n\t\tvar blockProps = useBlockProps.save();\n\t\t// console.log( blockProps );\n\t\t// console.log( props );\n\n\t\treturn wp.element.createElement(\n\t\t\t'div',\n\t\t\tblockProps,\n\t\t\twp.element.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ 'class': 'slides-wrapper' },\n\t\t\t\twp.element.createElement(InnerBlocks.Content, null)\n\t\t\t)\n\t\t);\n\t},\n\n\tdeprecated: [{\n\t\tattributes: attributes,\n\t\tmigrate: function migrate(attributes, innerBlocks) {\n\t\t\treturn wp.element.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ 'class': 'slides-wrapper' },\n\t\t\t\tinnerBlocks\n\t\t\t);\n\t\t},\n\t\tsave: function save(props) {\n\t\t\tvar blockProps = useBlockProps.save();\n\t\t\treturn wp.element.createElement(\n\t\t\t\t'div',\n\t\t\t\tblockProps,\n\t\t\t\twp.element.createElement(InnerBlocks.Content, null)\n\t\t\t);\n\t\t}\n\t}]\n\n\t// depricated: [\n\t// \t{\n\t// \t\tattributes,\n\t// \t\tsupports,\n\n\t// \t\tsave: ( props ) => {\n\t// \t\t\tconsole.log( 'running' );\n\t// \t\t\tconst blockProps = useBlockProps.save();\n\n\t// \t\t\treturn (\n\t// \t\t\t\t<div { ...blockProps }>\n\t// \t\t\t\t\t<InnerBlocks.Content />\n\t// \t\t\t\t</div>\n\t// \t\t\t);\n\t// \t\t}\n\t// \t}\n\t// ]\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZ2FsbGVyeS9nYWxsZXJ5LmpzP2M5NmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuL2VkaXRvci5zY3NzJztcbmltcG9ydCAnLi9zdHlsZS5zY3NzJztcblxuLy8gaW1wb3J0IHsgR29vZ2xlTWFwLCBMb2FkU2NyaXB0LCBNYXJrZXIgfSBmcm9tICdAcmVhY3QtZ29vZ2xlLW1hcHMvYXBpJztcblxudmFyIF9fID0gd3AuaTE4bi5fXztcbnZhciByZWdpc3RlckJsb2NrVHlwZSA9IHdwLmJsb2Nrcy5yZWdpc3RlckJsb2NrVHlwZTtcbnZhciBfd3AkYmxvY2tFZGl0b3IgPSB3cC5ibG9ja0VkaXRvcixcbiAgICB1c2VCbG9ja1Byb3BzID0gX3dwJGJsb2NrRWRpdG9yLnVzZUJsb2NrUHJvcHMsXG4gICAgSW5uZXJCbG9ja3MgPSBfd3AkYmxvY2tFZGl0b3IuSW5uZXJCbG9ja3M7IC8vIEluc3BlY3RvckNvbnRyb2xzXG4vLyBjb25zdCB7IFRleHRDb250cm9sIH0gPSB3cC5jb21wb25lbnRzO1xuLy8gY29uc3QgeyBzZXJ2ZXJTaWRlUmVuZGVyOiBTZXJ2ZXJTaWRlUmVuZGVyIH0gPSB3cDtcbi8vIGNvbnN0IHsgUGFuZWwsIFBhbmVsQm9keSwgUGFuZWxSb3cgfSA9IHdwLmNvbXBvbmVudHM7XG5cbnZhciBfd29yZHByZXNzSWNvbnMgPSAnQHdvcmRwcmVzcy9pY29ucycsXG4gICAgbW9yZSA9IF93b3JkcHJlc3NJY29ucy5tb3JlO1xuXG5cbnZhciBBTExPV0VEX0JMT0NLUyA9IFsnY29yZS9jb3ZlciddO1xuXG52YXIgYXR0cmlidXRlcyA9IHt9O1xudmFyIHN1cHBvcnRzID0ge1xuXHRhbGlnbjogdHJ1ZVxufTtcblxucmVnaXN0ZXJCbG9ja1R5cGUoJ2diL2Jsb2NrLWdhbGxlcnknLCB7XG5cdGFwaVZlcnNpb246IDIsXG5cdHRpdGxlOiBfXygnR2FsbGVyeSBTbGlkZXInKSxcblx0aWNvbjogJ2Zvcm1hdC1nYWxsZXJ5Jyxcblx0Y2F0ZWdvcnk6ICdjb21tb24nLFxuXHRrZXl3b3JkczogW19fKCdHYWxsZXJ5JyksIF9fKCdTbGlkZXInKV0sXG5cdGF0dHJpYnV0ZXM6IGF0dHJpYnV0ZXMsXG5cdHN1cHBvcnRzOiBzdXBwb3J0cyxcblxuXHRlZGl0OiBmdW5jdGlvbiBlZGl0KCkge1xuXHRcdHZhciBibG9ja1Byb3BzID0gdXNlQmxvY2tQcm9wcygpO1xuXG5cdFx0cmV0dXJuIHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChcblx0XHRcdCdkaXYnLFxuXHRcdFx0YmxvY2tQcm9wcyxcblx0XHRcdHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChcblx0XHRcdFx0J2RpdicsXG5cdFx0XHRcdHsgJ2NsYXNzJzogJ3NsaWRlcy13cmFwcGVyJyB9LFxuXHRcdFx0XHR3cC5lbGVtZW50LmNyZWF0ZUVsZW1lbnQoSW5uZXJCbG9ja3MsIHsgYWxsb3dlZEJsb2NrczogQUxMT1dFRF9CTE9DS1MgfSlcblx0XHRcdClcblx0XHQpO1xuXHR9LFxuXG5cdHNhdmU6IGZ1bmN0aW9uIHNhdmUocHJvcHMpIHtcblx0XHR2YXIgYmxvY2tQcm9wcyA9IHVzZUJsb2NrUHJvcHMuc2F2ZSgpO1xuXHRcdC8vIGNvbnNvbGUubG9nKCBibG9ja1Byb3BzICk7XG5cdFx0Ly8gY29uc29sZS5sb2coIHByb3BzICk7XG5cblx0XHRyZXR1cm4gd3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KFxuXHRcdFx0J2RpdicsXG5cdFx0XHRibG9ja1Byb3BzLFxuXHRcdFx0d3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KFxuXHRcdFx0XHQnZGl2Jyxcblx0XHRcdFx0eyAnY2xhc3MnOiAnc2xpZGVzLXdyYXBwZXInIH0sXG5cdFx0XHRcdHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChJbm5lckJsb2Nrcy5Db250ZW50LCBudWxsKVxuXHRcdFx0KVxuXHRcdCk7XG5cdH0sXG5cblx0ZGVwcmVjYXRlZDogW3tcblx0XHRhdHRyaWJ1dGVzOiBhdHRyaWJ1dGVzLFxuXHRcdG1pZ3JhdGU6IGZ1bmN0aW9uIG1pZ3JhdGUoYXR0cmlidXRlcywgaW5uZXJCbG9ja3MpIHtcblx0XHRcdHJldHVybiB3cC5lbGVtZW50LmNyZWF0ZUVsZW1lbnQoXG5cdFx0XHRcdCdkaXYnLFxuXHRcdFx0XHR7ICdjbGFzcyc6ICdzbGlkZXMtd3JhcHBlcicgfSxcblx0XHRcdFx0aW5uZXJCbG9ja3Ncblx0XHRcdCk7XG5cdFx0fSxcblx0XHRzYXZlOiBmdW5jdGlvbiBzYXZlKHByb3BzKSB7XG5cdFx0XHR2YXIgYmxvY2tQcm9wcyA9IHVzZUJsb2NrUHJvcHMuc2F2ZSgpO1xuXHRcdFx0cmV0dXJuIHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChcblx0XHRcdFx0J2RpdicsXG5cdFx0XHRcdGJsb2NrUHJvcHMsXG5cdFx0XHRcdHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChJbm5lckJsb2Nrcy5Db250ZW50LCBudWxsKVxuXHRcdFx0KTtcblx0XHR9XG5cdH1dXG5cblx0Ly8gZGVwcmljYXRlZDogW1xuXHQvLyBcdHtcblx0Ly8gXHRcdGF0dHJpYnV0ZXMsXG5cdC8vIFx0XHRzdXBwb3J0cyxcblxuXHQvLyBcdFx0c2F2ZTogKCBwcm9wcyApID0+IHtcblx0Ly8gXHRcdFx0Y29uc29sZS5sb2coICdydW5uaW5nJyApO1xuXHQvLyBcdFx0XHRjb25zdCBibG9ja1Byb3BzID0gdXNlQmxvY2tQcm9wcy5zYXZlKCk7XG5cblx0Ly8gXHRcdFx0cmV0dXJuIChcblx0Ly8gXHRcdFx0XHQ8ZGl2IHsgLi4uYmxvY2tQcm9wcyB9PlxuXHQvLyBcdFx0XHRcdFx0PElubmVyQmxvY2tzLkNvbnRlbnQgLz5cblx0Ly8gXHRcdFx0XHQ8L2Rpdj5cblx0Ly8gXHRcdFx0KTtcblx0Ly8gXHRcdH1cblx0Ly8gXHR9XG5cdC8vIF1cbn0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2dhbGxlcnkvZ2FsbGVyeS5qc1xuLy8gbW9kdWxlIGlkID0gMThcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///18\n");

/***/ }),
/* 19 */
/*!*********************************!*\
  !*** ./src/gallery/editor.scss ***!
  \*********************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZ2FsbGVyeS9lZGl0b3Iuc2Nzcz9iYzA4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvZ2FsbGVyeS9lZGl0b3Iuc2Nzc1xuLy8gbW9kdWxlIGlkID0gMTlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///19\n");

/***/ }),
/* 20 */
/*!********************************!*\
  !*** ./src/gallery/style.scss ***!
  \********************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZ2FsbGVyeS9zdHlsZS5zY3NzPzAwZDQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9nYWxsZXJ5L3N0eWxlLnNjc3Ncbi8vIG1vZHVsZSBpZCA9IDIwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///20\n");

/***/ }),
/* 21 */
/*!**************************************!*\
  !*** ./src/attributes/attributes.js ***!
  \**************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames__ = __webpack_require__(/*! classnames */ 22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_classnames__);\n\n\nvar __ = wp.i18n.__;\nvar addFilter = wp.hooks.addFilter;\nvar Fragment = wp.element.Fragment;\nvar InspectorAdvancedControls = wp.blockEditor.InspectorAdvancedControls;\nvar createHigherOrderComponent = wp.compose.createHigherOrderComponent;\nvar ToggleControl = wp.components.ToggleControl;\n\n\nvar allowedBlocks = ['core/image', 'core/paragraph', 'core/heading', 'core/spacer'];\n\nfunction addAttributes(settings) {\n\tif (typeof settings.attributes !== 'undefined' && allowedBlocks.includes(settings.name)) {\n\t\tsettings.attributes = Object.assign(settings.attributes, {\n\t\t\tvisibleOnMobile: {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true\n\t\t\t},\n\t\t\tvisibleOnDesktop: {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true\n\t\t\t}\n\t\t});\n\t}\n\n\treturn settings;\n}\n\nvar withAdvancedControls = createHigherOrderComponent(function (BlockEdit) {\n\treturn function (props) {\n\t\tvar name = props.name,\n\t\t    attributes = props.attributes,\n\t\t    setAttributes = props.setAttributes,\n\t\t    isSelected = props.isSelected;\n\t\tvar visibleOnMobile = attributes.visibleOnMobile,\n\t\t    visibleOnDesktop = attributes.visibleOnDesktop;\n\n\n\t\treturn wp.element.createElement(\n\t\t\tFragment,\n\t\t\tnull,\n\t\t\twp.element.createElement(BlockEdit, props),\n\t\t\tisSelected && allowedBlocks.includes(name) && wp.element.createElement(\n\t\t\t\tInspectorAdvancedControls,\n\t\t\t\tnull,\n\t\t\t\twp.element.createElement(ToggleControl, {\n\t\t\t\t\tlabel: __('Mobile Devices Visibity'),\n\t\t\t\t\tchecked: !!visibleOnMobile,\n\t\t\t\t\tonChange: function onChange() {\n\t\t\t\t\t\treturn setAttributes({ visibleOnMobile: !visibleOnMobile });\n\t\t\t\t\t},\n\t\t\t\t\thelp: !!visibleOnMobile ? __('Showing on mobile devices.') : __('Hidden on mobile devices.')\n\t\t\t\t}),\n\t\t\t\twp.element.createElement(ToggleControl, {\n\t\t\t\t\tlabel: __('Desktop Devices Visibity'),\n\t\t\t\t\tchecked: !!visibleOnDesktop,\n\t\t\t\t\tonChange: function onChange() {\n\t\t\t\t\t\treturn setAttributes({ visibleOnDesktop: !visibleOnDesktop });\n\t\t\t\t\t},\n\t\t\t\t\thelp: !!visibleOnDesktop ? __('Showing on desktop devices.') : __('Hidden on desktop devices.')\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\t};\n}, 'withAdvancedControls');\n\nfunction applyExtraClass(extraProps, blockType, attributes) {\n\tvar visibleOnMobile = attributes.visibleOnMobile,\n\t    visibleOnDesktop = attributes.visibleOnDesktop;\n\n\n\tif (typeof visibleOnMobile !== 'undefined' && !visibleOnMobile && allowedBlocks.includes(blockType.name)) {\n\t\textraProps.className = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(extraProps.className, 'mobile-hidden');\n\t}\n\tif (typeof visibleOnDesktop !== 'undefined' && !visibleOnDesktop && allowedBlocks.includes(blockType.name)) {\n\t\textraProps.className = __WEBPACK_IMPORTED_MODULE_0_classnames___default()(extraProps.className, 'desktop-hidden');\n\t}\n\n\treturn extraProps;\n}\n\naddFilter('blocks.registerBlockType', 'gb/custom-attributes', addAttributes);\n\naddFilter('editor.BlockEdit', 'gb/custom-advanced-control', withAdvancedControls);\n\naddFilter('blocks.getSaveContent.extraProps', 'gb/applyExtraClass', applyExtraClass);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXR0cmlidXRlcy9hdHRyaWJ1dGVzLmpzP2UzNTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5cbnZhciBfXyA9IHdwLmkxOG4uX187XG52YXIgYWRkRmlsdGVyID0gd3AuaG9va3MuYWRkRmlsdGVyO1xudmFyIEZyYWdtZW50ID0gd3AuZWxlbWVudC5GcmFnbWVudDtcbnZhciBJbnNwZWN0b3JBZHZhbmNlZENvbnRyb2xzID0gd3AuYmxvY2tFZGl0b3IuSW5zcGVjdG9yQWR2YW5jZWRDb250cm9scztcbnZhciBjcmVhdGVIaWdoZXJPcmRlckNvbXBvbmVudCA9IHdwLmNvbXBvc2UuY3JlYXRlSGlnaGVyT3JkZXJDb21wb25lbnQ7XG52YXIgVG9nZ2xlQ29udHJvbCA9IHdwLmNvbXBvbmVudHMuVG9nZ2xlQ29udHJvbDtcblxuXG52YXIgYWxsb3dlZEJsb2NrcyA9IFsnY29yZS9pbWFnZScsICdjb3JlL3BhcmFncmFwaCcsICdjb3JlL2hlYWRpbmcnLCAnY29yZS9zcGFjZXInXTtcblxuZnVuY3Rpb24gYWRkQXR0cmlidXRlcyhzZXR0aW5ncykge1xuXHRpZiAodHlwZW9mIHNldHRpbmdzLmF0dHJpYnV0ZXMgIT09ICd1bmRlZmluZWQnICYmIGFsbG93ZWRCbG9ja3MuaW5jbHVkZXMoc2V0dGluZ3MubmFtZSkpIHtcblx0XHRzZXR0aW5ncy5hdHRyaWJ1dGVzID0gT2JqZWN0LmFzc2lnbihzZXR0aW5ncy5hdHRyaWJ1dGVzLCB7XG5cdFx0XHR2aXNpYmxlT25Nb2JpbGU6IHtcblx0XHRcdFx0dHlwZTogJ2Jvb2xlYW4nLFxuXHRcdFx0XHRkZWZhdWx0OiB0cnVlXG5cdFx0XHR9LFxuXHRcdFx0dmlzaWJsZU9uRGVza3RvcDoge1xuXHRcdFx0XHR0eXBlOiAnYm9vbGVhbicsXG5cdFx0XHRcdGRlZmF1bHQ6IHRydWVcblx0XHRcdH1cblx0XHR9KTtcblx0fVxuXG5cdHJldHVybiBzZXR0aW5ncztcbn1cblxudmFyIHdpdGhBZHZhbmNlZENvbnRyb2xzID0gY3JlYXRlSGlnaGVyT3JkZXJDb21wb25lbnQoZnVuY3Rpb24gKEJsb2NrRWRpdCkge1xuXHRyZXR1cm4gZnVuY3Rpb24gKHByb3BzKSB7XG5cdFx0dmFyIG5hbWUgPSBwcm9wcy5uYW1lLFxuXHRcdCAgICBhdHRyaWJ1dGVzID0gcHJvcHMuYXR0cmlidXRlcyxcblx0XHQgICAgc2V0QXR0cmlidXRlcyA9IHByb3BzLnNldEF0dHJpYnV0ZXMsXG5cdFx0ICAgIGlzU2VsZWN0ZWQgPSBwcm9wcy5pc1NlbGVjdGVkO1xuXHRcdHZhciB2aXNpYmxlT25Nb2JpbGUgPSBhdHRyaWJ1dGVzLnZpc2libGVPbk1vYmlsZSxcblx0XHQgICAgdmlzaWJsZU9uRGVza3RvcCA9IGF0dHJpYnV0ZXMudmlzaWJsZU9uRGVza3RvcDtcblxuXG5cdFx0cmV0dXJuIHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChcblx0XHRcdEZyYWdtZW50LFxuXHRcdFx0bnVsbCxcblx0XHRcdHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChCbG9ja0VkaXQsIHByb3BzKSxcblx0XHRcdGlzU2VsZWN0ZWQgJiYgYWxsb3dlZEJsb2Nrcy5pbmNsdWRlcyhuYW1lKSAmJiB3cC5lbGVtZW50LmNyZWF0ZUVsZW1lbnQoXG5cdFx0XHRcdEluc3BlY3RvckFkdmFuY2VkQ29udHJvbHMsXG5cdFx0XHRcdG51bGwsXG5cdFx0XHRcdHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChUb2dnbGVDb250cm9sLCB7XG5cdFx0XHRcdFx0bGFiZWw6IF9fKCdNb2JpbGUgRGV2aWNlcyBWaXNpYml0eScpLFxuXHRcdFx0XHRcdGNoZWNrZWQ6ICEhdmlzaWJsZU9uTW9iaWxlLFxuXHRcdFx0XHRcdG9uQ2hhbmdlOiBmdW5jdGlvbiBvbkNoYW5nZSgpIHtcblx0XHRcdFx0XHRcdHJldHVybiBzZXRBdHRyaWJ1dGVzKHsgdmlzaWJsZU9uTW9iaWxlOiAhdmlzaWJsZU9uTW9iaWxlIH0pO1xuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0aGVscDogISF2aXNpYmxlT25Nb2JpbGUgPyBfXygnU2hvd2luZyBvbiBtb2JpbGUgZGV2aWNlcy4nKSA6IF9fKCdIaWRkZW4gb24gbW9iaWxlIGRldmljZXMuJylcblx0XHRcdFx0fSksXG5cdFx0XHRcdHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChUb2dnbGVDb250cm9sLCB7XG5cdFx0XHRcdFx0bGFiZWw6IF9fKCdEZXNrdG9wIERldmljZXMgVmlzaWJpdHknKSxcblx0XHRcdFx0XHRjaGVja2VkOiAhIXZpc2libGVPbkRlc2t0b3AsXG5cdFx0XHRcdFx0b25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKCkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHNldEF0dHJpYnV0ZXMoeyB2aXNpYmxlT25EZXNrdG9wOiAhdmlzaWJsZU9uRGVza3RvcCB9KTtcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdGhlbHA6ICEhdmlzaWJsZU9uRGVza3RvcCA/IF9fKCdTaG93aW5nIG9uIGRlc2t0b3AgZGV2aWNlcy4nKSA6IF9fKCdIaWRkZW4gb24gZGVza3RvcCBkZXZpY2VzLicpXG5cdFx0XHRcdH0pXG5cdFx0XHQpXG5cdFx0KTtcblx0fTtcbn0sICd3aXRoQWR2YW5jZWRDb250cm9scycpO1xuXG5mdW5jdGlvbiBhcHBseUV4dHJhQ2xhc3MoZXh0cmFQcm9wcywgYmxvY2tUeXBlLCBhdHRyaWJ1dGVzKSB7XG5cdHZhciB2aXNpYmxlT25Nb2JpbGUgPSBhdHRyaWJ1dGVzLnZpc2libGVPbk1vYmlsZSxcblx0ICAgIHZpc2libGVPbkRlc2t0b3AgPSBhdHRyaWJ1dGVzLnZpc2libGVPbkRlc2t0b3A7XG5cblxuXHRpZiAodHlwZW9mIHZpc2libGVPbk1vYmlsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgIXZpc2libGVPbk1vYmlsZSAmJiBhbGxvd2VkQmxvY2tzLmluY2x1ZGVzKGJsb2NrVHlwZS5uYW1lKSkge1xuXHRcdGV4dHJhUHJvcHMuY2xhc3NOYW1lID0gY2xhc3NuYW1lcyhleHRyYVByb3BzLmNsYXNzTmFtZSwgJ21vYmlsZS1oaWRkZW4nKTtcblx0fVxuXHRpZiAodHlwZW9mIHZpc2libGVPbkRlc2t0b3AgIT09ICd1bmRlZmluZWQnICYmICF2aXNpYmxlT25EZXNrdG9wICYmIGFsbG93ZWRCbG9ja3MuaW5jbHVkZXMoYmxvY2tUeXBlLm5hbWUpKSB7XG5cdFx0ZXh0cmFQcm9wcy5jbGFzc05hbWUgPSBjbGFzc25hbWVzKGV4dHJhUHJvcHMuY2xhc3NOYW1lLCAnZGVza3RvcC1oaWRkZW4nKTtcblx0fVxuXG5cdHJldHVybiBleHRyYVByb3BzO1xufVxuXG5hZGRGaWx0ZXIoJ2Jsb2Nrcy5yZWdpc3RlckJsb2NrVHlwZScsICdnYi9jdXN0b20tYXR0cmlidXRlcycsIGFkZEF0dHJpYnV0ZXMpO1xuXG5hZGRGaWx0ZXIoJ2VkaXRvci5CbG9ja0VkaXQnLCAnZ2IvY3VzdG9tLWFkdmFuY2VkLWNvbnRyb2wnLCB3aXRoQWR2YW5jZWRDb250cm9scyk7XG5cbmFkZEZpbHRlcignYmxvY2tzLmdldFNhdmVDb250ZW50LmV4dHJhUHJvcHMnLCAnZ2IvYXBwbHlFeHRyYUNsYXNzJywgYXBwbHlFeHRyYUNsYXNzKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9hdHRyaWJ1dGVzL2F0dHJpYnV0ZXMuanNcbi8vIG1vZHVsZSBpZCA9IDIxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///21\n");

/***/ }),
/* 22 */
/*!******************************************!*\
  !*** ./node_modules/classnames/index.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (true) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n\t\t\treturn classNames;\n\t\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY2xhc3NuYW1lcy9pbmRleC5qcz8xZDZlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICBDb3B5cmlnaHQgKGMpIDIwMTggSmVkIFdhdHNvbi5cbiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlIChNSVQpLCBzZWVcbiAgaHR0cDovL2plZHdhdHNvbi5naXRodWIuaW8vY2xhc3NuYW1lc1xuKi9cbi8qIGdsb2JhbCBkZWZpbmUgKi9cblxuKGZ1bmN0aW9uICgpIHtcblx0J3VzZSBzdHJpY3QnO1xuXG5cdHZhciBoYXNPd24gPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuXHRmdW5jdGlvbiBjbGFzc05hbWVzKCkge1xuXHRcdHZhciBjbGFzc2VzID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGFyZyA9IGFyZ3VtZW50c1tpXTtcblx0XHRcdGlmICghYXJnKSBjb250aW51ZTtcblxuXHRcdFx0dmFyIGFyZ1R5cGUgPSB0eXBlb2YgYXJnO1xuXG5cdFx0XHRpZiAoYXJnVHlwZSA9PT0gJ3N0cmluZycgfHwgYXJnVHlwZSA9PT0gJ251bWJlcicpIHtcblx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGFyZyk7XG5cdFx0XHR9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoYXJnKSkge1xuXHRcdFx0XHRpZiAoYXJnLmxlbmd0aCkge1xuXHRcdFx0XHRcdHZhciBpbm5lciA9IGNsYXNzTmFtZXMuYXBwbHkobnVsbCwgYXJnKTtcblx0XHRcdFx0XHRpZiAoaW5uZXIpIHtcblx0XHRcdFx0XHRcdGNsYXNzZXMucHVzaChpbm5lcik7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2UgaWYgKGFyZ1R5cGUgPT09ICdvYmplY3QnKSB7XG5cdFx0XHRcdGlmIChhcmcudG9TdHJpbmcgPT09IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcpIHtcblx0XHRcdFx0XHRmb3IgKHZhciBrZXkgaW4gYXJnKSB7XG5cdFx0XHRcdFx0XHRpZiAoaGFzT3duLmNhbGwoYXJnLCBrZXkpICYmIGFyZ1trZXldKSB7XG5cdFx0XHRcdFx0XHRcdGNsYXNzZXMucHVzaChrZXkpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRjbGFzc2VzLnB1c2goYXJnLnRvU3RyaW5nKCkpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNsYXNzZXMuam9pbignICcpO1xuXHR9XG5cblx0aWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7XG5cdFx0Y2xhc3NOYW1lcy5kZWZhdWx0ID0gY2xhc3NOYW1lcztcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGNsYXNzTmFtZXM7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZGVmaW5lLmFtZCA9PT0gJ29iamVjdCcgJiYgZGVmaW5lLmFtZCkge1xuXHRcdC8vIHJlZ2lzdGVyIGFzICdjbGFzc25hbWVzJywgY29uc2lzdGVudCB3aXRoIG5wbSBwYWNrYWdlIG5hbWVcblx0XHRkZWZpbmUoJ2NsYXNzbmFtZXMnLCBbXSwgZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIGNsYXNzTmFtZXM7XG5cdFx0fSk7XG5cdH0gZWxzZSB7XG5cdFx0d2luZG93LmNsYXNzTmFtZXMgPSBjbGFzc05hbWVzO1xuXHR9XG59KCkpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY2xhc3NuYW1lcy9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMjJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///22\n");

/***/ }),
/* 23 */
/*!************************************!*\
  !*** ./src/accordion/accordion.js ***!
  \************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__editor_scss__ = __webpack_require__(/*! ./editor.scss */ 24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__editor_scss__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__style_scss__ = __webpack_require__(/*! ./style.scss */ 25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__style_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__style_scss__);\n\n\n\n// import { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n\nvar __ = wp.i18n.__;\nvar registerBlockType = wp.blocks.registerBlockType;\nvar _wp$blockEditor = wp.blockEditor,\n    useBlockProps = _wp$blockEditor.useBlockProps,\n    InnerBlocks = _wp$blockEditor.InnerBlocks,\n    RichText = _wp$blockEditor.RichText; // InspectorControls\n// const { TextControl } = wp.components;\n// const { serverSideRender: ServerSideRender } = wp;\n// const { Panel, PanelBody, PanelRow } = wp.components;\n\nvar _wordpressIcons = '@wordpress/icons',\n    more = _wordpressIcons.more;\n\n// const ALLOWED_BLOCKS = [ 'core/cover' ];\n\nregisterBlockType('gb/block-accordion', {\n\tapiVersion: 2,\n\ttitle: __('Accordion'),\n\ticon: 'arrow-down-alt2',\n\tcategory: 'common',\n\tkeywords: [__('Accordion')],\n\tattributes: {\n\t\ttitle: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'text',\n\t\t\tselector: '.title'\n\t\t}\n\t},\n\n\tedit: function edit(_ref) {\n\t\tvar attributes = _ref.attributes,\n\t\t    setAttributes = _ref.setAttributes;\n\n\t\tvar blockProps = useBlockProps();\n\t\tvar title = attributes.title;\n\n\n\t\treturn wp.element.createElement(\n\t\t\t'div',\n\t\t\tblockProps,\n\t\t\twp.element.createElement(RichText, {\n\t\t\t\ttagName: 'h2',\n\t\t\t\tvalue: title,\n\t\t\t\tallowedFormats: ['core/bold', 'core/italic'],\n\t\t\t\tonChange: function onChange(title) {\n\t\t\t\t\treturn setAttributes({ title: title });\n\t\t\t\t},\n\t\t\t\tplaceholder: __('Heading...'),\n\t\t\t\tclassName: 'title'\n\t\t\t}),\n\t\t\twp.element.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: 'content' },\n\t\t\t\twp.element.createElement(InnerBlocks, null)\n\t\t\t)\n\t\t);\n\t},\n\n\tsave: function save(_ref2) {\n\t\tvar attributes = _ref2.attributes;\n\n\t\tvar blockProps = useBlockProps.save();\n\t\tvar title = attributes.title;\n\n\t\treturn wp.element.createElement(\n\t\t\t'div',\n\t\t\tblockProps,\n\t\t\twp.element.createElement(RichText.Content, { className: 'title', tagName: 'h2', value: title }),\n\t\t\twp.element.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: 'content' },\n\t\t\t\twp.element.createElement(InnerBlocks.Content, null)\n\t\t\t)\n\t\t);\n\t}\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYWNjb3JkaW9uL2FjY29yZGlvbi5qcz8yM2MzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnLi9lZGl0b3Iuc2Nzcyc7XG5pbXBvcnQgJy4vc3R5bGUuc2Nzcyc7XG5cbi8vIGltcG9ydCB7IEdvb2dsZU1hcCwgTG9hZFNjcmlwdCwgTWFya2VyIH0gZnJvbSAnQHJlYWN0LWdvb2dsZS1tYXBzL2FwaSc7XG5cbnZhciBfXyA9IHdwLmkxOG4uX187XG52YXIgcmVnaXN0ZXJCbG9ja1R5cGUgPSB3cC5ibG9ja3MucmVnaXN0ZXJCbG9ja1R5cGU7XG52YXIgX3dwJGJsb2NrRWRpdG9yID0gd3AuYmxvY2tFZGl0b3IsXG4gICAgdXNlQmxvY2tQcm9wcyA9IF93cCRibG9ja0VkaXRvci51c2VCbG9ja1Byb3BzLFxuICAgIElubmVyQmxvY2tzID0gX3dwJGJsb2NrRWRpdG9yLklubmVyQmxvY2tzLFxuICAgIFJpY2hUZXh0ID0gX3dwJGJsb2NrRWRpdG9yLlJpY2hUZXh0OyAvLyBJbnNwZWN0b3JDb250cm9sc1xuLy8gY29uc3QgeyBUZXh0Q29udHJvbCB9ID0gd3AuY29tcG9uZW50cztcbi8vIGNvbnN0IHsgc2VydmVyU2lkZVJlbmRlcjogU2VydmVyU2lkZVJlbmRlciB9ID0gd3A7XG4vLyBjb25zdCB7IFBhbmVsLCBQYW5lbEJvZHksIFBhbmVsUm93IH0gPSB3cC5jb21wb25lbnRzO1xuXG52YXIgX3dvcmRwcmVzc0ljb25zID0gJ0B3b3JkcHJlc3MvaWNvbnMnLFxuICAgIG1vcmUgPSBfd29yZHByZXNzSWNvbnMubW9yZTtcblxuLy8gY29uc3QgQUxMT1dFRF9CTE9DS1MgPSBbICdjb3JlL2NvdmVyJyBdO1xuXG5yZWdpc3RlckJsb2NrVHlwZSgnZ2IvYmxvY2stYWNjb3JkaW9uJywge1xuXHRhcGlWZXJzaW9uOiAyLFxuXHR0aXRsZTogX18oJ0FjY29yZGlvbicpLFxuXHRpY29uOiAnYXJyb3ctZG93bi1hbHQyJyxcblx0Y2F0ZWdvcnk6ICdjb21tb24nLFxuXHRrZXl3b3JkczogW19fKCdBY2NvcmRpb24nKV0sXG5cdGF0dHJpYnV0ZXM6IHtcblx0XHR0aXRsZToge1xuXHRcdFx0dHlwZTogJ3N0cmluZycsXG5cdFx0XHRzb3VyY2U6ICd0ZXh0Jyxcblx0XHRcdHNlbGVjdG9yOiAnLnRpdGxlJ1xuXHRcdH1cblx0fSxcblxuXHRlZGl0OiBmdW5jdGlvbiBlZGl0KF9yZWYpIHtcblx0XHR2YXIgYXR0cmlidXRlcyA9IF9yZWYuYXR0cmlidXRlcyxcblx0XHQgICAgc2V0QXR0cmlidXRlcyA9IF9yZWYuc2V0QXR0cmlidXRlcztcblxuXHRcdHZhciBibG9ja1Byb3BzID0gdXNlQmxvY2tQcm9wcygpO1xuXHRcdHZhciB0aXRsZSA9IGF0dHJpYnV0ZXMudGl0bGU7XG5cblxuXHRcdHJldHVybiB3cC5lbGVtZW50LmNyZWF0ZUVsZW1lbnQoXG5cdFx0XHQnZGl2Jyxcblx0XHRcdGJsb2NrUHJvcHMsXG5cdFx0XHR3cC5lbGVtZW50LmNyZWF0ZUVsZW1lbnQoUmljaFRleHQsIHtcblx0XHRcdFx0dGFnTmFtZTogJ2gyJyxcblx0XHRcdFx0dmFsdWU6IHRpdGxlLFxuXHRcdFx0XHRhbGxvd2VkRm9ybWF0czogWydjb3JlL2JvbGQnLCAnY29yZS9pdGFsaWMnXSxcblx0XHRcdFx0b25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKHRpdGxlKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHNldEF0dHJpYnV0ZXMoeyB0aXRsZTogdGl0bGUgfSk7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdHBsYWNlaG9sZGVyOiBfXygnSGVhZGluZy4uLicpLFxuXHRcdFx0XHRjbGFzc05hbWU6ICd0aXRsZSdcblx0XHRcdH0pLFxuXHRcdFx0d3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KFxuXHRcdFx0XHQnZGl2Jyxcblx0XHRcdFx0eyBjbGFzc05hbWU6ICdjb250ZW50JyB9LFxuXHRcdFx0XHR3cC5lbGVtZW50LmNyZWF0ZUVsZW1lbnQoSW5uZXJCbG9ja3MsIG51bGwpXG5cdFx0XHQpXG5cdFx0KTtcblx0fSxcblxuXHRzYXZlOiBmdW5jdGlvbiBzYXZlKF9yZWYyKSB7XG5cdFx0dmFyIGF0dHJpYnV0ZXMgPSBfcmVmMi5hdHRyaWJ1dGVzO1xuXG5cdFx0dmFyIGJsb2NrUHJvcHMgPSB1c2VCbG9ja1Byb3BzLnNhdmUoKTtcblx0XHR2YXIgdGl0bGUgPSBhdHRyaWJ1dGVzLnRpdGxlO1xuXG5cdFx0cmV0dXJuIHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChcblx0XHRcdCdkaXYnLFxuXHRcdFx0YmxvY2tQcm9wcyxcblx0XHRcdHdwLmVsZW1lbnQuY3JlYXRlRWxlbWVudChSaWNoVGV4dC5Db250ZW50LCB7IGNsYXNzTmFtZTogJ3RpdGxlJywgdGFnTmFtZTogJ2gyJywgdmFsdWU6IHRpdGxlIH0pLFxuXHRcdFx0d3AuZWxlbWVudC5jcmVhdGVFbGVtZW50KFxuXHRcdFx0XHQnZGl2Jyxcblx0XHRcdFx0eyBjbGFzc05hbWU6ICdjb250ZW50JyB9LFxuXHRcdFx0XHR3cC5lbGVtZW50LmNyZWF0ZUVsZW1lbnQoSW5uZXJCbG9ja3MuQ29udGVudCwgbnVsbClcblx0XHRcdClcblx0XHQpO1xuXHR9XG59KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9hY2NvcmRpb24vYWNjb3JkaW9uLmpzXG4vLyBtb2R1bGUgaWQgPSAyM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///23\n");

/***/ }),
/* 24 */
/*!***********************************!*\
  !*** ./src/accordion/editor.scss ***!
  \***********************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYWNjb3JkaW9uL2VkaXRvci5zY3NzPzRiMTciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9hY2NvcmRpb24vZWRpdG9yLnNjc3Ncbi8vIG1vZHVsZSBpZCA9IDI0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///24\n");

/***/ }),
/* 25 */
/*!**********************************!*\
  !*** ./src/accordion/style.scss ***!
  \**********************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYWNjb3JkaW9uL3N0eWxlLnNjc3M/OGNlMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2FjY29yZGlvbi9zdHlsZS5zY3NzXG4vLyBtb2R1bGUgaWQgPSAyNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///25\n");

/***/ })
/******/ ]);